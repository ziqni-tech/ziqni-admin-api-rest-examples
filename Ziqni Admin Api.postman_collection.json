{
	"info": {
		"_postman_id": "78c6210f-34bd-44c5-a0cb-c1a86498d7c2",
		"name": "Ziqni Admin Api",
		"description": "Gamification done right for your business and customers.\n\nZiqni Admin Api Services are used to manage your Ziqni project, tournaments servers, missions, achievements and all other features offered by the platform.\n\nContact Support:  \nName: Support Team  \nEmail: [support@ziqni.com](mailto:support@ziqni.com)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "products",
			"item": [
				{
					"name": "Create products",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// parse request",
									"var requestJson = JSON.parse(request.data);",
									"",
									"// get the length of request body",
									"var requestLength = requestJson.length;",
									"for (i = 0; i < requestLength; i++) {",
									"    // set the name variable",
									"    pm.collectionVariables.set(\"productName\".concat([i]), requestJson[i].name);",
									"    // set the product reference id",
									"    pm.collectionVariables.set(\"productRefId\".concat([i]), requestJson[i].productRefId);",
									"}",
									"",
									"",
									"// parse response",
									"var responseJson = JSON.parse(responseBody);",
									"",
									"// get the length of results",
									"var responseLength = responseJson.results.length;",
									"for (i = 0; i < responseLength; i++) {",
									"    // set the product id",
									"    pm.collectionVariables.set(\"productId\".concat([i]), responseJson.results[i].id);",
									"",
									"}",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"tags\": null,\n        \"productRefId\": \"10010\",\n        \"name\": \"test1\",\n        \"description\": null,\n        \"adjustmentFactor\": 1.0,\n        \"actionTypeAdjustmentFactors\": [],\n        \"customFields\": {},\n        \"metadata\": {},\n        \"translations\": [\n            {\n                \"languageKey\": \"Wayuu\",\n                \"translations\": [\n                    {\n                        \"fieldName\": \"name\",\n                        \"text\": \"test1\"\n                    }\n                ]\n            },\n            {\n                \"languageKey\": \"Tunisian Arabic\",\n                \"translations\": [\n                    {\n                        \"fieldName\": \"name\",\n                        \"text\": \"test-temp\"\n                    }\n                ]\n            },\n            {\n                \"languageKey\": \"Interlingua\",\n                \"translations\": [\n                    {\n                        \"fieldName\": \"name\",\n                        \"text\": \"Level-Up\"\n                    }\n                ]\n            }\n        ]\n    },\n    {\n        \"tags\": null,\n        \"productRefId\": \"10009\",\n        \"name\": \"test1\",\n        \"description\": null,\n        \"adjustmentFactor\": 1.0,\n        \"actionTypeAdjustmentFactors\": [],\n        \"customFields\": {},\n        \"metadata\": {},\n        \"translations\": [\n            {\n                \"languageKey\": \"Wayuu\",\n                \"translations\": [\n                    {\n                        \"fieldName\": \"name\",\n                        \"text\": \"test1\"\n                    }\n                ]\n            },\n            {\n                \"languageKey\": \"Tunisian Arabic\",\n                \"translations\": [\n                    {\n                        \"fieldName\": \"name\",\n                        \"text\": \"test-temp\"\n                    }\n                ]\n            },\n            {\n                \"languageKey\": \"Interlingua\",\n                \"translations\": [\n                    {\n                        \"fieldName\": \"name\",\n                        \"text\": \"Level-Up\"\n                    }\n                ]\n            }\n        ]\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/products",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products"
							]
						},
						"description": "Use this endpoint to create products.\n\nThe request body accepts a list of CreateProductRequest."
					},
					"response": []
				},
				{
					"name": "Get products",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/products?id={{productId0}},{{productId1}}&_limit={{defaultLimit}}&_skip={{defaultSkip}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products"
							],
							"query": [
								{
									"key": "id",
									"value": "{{productId0}},{{productId1}}",
									"description": "The unique identifiers for products"
								},
								{
									"key": "_limit",
									"value": "{{defaultLimit}}",
									"description": "Limit the number of records to return"
								},
								{
									"key": "_skip",
									"value": "{{defaultSkip}}",
									"description": "Skip the returned records found and return the next batch of records"
								}
							]
						},
						"description": "Returns a list of products."
					},
					"response": []
				},
				{
					"name": "Get products by reference ids",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/products/find-by-ref-identifiers/?refIds={{productRefId0}},{{productRefId1}}&_limit={{defaultLimit}}&_skip={{defaultSkip}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"find-by-ref-identifiers",
								""
							],
							"query": [
								{
									"key": "refIds",
									"value": "{{productRefId0}},{{productRefId1}}",
									"description": "The reference ids  of products"
								},
								{
									"key": "_limit",
									"value": "{{defaultLimit}}",
									"description": "Limit the returned total records found"
								},
								{
									"key": "_skip",
									"value": "{{defaultSkip}}",
									"description": "Skip the returned records found and return the next batch of records"
								}
							]
						},
						"description": "Get products by using their reference ids."
					},
					"response": []
				},
				{
					"name": "Update products",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// parse request",
									"var requestJson = JSON.parse(request.data);",
									"",
									"// set the name variable",
									"pm.collectionVariables.set(\"productName0\", requestJson[0].name);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"id\": \"{{productId0}}\",\n        \"metadata\": {\n            \"key1\": \"value1\",\n            \"key2\": \"value2\"\n        },\n        \"tags\": [],\n        \"customFields\": {\n            \"customField1\": \"customFieldValue1\",\n            \"customField2\": \"customFieldValue2\"\n        },\n        \"name\": \"new-name\",\n        \"description\": \"new-description\",\n        \"adjustmentFactor\": 28.55,\n        \"actionTypeAdjustmentFactors\": []\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/products",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products"
							]
						},
						"description": "Update existing products."
					},
					"response": []
				},
				{
					"name": "Get products by query",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"name\",\n            \"queryValues\": [\n                \"{{productName0}}\"\n            ]\n        }\n    ],\n    \"hasNoValue\": [\n        \"tags\"\n    ],\n    \"skip\": 0,\n    \"limit\": 20\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/products/query",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"query"
							]
						},
						"description": "Retrieve Products from Ziqni database by unique Product ID's or any other POST body parameters using the POST method"
					},
					"response": []
				},
				{
					"name": "Delete products",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/products?id={{productId0}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products"
							],
							"query": [
								{
									"key": "id",
									"value": "{{productId0}}",
									"description": "The unique identifiers for products"
								}
							]
						},
						"description": "Delete products for specified identifiers."
					},
					"response": []
				},
				{
					"name": "Delete products by query",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"productRefId\",\n            \"queryValues\": [\n                \"{{productRefId1}}\"\n            ]\n        }\n    ],\n    \"skip\": 0,\n    \"limit\": 20\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/products/delete",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"delete"
							]
						},
						"description": "Delete Products from Ziqni database by unique Product ID's or any other POST body parameters using the POST method"
					},
					"response": []
				}
			],
			"description": "Products API enables you to manage products in Ziqni."
		},
		{
			"name": "members",
			"item": [
				{
					"name": "Get members",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/members?id={{memberId0}},{{memberId1}}&_limit={{defaultLimit}}&_skip={{defaultSkip}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"members"
							],
							"query": [
								{
									"key": "id",
									"value": "{{memberId0}},{{memberId1}}"
								},
								{
									"key": "_limit",
									"value": "{{defaultLimit}}",
									"description": "Limit the returned total records found"
								},
								{
									"key": "_skip",
									"value": "{{defaultSkip}}",
									"description": "Skip the returned records found and return the next batch of records"
								}
							]
						},
						"description": "Returns a list of Members. This assumes that members have first been uploaded via a POST request or web console"
					},
					"response": []
				},
				{
					"name": "Update members",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"id\": \"{{memberId0}}\",\n        \"name\": \"updated name\",\n        \"memberType\": \"Individual\",\n        \"teamMembers\": [],\n        \"addConstraints\": [\n            \"disabled\"\n        ],\n        \"timeZoneOffset\": \"UTC\",\n        \"customFields\": {\n            \"test_cf_term7b021076-e317-4074-9028-9e33af2f7956\": \"customFieldValue1\"\n        },\n        \"metadata\": {\n            \"metaKey1\": \"metaValue1\",\n            \"metaKey2\": \"metaValue2\"\n        },\n        \"tags\": [\n            \"ziqniTagId\",\n            \"ziqniTagId\"\n        ]\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/members",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"members"
							]
						},
						"description": "Update existing Members in the Ziqni database"
					},
					"response": []
				},
				{
					"name": "Create members",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n    \"name\": \"name\",\n    \"memberRefId\": \"10001\",\n    \"memberType\": \"Individual\",\n    \"teamMembers\": null,\n    \"addConstraints\": [\n        \"disabled\"\n    ],\n    \"timeZoneOffset\": \"UTC\",\n    \"customFields\": {\n        \"test_cf_term7b021076-e317-4074-9028-9e33af2f7956\": \"customFieldValue1\"\n    },\n    \"metadata\": {},\n    \"tags\": null\n},\n{\n    \"name\": \"name1\",\n    \"memberRefId\": \"10002\",\n    \"memberType\": \"Individual\",\n    \"teamMembers\": null,\n    \"addConstraints\": [\n        \"disabled\"\n    ],\n    \"timeZoneOffset\": \"UTC\",\n    \"customFields\": {\n        \"test_cf_term7b021076-e317-4074-9028-9e33af2f7956\": \"customFieldValue1\"\n    },\n    \"metadata\": {},\n    \"tags\": null\n}\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/members",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"members"
							]
						},
						"description": "Create new Members in the Ziqni database"
					},
					"response": []
				},
				{
					"name": "Delete members",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/members?id={{memberId0}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"members"
							],
							"query": [
								{
									"key": "id",
									"value": "{{memberId0}}"
								}
							]
						},
						"description": "Delete Members for a given identifier specified"
					},
					"response": []
				},
				{
					"name": "Get members by query",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"name\",\n            \"queryValues\": [\n                \"{{memberName0}}\"\n            ]\n        }\n    ],\n    \"hasNoValue\": [\n        \"tags\"\n    ],\n    \"skip\": 0,\n    \"limit\": 20\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/members/query",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"members",
								"query"
							]
						},
						"description": "Retrieve Members from Ziqni database by unique Member ID's or any other POST body parameters using the POST method"
					},
					"response": []
				},
				{
					"name": "Delete members by query",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"memberRefId\",\n            \"queryValues\": [\n                \"{{memberRefId1}}\"\n            ]\n        }\n    ],\n    \"skip\": 0,\n    \"limit\": 20\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/members/delete",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"members",
								"delete"
							]
						},
						"description": "Delete Members from Ziqni database by unique Members ID's or any other POST body parameters using the POST method"
					},
					"response": []
				},
				{
					"name": "Get members by ref id",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/members/find-by-ref-identifiers?refIds={{memberRefId0}}, {{memberRefId1}}&_limit={{defaultLimit}}&_skip={{defaultSkip}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"members",
								"find-by-ref-identifiers"
							],
							"query": [
								{
									"key": "refIds",
									"value": "{{memberRefId0}}, {{memberRefId1}}",
									"description": "The reference ids  of the resources"
								},
								{
									"key": "_limit",
									"value": "{{defaultLimit}}",
									"description": "Limit the returned total records found"
								},
								{
									"key": "_skip",
									"value": "{{defaultSkip}}",
									"description": "Skip the returned records found and return the next batch of records"
								}
							]
						},
						"description": "Returns a list of Members. This assumes that members have first been uploaded via a POST request or web console"
					},
					"response": []
				}
			]
		},
		{
			"name": "competitions",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "NOT AVAILABLE IN CURRENT RELEASE",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/competitions/:id/clone",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"competitions",
										":id",
										"clone"
									],
									"variable": [
										{
											"key": "id",
											"value": "repr",
											"description": "(Required) Unique identifier of the resource"
										}
									]
								},
								"description": "Clones a Competition for the identifier provided"
							},
							"response": [
								{
									"name": "A modeled response of a Competition that can be used for Competition creation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/competitions/:id/clone",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"competitions",
												":id",
												"clone"
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A modeled response of a Competition that can be used for Competition creation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/competitions/:id/clone",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"competitions",
												":id",
												"clone"
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A modeled response of a Competition that can be used for Competition creation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/competitions/:id/clone",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"competitions",
												":id",
												"clone"
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A modeled response of a Competition that can be used for Competition creation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/competitions/:id/clone",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"competitions",
												":id",
												"clone"
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A modeled response of a Competition that can be used for Competition creation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/competitions/:id/clone",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"competitions",
												":id",
												"clone"
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A modeled response of a Competition that can be used for Competition creation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/competitions/:id/clone",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"competitions",
												":id",
												"clone"
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Request Entity Too Large",
									"code": 413,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A modeled response of a Competition that can be used for Competition creation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/competitions/:id/clone",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"competitions",
												":id",
												"clone"
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A modeled response of a Competition that can be used for Competition creation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/competitions/:id/clone",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"competitions",
												":id",
												"clone"
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Not Implemented",
									"code": 501,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A modeled response of a Competition that can be used for Competition creation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/competitions/:id/clone",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"competitions",
												":id",
												"clone"
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "NOT AVAILABLE IN CURRENT RELEASE",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/competitions/:id/leaderboards?_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"competitions",
										":id",
										"leaderboards"
									],
									"query": [
										{
											"key": "_limit",
											"value": "-48278460",
											"description": "Limit the returned total records found"
										},
										{
											"key": "_skip",
											"value": "-48278460",
											"description": "Skip the returned records found and return the next batch of records"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "repr",
											"description": "(Required) Unique identifier of the resource"
										}
									]
								},
								"description": "Returns a list of Leaderborads for the Competition id provided"
							},
							"response": [
								{
									"name": "A list of Contests Leaderboards and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/competitions/:id/leaderboards?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"competitions",
												":id",
												"leaderboards"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of Contests Leaderboards and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/competitions/:id/leaderboards?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"competitions",
												":id",
												"leaderboards"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of Contests Leaderboards and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/competitions/:id/leaderboards?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"competitions",
												":id",
												"leaderboards"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of Contests Leaderboards and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/competitions/:id/leaderboards?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"competitions",
												":id",
												"leaderboards"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of Contests Leaderboards and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/competitions/:id/leaderboards?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"competitions",
												":id",
												"leaderboards"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of Contests Leaderboards and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/competitions/:id/leaderboards?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"competitions",
												":id",
												"leaderboards"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Request Entity Too Large",
									"code": 413,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of Contests Leaderboards and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/competitions/:id/leaderboards?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"competitions",
												":id",
												"leaderboards"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of Contests Leaderboards and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/competitions/:id/leaderboards?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"competitions",
												":id",
												"leaderboards"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Not Implemented",
									"code": 501,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of Contests Leaderboards and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/competitions/:id/leaderboards?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"competitions",
												":id",
												"leaderboards"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "NOT AVAILABLE IN CURRENT RELEASE",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/competitions/:id/entries?_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"competitions",
										":id",
										"entries"
									],
									"query": [
										{
											"key": "_limit",
											"value": "-48278460",
											"description": "Limit the returned total records found"
										},
										{
											"key": "_skip",
											"value": "-48278460",
											"description": "Skip the returned records found and return the next batch of records"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "repr",
											"description": "(Required) Unique identifier of the resource"
										}
									]
								},
								"description": "Returns all Entries for the Competition id provided"
							},
							"response": [
								{
									"name": "A list of Entrants for the competition/contest and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/competitions/:id/entries?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"competitions",
												":id",
												"entries"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of Entrants for the competition/contest and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/competitions/:id/entries?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"competitions",
												":id",
												"entries"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of Entrants for the competition/contest and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/competitions/:id/entries?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"competitions",
												":id",
												"entries"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of Entrants for the competition/contest and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/competitions/:id/entries?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"competitions",
												":id",
												"entries"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of Entrants for the competition/contest and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/competitions/:id/entries?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"competitions",
												":id",
												"entries"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of Entrants for the competition/contest and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/competitions/:id/entries?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"competitions",
												":id",
												"entries"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Request Entity Too Large",
									"code": 413,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of Entrants for the competition/contest and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/competitions/:id/entries?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"competitions",
												":id",
												"entries"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of Entrants for the competition/contest and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/competitions/:id/entries?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"competitions",
												":id",
												"entries"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Not Implemented",
									"code": 501,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of Entrants for the competition/contest and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/competitions/:id/entries?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"competitions",
												":id",
												"entries"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "NOT AVAILABLE IN CURRENT RELEASE",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/competitions/:id/contests?_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"competitions",
										":id",
										"contests"
									],
									"query": [
										{
											"key": "_limit",
											"value": "-48278460",
											"description": "Limit the returned total records found"
										},
										{
											"key": "_skip",
											"value": "-48278460",
											"description": "Skip the returned records found and return the next batch of records"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "repr",
											"description": "(Required) Unique identifier of the resource"
										}
									]
								},
								"description": "Returns all Contests for the Competition id provided"
							},
							"response": [
								{
									"name": "Simplified contest response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/competitions/:id/contests?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"competitions",
												":id",
												"contests"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "Simplified contest response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/competitions/:id/contests?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"competitions",
												":id",
												"contests"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "Simplified contest response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/competitions/:id/contests?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"competitions",
												":id",
												"contests"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "Simplified contest response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/competitions/:id/contests?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"competitions",
												":id",
												"contests"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "Simplified contest response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/competitions/:id/contests?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"competitions",
												":id",
												"contests"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "Simplified contest response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/competitions/:id/contests?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"competitions",
												":id",
												"contests"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Request Entity Too Large",
									"code": 413,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "Simplified contest response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/competitions/:id/contests?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"competitions",
												":id",
												"contests"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "Simplified contest response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/competitions/:id/contests?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"competitions",
												":id",
												"contests"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Not Implemented",
									"code": 501,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "Simplified contest response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/competitions/:id/contests?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"competitions",
												":id",
												"contests"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "NOT AVAILABLE IN CURRENT RELEASE",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/competitions/:id/brackets?_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"competitions",
										":id",
										"brackets"
									],
									"query": [
										{
											"key": "_limit",
											"value": "-48278460",
											"description": "Limit the returned total records found"
										},
										{
											"key": "_skip",
											"value": "-48278460",
											"description": "Skip the returned records found and return the next batch of records"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "repr",
											"description": "(Required) Unique identifier of the resource"
										}
									]
								},
								"description": "Returns all Contests for the Competition id provided in Brackets"
							},
							"response": [
								{
									"name": "A list Contests with rewards in Brackets for the competition id requested and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/competitions/:id/brackets?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"competitions",
												":id",
												"brackets"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list Contests with rewards in Brackets for the competition id requested and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/competitions/:id/brackets?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"competitions",
												":id",
												"brackets"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list Contests with rewards in Brackets for the competition id requested and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/competitions/:id/brackets?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"competitions",
												":id",
												"brackets"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list Contests with rewards in Brackets for the competition id requested and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/competitions/:id/brackets?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"competitions",
												":id",
												"brackets"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list Contests with rewards in Brackets for the competition id requested and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/competitions/:id/brackets?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"competitions",
												":id",
												"brackets"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list Contests with rewards in Brackets for the competition id requested and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/competitions/:id/brackets?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"competitions",
												":id",
												"brackets"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Request Entity Too Large",
									"code": 413,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list Contests with rewards in Brackets for the competition id requested and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/competitions/:id/brackets?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"competitions",
												":id",
												"brackets"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list Contests with rewards in Brackets for the competition id requested and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/competitions/:id/brackets?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"competitions",
												":id",
												"brackets"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Not Implemented",
									"code": 501,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list Contests with rewards in Brackets for the competition id requested and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/competitions/:id/brackets?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"competitions",
												":id",
												"brackets"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "get Competitions",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/competitions?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"competitions"
							],
							"query": [
								{
									"key": "id",
									"value": "eiusmod sed c",
									"description": "The unique identifiers of the resources"
								},
								{
									"key": "id",
									"value": "deserunt",
									"description": "The unique identifiers of the resources"
								},
								{
									"key": "_limit",
									"value": "-48278460",
									"description": "Limit the returned total records found"
								},
								{
									"key": "_skip",
									"value": "-48278460",
									"description": "Skip the returned records found and return the next batch of records"
								}
							]
						},
						"description": "Returns a list of Competitions. This assumes that competitions have first been uploaded via a POST request or web console"
					},
					"response": [
						{
							"name": "A list of competitions and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/competitions?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"competitions"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of competitions and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/competitions?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"competitions"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of competitions and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/competitions?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"competitions"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of competitions and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/competitions?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"competitions"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of competitions and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/competitions?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"competitions"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of competitions and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/competitions?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"competitions"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of competitions and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/competitions?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"competitions"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of competitions and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/competitions?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"competitions"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of competitions and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/competitions?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"competitions"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "update Competitions",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"competitionType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"numberOfRounds\": 64679541,\n    \"numberOfGroupStages\": -12784839,\n    \"name\": \"Summer fest\",\n    \"description\": \"A competition that is for 1 day\",\n    \"termsAndConditions\": \"Participate to win\",\n    \"entrantMemberType\": \"Ut dolor cupidatat\",\n    \"maxNumberOfEntrants\": 55804550,\n    \"minNumberOfEntrants\": -21334530,\n    \"scheduledStartDate\": \"2019-09-25T15:47:00.000+0000\",\n    \"scheduledEndDate\": \"2019-09-25T15:47:00.000+0000\",\n    \"dependantOn\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"translations\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"constraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"productIds\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"updateRewards\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"createRewards\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"deleteRewards\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"createContests\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"updateContests\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/competitions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"competitions"
							]
						},
						"description": "Update an existing Competition in the Ziqni database"
					},
					"response": [
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"competitionType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"numberOfRounds\": -92800532,\n    \"numberOfGroupStages\": 34763623,\n    \"name\": \"Summer fest\",\n    \"description\": \"A competition that is for 1 day\",\n    \"termsAndConditions\": \"Participate to win\",\n    \"entrantMemberType\": \"non Ut culpa\",\n    \"maxNumberOfEntrants\": -11198463,\n    \"minNumberOfEntrants\": 86446672,\n    \"scheduledStartDate\": \"2019-09-25T15:47:00.000+0000\",\n    \"scheduledEndDate\": \"2019-09-25T15:47:00.000+0000\",\n    \"dependantOn\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"translations\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"constraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"productIds\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"updateRewards\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"createRewards\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"deleteRewards\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"createContests\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"updateContests\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/competitions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"competitions"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "Accepted",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"competitionType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"numberOfRounds\": -92800532,\n    \"numberOfGroupStages\": 34763623,\n    \"name\": \"Summer fest\",\n    \"description\": \"A competition that is for 1 day\",\n    \"termsAndConditions\": \"Participate to win\",\n    \"entrantMemberType\": \"non Ut culpa\",\n    \"maxNumberOfEntrants\": -11198463,\n    \"minNumberOfEntrants\": 86446672,\n    \"scheduledStartDate\": \"2019-09-25T15:47:00.000+0000\",\n    \"scheduledEndDate\": \"2019-09-25T15:47:00.000+0000\",\n    \"dependantOn\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"translations\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"constraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"productIds\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"updateRewards\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"createRewards\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"deleteRewards\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"createContests\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"updateContests\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/competitions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"competitions"
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"competitionType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"numberOfRounds\": -92800532,\n    \"numberOfGroupStages\": 34763623,\n    \"name\": \"Summer fest\",\n    \"description\": \"A competition that is for 1 day\",\n    \"termsAndConditions\": \"Participate to win\",\n    \"entrantMemberType\": \"non Ut culpa\",\n    \"maxNumberOfEntrants\": -11198463,\n    \"minNumberOfEntrants\": 86446672,\n    \"scheduledStartDate\": \"2019-09-25T15:47:00.000+0000\",\n    \"scheduledEndDate\": \"2019-09-25T15:47:00.000+0000\",\n    \"dependantOn\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"translations\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"constraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"productIds\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"updateRewards\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"createRewards\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"deleteRewards\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"createContests\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"updateContests\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/competitions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"competitions"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"competitionType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"numberOfRounds\": -92800532,\n    \"numberOfGroupStages\": 34763623,\n    \"name\": \"Summer fest\",\n    \"description\": \"A competition that is for 1 day\",\n    \"termsAndConditions\": \"Participate to win\",\n    \"entrantMemberType\": \"non Ut culpa\",\n    \"maxNumberOfEntrants\": -11198463,\n    \"minNumberOfEntrants\": 86446672,\n    \"scheduledStartDate\": \"2019-09-25T15:47:00.000+0000\",\n    \"scheduledEndDate\": \"2019-09-25T15:47:00.000+0000\",\n    \"dependantOn\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"translations\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"constraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"productIds\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"updateRewards\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"createRewards\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"deleteRewards\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"createContests\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"updateContests\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/competitions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"competitions"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"competitionType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"numberOfRounds\": -92800532,\n    \"numberOfGroupStages\": 34763623,\n    \"name\": \"Summer fest\",\n    \"description\": \"A competition that is for 1 day\",\n    \"termsAndConditions\": \"Participate to win\",\n    \"entrantMemberType\": \"non Ut culpa\",\n    \"maxNumberOfEntrants\": -11198463,\n    \"minNumberOfEntrants\": 86446672,\n    \"scheduledStartDate\": \"2019-09-25T15:47:00.000+0000\",\n    \"scheduledEndDate\": \"2019-09-25T15:47:00.000+0000\",\n    \"dependantOn\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"translations\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"constraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"productIds\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"updateRewards\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"createRewards\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"deleteRewards\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"createContests\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"updateContests\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/competitions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"competitions"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"competitionType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"numberOfRounds\": -92800532,\n    \"numberOfGroupStages\": 34763623,\n    \"name\": \"Summer fest\",\n    \"description\": \"A competition that is for 1 day\",\n    \"termsAndConditions\": \"Participate to win\",\n    \"entrantMemberType\": \"non Ut culpa\",\n    \"maxNumberOfEntrants\": -11198463,\n    \"minNumberOfEntrants\": 86446672,\n    \"scheduledStartDate\": \"2019-09-25T15:47:00.000+0000\",\n    \"scheduledEndDate\": \"2019-09-25T15:47:00.000+0000\",\n    \"dependantOn\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"translations\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"constraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"productIds\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"updateRewards\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"createRewards\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"deleteRewards\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"createContests\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"updateContests\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/competitions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"competitions"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"competitionType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"numberOfRounds\": -92800532,\n    \"numberOfGroupStages\": 34763623,\n    \"name\": \"Summer fest\",\n    \"description\": \"A competition that is for 1 day\",\n    \"termsAndConditions\": \"Participate to win\",\n    \"entrantMemberType\": \"non Ut culpa\",\n    \"maxNumberOfEntrants\": -11198463,\n    \"minNumberOfEntrants\": 86446672,\n    \"scheduledStartDate\": \"2019-09-25T15:47:00.000+0000\",\n    \"scheduledEndDate\": \"2019-09-25T15:47:00.000+0000\",\n    \"dependantOn\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"translations\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"constraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"productIds\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"updateRewards\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"createRewards\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"deleteRewards\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"createContests\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"updateContests\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/competitions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"competitions"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"competitionType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"numberOfRounds\": -92800532,\n    \"numberOfGroupStages\": 34763623,\n    \"name\": \"Summer fest\",\n    \"description\": \"A competition that is for 1 day\",\n    \"termsAndConditions\": \"Participate to win\",\n    \"entrantMemberType\": \"non Ut culpa\",\n    \"maxNumberOfEntrants\": -11198463,\n    \"minNumberOfEntrants\": 86446672,\n    \"scheduledStartDate\": \"2019-09-25T15:47:00.000+0000\",\n    \"scheduledEndDate\": \"2019-09-25T15:47:00.000+0000\",\n    \"dependantOn\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"translations\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"constraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"productIds\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"updateRewards\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"createRewards\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"deleteRewards\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"createContests\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"updateContests\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/competitions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"competitions"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"competitionType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"numberOfRounds\": -92800532,\n    \"numberOfGroupStages\": 34763623,\n    \"name\": \"Summer fest\",\n    \"description\": \"A competition that is for 1 day\",\n    \"termsAndConditions\": \"Participate to win\",\n    \"entrantMemberType\": \"non Ut culpa\",\n    \"maxNumberOfEntrants\": -11198463,\n    \"minNumberOfEntrants\": 86446672,\n    \"scheduledStartDate\": \"2019-09-25T15:47:00.000+0000\",\n    \"scheduledEndDate\": \"2019-09-25T15:47:00.000+0000\",\n    \"dependantOn\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"translations\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"constraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"productIds\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"updateRewards\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"createRewards\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"deleteRewards\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"createContests\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"updateContests\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/competitions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"competitions"
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"competitionType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"numberOfRounds\": -92800532,\n    \"numberOfGroupStages\": 34763623,\n    \"name\": \"Summer fest\",\n    \"description\": \"A competition that is for 1 day\",\n    \"termsAndConditions\": \"Participate to win\",\n    \"entrantMemberType\": \"non Ut culpa\",\n    \"maxNumberOfEntrants\": -11198463,\n    \"minNumberOfEntrants\": 86446672,\n    \"scheduledStartDate\": \"2019-09-25T15:47:00.000+0000\",\n    \"scheduledEndDate\": \"2019-09-25T15:47:00.000+0000\",\n    \"dependantOn\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"translations\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"constraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"productIds\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"updateRewards\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"createRewards\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"deleteRewards\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"createContests\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"updateContests\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/competitions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"competitions"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "create Competitions",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"competitionType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"numberOfRounds\": -15736475,\n    \"name\": \"Summer fest\",\n    \"minNumberOfEntrants\": -80557163,\n    \"dependantOn\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"scheduledStartDate\": \"2019-09-25T15:47:00.000+0000\",\n    \"scheduledEndDate\": \"2019-09-25T15:47:00.000+0000\",\n    \"constraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"productIds\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"numberOfGroupStages\": 10942944,\n    \"description\": \"A competition that is for 1 day\",\n    \"termsAndConditions\": \"Participate to win\",\n    \"entrantMemberType\": \"reprehenderit quis irure exercitation\",\n    \"maxNumberOfEntrants\": -44325635,\n    \"rules\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"translations\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"contests\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"rewards\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/competitions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"competitions"
							]
						},
						"description": "Create a new Competition in the Ziqni database"
					},
					"response": [
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"competitionType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"numberOfRounds\": -62799611,\n    \"name\": \"Summer fest\",\n    \"minNumberOfEntrants\": -27099692,\n    \"dependantOn\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"scheduledStartDate\": \"2019-09-25T15:47:00.000+0000\",\n    \"scheduledEndDate\": \"2019-09-25T15:47:00.000+0000\",\n    \"constraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"productIds\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"numberOfGroupStages\": -15629883,\n    \"description\": \"A competition that is for 1 day\",\n    \"termsAndConditions\": \"Participate to win\",\n    \"entrantMemberType\": \"do \",\n    \"maxNumberOfEntrants\": -51546249,\n    \"rules\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"translations\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"contests\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"rewards\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/competitions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"competitions"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"competitionType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"numberOfRounds\": -62799611,\n    \"name\": \"Summer fest\",\n    \"minNumberOfEntrants\": -27099692,\n    \"dependantOn\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"scheduledStartDate\": \"2019-09-25T15:47:00.000+0000\",\n    \"scheduledEndDate\": \"2019-09-25T15:47:00.000+0000\",\n    \"constraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"productIds\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"numberOfGroupStages\": -15629883,\n    \"description\": \"A competition that is for 1 day\",\n    \"termsAndConditions\": \"Participate to win\",\n    \"entrantMemberType\": \"do \",\n    \"maxNumberOfEntrants\": -51546249,\n    \"rules\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"translations\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"contests\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"rewards\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/competitions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"competitions"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"competitionType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"numberOfRounds\": -62799611,\n    \"name\": \"Summer fest\",\n    \"minNumberOfEntrants\": -27099692,\n    \"dependantOn\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"scheduledStartDate\": \"2019-09-25T15:47:00.000+0000\",\n    \"scheduledEndDate\": \"2019-09-25T15:47:00.000+0000\",\n    \"constraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"productIds\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"numberOfGroupStages\": -15629883,\n    \"description\": \"A competition that is for 1 day\",\n    \"termsAndConditions\": \"Participate to win\",\n    \"entrantMemberType\": \"do \",\n    \"maxNumberOfEntrants\": -51546249,\n    \"rules\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"translations\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"contests\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"rewards\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/competitions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"competitions"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"competitionType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"numberOfRounds\": -62799611,\n    \"name\": \"Summer fest\",\n    \"minNumberOfEntrants\": -27099692,\n    \"dependantOn\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"scheduledStartDate\": \"2019-09-25T15:47:00.000+0000\",\n    \"scheduledEndDate\": \"2019-09-25T15:47:00.000+0000\",\n    \"constraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"productIds\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"numberOfGroupStages\": -15629883,\n    \"description\": \"A competition that is for 1 day\",\n    \"termsAndConditions\": \"Participate to win\",\n    \"entrantMemberType\": \"do \",\n    \"maxNumberOfEntrants\": -51546249,\n    \"rules\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"translations\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"contests\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"rewards\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/competitions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"competitions"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"competitionType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"numberOfRounds\": -62799611,\n    \"name\": \"Summer fest\",\n    \"minNumberOfEntrants\": -27099692,\n    \"dependantOn\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"scheduledStartDate\": \"2019-09-25T15:47:00.000+0000\",\n    \"scheduledEndDate\": \"2019-09-25T15:47:00.000+0000\",\n    \"constraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"productIds\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"numberOfGroupStages\": -15629883,\n    \"description\": \"A competition that is for 1 day\",\n    \"termsAndConditions\": \"Participate to win\",\n    \"entrantMemberType\": \"do \",\n    \"maxNumberOfEntrants\": -51546249,\n    \"rules\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"translations\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"contests\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"rewards\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/competitions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"competitions"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"competitionType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"numberOfRounds\": -62799611,\n    \"name\": \"Summer fest\",\n    \"minNumberOfEntrants\": -27099692,\n    \"dependantOn\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"scheduledStartDate\": \"2019-09-25T15:47:00.000+0000\",\n    \"scheduledEndDate\": \"2019-09-25T15:47:00.000+0000\",\n    \"constraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"productIds\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"numberOfGroupStages\": -15629883,\n    \"description\": \"A competition that is for 1 day\",\n    \"termsAndConditions\": \"Participate to win\",\n    \"entrantMemberType\": \"do \",\n    \"maxNumberOfEntrants\": -51546249,\n    \"rules\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"translations\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"contests\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"rewards\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/competitions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"competitions"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"competitionType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"numberOfRounds\": -62799611,\n    \"name\": \"Summer fest\",\n    \"minNumberOfEntrants\": -27099692,\n    \"dependantOn\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"scheduledStartDate\": \"2019-09-25T15:47:00.000+0000\",\n    \"scheduledEndDate\": \"2019-09-25T15:47:00.000+0000\",\n    \"constraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"productIds\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"numberOfGroupStages\": -15629883,\n    \"description\": \"A competition that is for 1 day\",\n    \"termsAndConditions\": \"Participate to win\",\n    \"entrantMemberType\": \"do \",\n    \"maxNumberOfEntrants\": -51546249,\n    \"rules\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"translations\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"contests\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"rewards\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/competitions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"competitions"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"competitionType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"numberOfRounds\": -62799611,\n    \"name\": \"Summer fest\",\n    \"minNumberOfEntrants\": -27099692,\n    \"dependantOn\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"scheduledStartDate\": \"2019-09-25T15:47:00.000+0000\",\n    \"scheduledEndDate\": \"2019-09-25T15:47:00.000+0000\",\n    \"constraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"productIds\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"numberOfGroupStages\": -15629883,\n    \"description\": \"A competition that is for 1 day\",\n    \"termsAndConditions\": \"Participate to win\",\n    \"entrantMemberType\": \"do \",\n    \"maxNumberOfEntrants\": -51546249,\n    \"rules\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"translations\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"contests\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"rewards\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/competitions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"competitions"
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"competitionType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"numberOfRounds\": -62799611,\n    \"name\": \"Summer fest\",\n    \"minNumberOfEntrants\": -27099692,\n    \"dependantOn\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"scheduledStartDate\": \"2019-09-25T15:47:00.000+0000\",\n    \"scheduledEndDate\": \"2019-09-25T15:47:00.000+0000\",\n    \"constraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"productIds\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"numberOfGroupStages\": -15629883,\n    \"description\": \"A competition that is for 1 day\",\n    \"termsAndConditions\": \"Participate to win\",\n    \"entrantMemberType\": \"do \",\n    \"maxNumberOfEntrants\": -51546249,\n    \"rules\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"translations\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"contests\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"rewards\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/competitions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"competitions"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "get Competitions By Query",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/competitions/query",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"competitions",
								"query"
							]
						},
						"description": "Retrieve Competitions from Ziqni database by unique Competition ID's or any other POST body parameters using the POST method"
					},
					"response": [
						{
							"name": "A list of competitions and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/competitions/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"competitions",
										"query"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of competitions and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/competitions/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"competitions",
										"query"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of competitions and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/competitions/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"competitions",
										"query"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of competitions and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/competitions/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"competitions",
										"query"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of competitions and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/competitions/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"competitions",
										"query"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of competitions and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/competitions/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"competitions",
										"query"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of competitions and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/competitions/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"competitions",
										"query"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of competitions and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/competitions/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"competitions",
										"query"
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of competitions and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/competitions/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"competitions",
										"query"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "NOT AVAILABLE IN CURRENT RELEASE",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"memberRefId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entrantStatus\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entityId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entrantAction\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"memberId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"memberRefId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entrantStatus\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entityId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entrantAction\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"memberId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/competitions/entries",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"competitions",
								"entries"
							]
						},
						"description": "Updates the status of the Entrants for a Competition id provided"
					},
					"response": [
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"memberRefId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entrantStatus\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entityId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entrantAction\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"memberId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"memberRefId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entrantStatus\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entityId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entrantAction\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"memberId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/competitions/entries",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"competitions",
										"entries"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "Accepted",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"memberRefId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entrantStatus\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entityId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entrantAction\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"memberId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"memberRefId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entrantStatus\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entityId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entrantAction\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"memberId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/competitions/entries",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"competitions",
										"entries"
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"memberRefId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entrantStatus\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entityId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entrantAction\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"memberId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"memberRefId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entrantStatus\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entityId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entrantAction\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"memberId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/competitions/entries",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"competitions",
										"entries"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"memberRefId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entrantStatus\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entityId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entrantAction\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"memberId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"memberRefId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entrantStatus\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entityId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entrantAction\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"memberId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/competitions/entries",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"competitions",
										"entries"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"memberRefId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entrantStatus\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entityId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entrantAction\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"memberId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"memberRefId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entrantStatus\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entityId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entrantAction\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"memberId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/competitions/entries",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"competitions",
										"entries"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"memberRefId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entrantStatus\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entityId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entrantAction\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"memberId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"memberRefId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entrantStatus\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entityId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entrantAction\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"memberId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/competitions/entries",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"competitions",
										"entries"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"memberRefId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entrantStatus\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entityId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entrantAction\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"memberId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"memberRefId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entrantStatus\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entityId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entrantAction\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"memberId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/competitions/entries",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"competitions",
										"entries"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"memberRefId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entrantStatus\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entityId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entrantAction\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"memberId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"memberRefId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entrantStatus\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entityId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entrantAction\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"memberId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/competitions/entries",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"competitions",
										"entries"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"memberRefId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entrantStatus\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entityId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entrantAction\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"memberId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"memberRefId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entrantStatus\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entityId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entrantAction\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"memberId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/competitions/entries",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"competitions",
										"entries"
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"memberRefId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entrantStatus\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entityId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entrantAction\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"memberId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"memberRefId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entrantStatus\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entityId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entrantAction\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"memberId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/competitions/entries",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"competitions",
										"entries"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "NOT AVAILABLE IN CURRENT RELEASE",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/competitions/state",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"competitions",
								"state"
							]
						},
						"description": "Manages the Competitions state"
					},
					"response": [
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/competitions/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"competitions",
										"state"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "Accepted",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/competitions/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"competitions",
										"state"
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/competitions/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"competitions",
										"state"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/competitions/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"competitions",
										"state"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/competitions/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"competitions",
										"state"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/competitions/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"competitions",
										"state"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/competitions/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"competitions",
										"state"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/competitions/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"competitions",
										"state"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/competitions/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"competitions",
										"state"
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/competitions/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"competitions",
										"state"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "contests",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "NOT AVAILABLE IN CURRENT RELEASE",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/contests/:id/leaderboard?_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contests",
										":id",
										"leaderboard"
									],
									"query": [
										{
											"key": "_limit",
											"value": "-48278460",
											"description": "Limit the returned total records found"
										},
										{
											"key": "_skip",
											"value": "-48278460",
											"description": "Skip the returned records found and return the next batch of records"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "repr",
											"description": "(Required) Unique identifier of the resource"
										}
									]
								},
								"description": "Returns a leaderborad for the Contests id provided"
							},
							"response": [
								{
									"name": "A leaderboard for the contest and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contests/:id/leaderboard?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contests",
												":id",
												"leaderboard"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A leaderboard for the contest and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contests/:id/leaderboard?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contests",
												":id",
												"leaderboard"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A leaderboard for the contest and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contests/:id/leaderboard?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contests",
												":id",
												"leaderboard"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A leaderboard for the contest and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contests/:id/leaderboard?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contests",
												":id",
												"leaderboard"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A leaderboard for the contest and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contests/:id/leaderboard?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contests",
												":id",
												"leaderboard"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A leaderboard for the contest and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contests/:id/leaderboard?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contests",
												":id",
												"leaderboard"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Request Entity Too Large",
									"code": 413,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A leaderboard for the contest and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contests/:id/leaderboard?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contests",
												":id",
												"leaderboard"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A leaderboard for the contest and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contests/:id/leaderboard?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contests",
												":id",
												"leaderboard"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Not Implemented",
									"code": 501,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A leaderboard for the contest and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contests/:id/leaderboard?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contests",
												":id",
												"leaderboard"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "NOT AVAILABLE IN CURRENT RELEASE",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/contests/:id/entries?_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contests",
										":id",
										"entries"
									],
									"query": [
										{
											"key": "_limit",
											"value": "-48278460",
											"description": "Limit the returned total records found"
										},
										{
											"key": "_skip",
											"value": "-48278460",
											"description": "Skip the returned records found and return the next batch of records"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "repr",
											"description": "(Required) Unique identifier of the resource"
										}
									]
								},
								"description": "Returns all Entries for the Contest id provided"
							},
							"response": [
								{
									"name": "A list of Entrants for the competition/contest and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contests/:id/entries?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contests",
												":id",
												"entries"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of Entrants for the competition/contest and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contests/:id/entries?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contests",
												":id",
												"entries"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of Entrants for the competition/contest and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contests/:id/entries?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contests",
												":id",
												"entries"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of Entrants for the competition/contest and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contests/:id/entries?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contests",
												":id",
												"entries"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of Entrants for the competition/contest and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contests/:id/entries?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contests",
												":id",
												"entries"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of Entrants for the competition/contest and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contests/:id/entries?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contests",
												":id",
												"entries"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Request Entity Too Large",
									"code": 413,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of Entrants for the competition/contest and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contests/:id/entries?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contests",
												":id",
												"entries"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of Entrants for the competition/contest and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contests/:id/entries?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contests",
												":id",
												"entries"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Not Implemented",
									"code": 501,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of Entrants for the competition/contest and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contests/:id/entries?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contests",
												":id",
												"entries"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "NOT AVAILABLE IN CURRENT RELEASE",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/contests/:id/parents?_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contests",
										":id",
										"parents"
									],
									"query": [
										{
											"key": "_limit",
											"value": "-48278460",
											"description": "Limit the returned total records found"
										},
										{
											"key": "_skip",
											"value": "-48278460",
											"description": "Skip the returned records found and return the next batch of records"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "repr",
											"description": "(Required) Unique identifier of the resource"
										}
									]
								},
								"description": "Returns all parent Contests for the Contest id provided"
							},
							"response": [
								{
									"name": "A list of contests and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contests/:id/parents?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contests",
												":id",
												"parents"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of contests and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contests/:id/parents?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contests",
												":id",
												"parents"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of contests and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contests/:id/parents?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contests",
												":id",
												"parents"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of contests and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contests/:id/parents?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contests",
												":id",
												"parents"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of contests and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contests/:id/parents?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contests",
												":id",
												"parents"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of contests and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contests/:id/parents?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contests",
												":id",
												"parents"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Request Entity Too Large",
									"code": 413,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of contests and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contests/:id/parents?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contests",
												":id",
												"parents"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of contests and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contests/:id/parents?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contests",
												":id",
												"parents"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Not Implemented",
									"code": 501,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of contests and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contests/:id/parents?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contests",
												":id",
												"parents"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "NOT AVAILABLE IN CURRENT RELEASE",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/contests/:id/children?_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contests",
										":id",
										"children"
									],
									"query": [
										{
											"key": "_limit",
											"value": "-48278460",
											"description": "Limit the returned total records found"
										},
										{
											"key": "_skip",
											"value": "-48278460",
											"description": "Skip the returned records found and return the next batch of records"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "repr",
											"description": "(Required) Unique identifier of the resource"
										}
									]
								},
								"description": "Returns all children Contests for the Contest id provided"
							},
							"response": [
								{
									"name": "A list of contests and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contests/:id/children?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contests",
												":id",
												"children"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of contests and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contests/:id/children?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contests",
												":id",
												"children"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of contests and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contests/:id/children?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contests",
												":id",
												"children"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of contests and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contests/:id/children?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contests",
												":id",
												"children"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of contests and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contests/:id/children?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contests",
												":id",
												"children"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of contests and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contests/:id/children?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contests",
												":id",
												"children"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Request Entity Too Large",
									"code": 413,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of contests and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contests/:id/children?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contests",
												":id",
												"children"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of contests and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contests/:id/children?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contests",
												":id",
												"children"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Not Implemented",
									"code": 501,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of contests and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contests/:id/children?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contests",
												":id",
												"children"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "NOT AVAILABLE IN CURRENT RELEASE",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/contests/:id/clone",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contests",
										":id",
										"clone"
									],
									"variable": [
										{
											"key": "id",
											"value": "repr",
											"description": "(Required) Unique identifier of the resource"
										}
									]
								},
								"description": "Clones a Contest for the identifier provided"
							},
							"response": [
								{
									"name": "A modeled response of a Contest that can be used for Contest creation * The competitionId has to be changed to the competition Id of the competition that the contest will be cloned to",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contests/:id/clone",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contests",
												":id",
												"clone"
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A modeled response of a Contest that can be used for Contest creation * The competitionId has to be changed to the competition Id of the competition that the contest will be cloned to",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contests/:id/clone",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contests",
												":id",
												"clone"
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A modeled response of a Contest that can be used for Contest creation * The competitionId has to be changed to the competition Id of the competition that the contest will be cloned to",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contests/:id/clone",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contests",
												":id",
												"clone"
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A modeled response of a Contest that can be used for Contest creation * The competitionId has to be changed to the competition Id of the competition that the contest will be cloned to",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contests/:id/clone",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contests",
												":id",
												"clone"
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A modeled response of a Contest that can be used for Contest creation * The competitionId has to be changed to the competition Id of the competition that the contest will be cloned to",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contests/:id/clone",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contests",
												":id",
												"clone"
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A modeled response of a Contest that can be used for Contest creation * The competitionId has to be changed to the competition Id of the competition that the contest will be cloned to",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contests/:id/clone",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contests",
												":id",
												"clone"
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Request Entity Too Large",
									"code": 413,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A modeled response of a Contest that can be used for Contest creation * The competitionId has to be changed to the competition Id of the competition that the contest will be cloned to",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contests/:id/clone",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contests",
												":id",
												"clone"
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A modeled response of a Contest that can be used for Contest creation * The competitionId has to be changed to the competition Id of the competition that the contest will be cloned to",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contests/:id/clone",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contests",
												":id",
												"clone"
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Not Implemented",
									"code": 501,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A modeled response of a Contest that can be used for Contest creation * The competitionId has to be changed to the competition Id of the competition that the contest will be cloned to",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contests/:id/clone",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contests",
												":id",
												"clone"
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "get Contests",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/contests?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"contests"
							],
							"query": [
								{
									"key": "id",
									"value": "eiusmod sed c",
									"description": "The unique identifiers of the resources"
								},
								{
									"key": "id",
									"value": "deserunt",
									"description": "The unique identifiers of the resources"
								},
								{
									"key": "_limit",
									"value": "-48278460",
									"description": "Limit the returned total records found"
								},
								{
									"key": "_skip",
									"value": "-48278460",
									"description": "Skip the returned records found and return the next batch of records"
								}
							]
						},
						"description": "Returns a list of Contests. This assumes that contests have first been uploaded via a POST request or web console"
					},
					"response": [
						{
							"name": "A list of contests and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/contests?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contests"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of contests and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/contests?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contests"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of contests and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/contests?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contests"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of contests and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/contests?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contests"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of contests and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/contests?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contests"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of contests and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/contests?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contests"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of contests and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/contests?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contests"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of contests and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/contests?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contests"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of contests and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/contests?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contests"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "update Contest",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": \"Fish and Chips\",\n    \"description\": \"Fish and Chips contest\",\n    \"termsAndConditions\": \"Buy 1 get 1 free\",\n    \"roundType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"maxNumberOfEntrants\": -46862819,\n    \"minNumberOfEntrants\": 99254386,\n    \"scheduledStartDate\": \"2019-09-25T15:47:00.000+0000\",\n    \"scheduledEndDate\": \"2019-09-25T15:47:00.000+0000\",\n    \"strategies\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"constraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"translations\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"updateRewards\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"createRewards\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"deleteRewards\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/contests",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"contests"
							]
						},
						"description": "Update an existing Contest in the Ziqni database"
					},
					"response": [
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": \"Fish and Chips\",\n    \"description\": \"Fish and Chips contest\",\n    \"termsAndConditions\": \"Buy 1 get 1 free\",\n    \"roundType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"maxNumberOfEntrants\": 59838801,\n    \"minNumberOfEntrants\": -7501354,\n    \"scheduledStartDate\": \"2019-09-25T15:47:00.000+0000\",\n    \"scheduledEndDate\": \"2019-09-25T15:47:00.000+0000\",\n    \"strategies\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"constraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"translations\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"updateRewards\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"createRewards\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"deleteRewards\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contests"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "Accepted",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": \"Fish and Chips\",\n    \"description\": \"Fish and Chips contest\",\n    \"termsAndConditions\": \"Buy 1 get 1 free\",\n    \"roundType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"maxNumberOfEntrants\": 59838801,\n    \"minNumberOfEntrants\": -7501354,\n    \"scheduledStartDate\": \"2019-09-25T15:47:00.000+0000\",\n    \"scheduledEndDate\": \"2019-09-25T15:47:00.000+0000\",\n    \"strategies\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"constraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"translations\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"updateRewards\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"createRewards\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"deleteRewards\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contests"
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": \"Fish and Chips\",\n    \"description\": \"Fish and Chips contest\",\n    \"termsAndConditions\": \"Buy 1 get 1 free\",\n    \"roundType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"maxNumberOfEntrants\": 59838801,\n    \"minNumberOfEntrants\": -7501354,\n    \"scheduledStartDate\": \"2019-09-25T15:47:00.000+0000\",\n    \"scheduledEndDate\": \"2019-09-25T15:47:00.000+0000\",\n    \"strategies\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"constraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"translations\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"updateRewards\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"createRewards\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"deleteRewards\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contests"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": \"Fish and Chips\",\n    \"description\": \"Fish and Chips contest\",\n    \"termsAndConditions\": \"Buy 1 get 1 free\",\n    \"roundType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"maxNumberOfEntrants\": 59838801,\n    \"minNumberOfEntrants\": -7501354,\n    \"scheduledStartDate\": \"2019-09-25T15:47:00.000+0000\",\n    \"scheduledEndDate\": \"2019-09-25T15:47:00.000+0000\",\n    \"strategies\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"constraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"translations\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"updateRewards\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"createRewards\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"deleteRewards\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contests"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": \"Fish and Chips\",\n    \"description\": \"Fish and Chips contest\",\n    \"termsAndConditions\": \"Buy 1 get 1 free\",\n    \"roundType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"maxNumberOfEntrants\": 59838801,\n    \"minNumberOfEntrants\": -7501354,\n    \"scheduledStartDate\": \"2019-09-25T15:47:00.000+0000\",\n    \"scheduledEndDate\": \"2019-09-25T15:47:00.000+0000\",\n    \"strategies\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"constraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"translations\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"updateRewards\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"createRewards\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"deleteRewards\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contests"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": \"Fish and Chips\",\n    \"description\": \"Fish and Chips contest\",\n    \"termsAndConditions\": \"Buy 1 get 1 free\",\n    \"roundType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"maxNumberOfEntrants\": 59838801,\n    \"minNumberOfEntrants\": -7501354,\n    \"scheduledStartDate\": \"2019-09-25T15:47:00.000+0000\",\n    \"scheduledEndDate\": \"2019-09-25T15:47:00.000+0000\",\n    \"strategies\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"constraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"translations\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"updateRewards\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"createRewards\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"deleteRewards\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contests"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": \"Fish and Chips\",\n    \"description\": \"Fish and Chips contest\",\n    \"termsAndConditions\": \"Buy 1 get 1 free\",\n    \"roundType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"maxNumberOfEntrants\": 59838801,\n    \"minNumberOfEntrants\": -7501354,\n    \"scheduledStartDate\": \"2019-09-25T15:47:00.000+0000\",\n    \"scheduledEndDate\": \"2019-09-25T15:47:00.000+0000\",\n    \"strategies\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"constraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"translations\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"updateRewards\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"createRewards\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"deleteRewards\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contests"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": \"Fish and Chips\",\n    \"description\": \"Fish and Chips contest\",\n    \"termsAndConditions\": \"Buy 1 get 1 free\",\n    \"roundType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"maxNumberOfEntrants\": 59838801,\n    \"minNumberOfEntrants\": -7501354,\n    \"scheduledStartDate\": \"2019-09-25T15:47:00.000+0000\",\n    \"scheduledEndDate\": \"2019-09-25T15:47:00.000+0000\",\n    \"strategies\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"constraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"translations\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"updateRewards\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"createRewards\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"deleteRewards\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contests"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": \"Fish and Chips\",\n    \"description\": \"Fish and Chips contest\",\n    \"termsAndConditions\": \"Buy 1 get 1 free\",\n    \"roundType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"maxNumberOfEntrants\": 59838801,\n    \"minNumberOfEntrants\": -7501354,\n    \"scheduledStartDate\": \"2019-09-25T15:47:00.000+0000\",\n    \"scheduledEndDate\": \"2019-09-25T15:47:00.000+0000\",\n    \"strategies\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"constraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"translations\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"updateRewards\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"createRewards\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"deleteRewards\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contests"
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": \"Fish and Chips\",\n    \"description\": \"Fish and Chips contest\",\n    \"termsAndConditions\": \"Buy 1 get 1 free\",\n    \"roundType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"maxNumberOfEntrants\": 59838801,\n    \"minNumberOfEntrants\": -7501354,\n    \"scheduledStartDate\": \"2019-09-25T15:47:00.000+0000\",\n    \"scheduledEndDate\": \"2019-09-25T15:47:00.000+0000\",\n    \"strategies\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"constraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"translations\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"updateRewards\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"createRewards\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"deleteRewards\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contests"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "create Contests",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"competitionId\": \"Dc4swmQBVd51K6gPQqFx\",\n    \"row\": 64510093,\n    \"round\": -1557214,\n    \"roundType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": \"Fish and Chips\",\n    \"minNumberOfEntrants\": -3355472,\n    \"scheduledStartDate\": \"2019-09-25T15:47:00.000+0000\",\n    \"scheduledEndDate\": \"2019-09-25T15:47:00.000+0000\",\n    \"constraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"strategies\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"groupStage\": -83731000,\n    \"groupStageLabel\": \"Semi-finals\",\n    \"entrantsFromContest\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"description\": \"Fish and Chips contest\",\n    \"termsAndConditions\": \"Buy 1 get 1 free\",\n    \"maxNumberOfEntrants\": -22825845,\n    \"rules\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"translations\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"rewards\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/contests",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"contests"
							]
						},
						"description": "Create a new Contests in the Ziqni database"
					},
					"response": [
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"competitionId\": \"Dc4swmQBVd51K6gPQqFx\",\n    \"row\": -30282460,\n    \"round\": 13142393,\n    \"roundType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": \"Fish and Chips\",\n    \"minNumberOfEntrants\": 57256571,\n    \"scheduledStartDate\": \"2019-09-25T15:47:00.000+0000\",\n    \"scheduledEndDate\": \"2019-09-25T15:47:00.000+0000\",\n    \"constraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"strategies\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"groupStage\": 79712367,\n    \"groupStageLabel\": \"Semi-finals\",\n    \"entrantsFromContest\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"description\": \"Fish and Chips contest\",\n    \"termsAndConditions\": \"Buy 1 get 1 free\",\n    \"maxNumberOfEntrants\": 26919166,\n    \"rules\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"translations\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"rewards\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contests"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"competitionId\": \"Dc4swmQBVd51K6gPQqFx\",\n    \"row\": -30282460,\n    \"round\": 13142393,\n    \"roundType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": \"Fish and Chips\",\n    \"minNumberOfEntrants\": 57256571,\n    \"scheduledStartDate\": \"2019-09-25T15:47:00.000+0000\",\n    \"scheduledEndDate\": \"2019-09-25T15:47:00.000+0000\",\n    \"constraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"strategies\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"groupStage\": 79712367,\n    \"groupStageLabel\": \"Semi-finals\",\n    \"entrantsFromContest\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"description\": \"Fish and Chips contest\",\n    \"termsAndConditions\": \"Buy 1 get 1 free\",\n    \"maxNumberOfEntrants\": 26919166,\n    \"rules\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"translations\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"rewards\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contests"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"competitionId\": \"Dc4swmQBVd51K6gPQqFx\",\n    \"row\": -30282460,\n    \"round\": 13142393,\n    \"roundType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": \"Fish and Chips\",\n    \"minNumberOfEntrants\": 57256571,\n    \"scheduledStartDate\": \"2019-09-25T15:47:00.000+0000\",\n    \"scheduledEndDate\": \"2019-09-25T15:47:00.000+0000\",\n    \"constraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"strategies\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"groupStage\": 79712367,\n    \"groupStageLabel\": \"Semi-finals\",\n    \"entrantsFromContest\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"description\": \"Fish and Chips contest\",\n    \"termsAndConditions\": \"Buy 1 get 1 free\",\n    \"maxNumberOfEntrants\": 26919166,\n    \"rules\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"translations\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"rewards\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contests"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"competitionId\": \"Dc4swmQBVd51K6gPQqFx\",\n    \"row\": -30282460,\n    \"round\": 13142393,\n    \"roundType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": \"Fish and Chips\",\n    \"minNumberOfEntrants\": 57256571,\n    \"scheduledStartDate\": \"2019-09-25T15:47:00.000+0000\",\n    \"scheduledEndDate\": \"2019-09-25T15:47:00.000+0000\",\n    \"constraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"strategies\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"groupStage\": 79712367,\n    \"groupStageLabel\": \"Semi-finals\",\n    \"entrantsFromContest\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"description\": \"Fish and Chips contest\",\n    \"termsAndConditions\": \"Buy 1 get 1 free\",\n    \"maxNumberOfEntrants\": 26919166,\n    \"rules\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"translations\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"rewards\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contests"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"competitionId\": \"Dc4swmQBVd51K6gPQqFx\",\n    \"row\": -30282460,\n    \"round\": 13142393,\n    \"roundType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": \"Fish and Chips\",\n    \"minNumberOfEntrants\": 57256571,\n    \"scheduledStartDate\": \"2019-09-25T15:47:00.000+0000\",\n    \"scheduledEndDate\": \"2019-09-25T15:47:00.000+0000\",\n    \"constraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"strategies\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"groupStage\": 79712367,\n    \"groupStageLabel\": \"Semi-finals\",\n    \"entrantsFromContest\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"description\": \"Fish and Chips contest\",\n    \"termsAndConditions\": \"Buy 1 get 1 free\",\n    \"maxNumberOfEntrants\": 26919166,\n    \"rules\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"translations\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"rewards\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contests"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"competitionId\": \"Dc4swmQBVd51K6gPQqFx\",\n    \"row\": -30282460,\n    \"round\": 13142393,\n    \"roundType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": \"Fish and Chips\",\n    \"minNumberOfEntrants\": 57256571,\n    \"scheduledStartDate\": \"2019-09-25T15:47:00.000+0000\",\n    \"scheduledEndDate\": \"2019-09-25T15:47:00.000+0000\",\n    \"constraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"strategies\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"groupStage\": 79712367,\n    \"groupStageLabel\": \"Semi-finals\",\n    \"entrantsFromContest\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"description\": \"Fish and Chips contest\",\n    \"termsAndConditions\": \"Buy 1 get 1 free\",\n    \"maxNumberOfEntrants\": 26919166,\n    \"rules\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"translations\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"rewards\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contests"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"competitionId\": \"Dc4swmQBVd51K6gPQqFx\",\n    \"row\": -30282460,\n    \"round\": 13142393,\n    \"roundType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": \"Fish and Chips\",\n    \"minNumberOfEntrants\": 57256571,\n    \"scheduledStartDate\": \"2019-09-25T15:47:00.000+0000\",\n    \"scheduledEndDate\": \"2019-09-25T15:47:00.000+0000\",\n    \"constraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"strategies\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"groupStage\": 79712367,\n    \"groupStageLabel\": \"Semi-finals\",\n    \"entrantsFromContest\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"description\": \"Fish and Chips contest\",\n    \"termsAndConditions\": \"Buy 1 get 1 free\",\n    \"maxNumberOfEntrants\": 26919166,\n    \"rules\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"translations\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"rewards\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contests"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"competitionId\": \"Dc4swmQBVd51K6gPQqFx\",\n    \"row\": -30282460,\n    \"round\": 13142393,\n    \"roundType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": \"Fish and Chips\",\n    \"minNumberOfEntrants\": 57256571,\n    \"scheduledStartDate\": \"2019-09-25T15:47:00.000+0000\",\n    \"scheduledEndDate\": \"2019-09-25T15:47:00.000+0000\",\n    \"constraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"strategies\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"groupStage\": 79712367,\n    \"groupStageLabel\": \"Semi-finals\",\n    \"entrantsFromContest\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"description\": \"Fish and Chips contest\",\n    \"termsAndConditions\": \"Buy 1 get 1 free\",\n    \"maxNumberOfEntrants\": 26919166,\n    \"rules\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"translations\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"rewards\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contests"
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"competitionId\": \"Dc4swmQBVd51K6gPQqFx\",\n    \"row\": -30282460,\n    \"round\": 13142393,\n    \"roundType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": \"Fish and Chips\",\n    \"minNumberOfEntrants\": 57256571,\n    \"scheduledStartDate\": \"2019-09-25T15:47:00.000+0000\",\n    \"scheduledEndDate\": \"2019-09-25T15:47:00.000+0000\",\n    \"constraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"strategies\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"groupStage\": 79712367,\n    \"groupStageLabel\": \"Semi-finals\",\n    \"entrantsFromContest\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"description\": \"Fish and Chips contest\",\n    \"termsAndConditions\": \"Buy 1 get 1 free\",\n    \"maxNumberOfEntrants\": 26919166,\n    \"rules\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"translations\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"rewards\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contests"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "get Contests By Query",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/contests/query",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"contests",
								"query"
							]
						},
						"description": "Retrieve Contests from Ziqni database by unique Contests ID's or any other POST body parameters using the POST method"
					},
					"response": [
						{
							"name": "A list of contests and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contests/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contests",
										"query"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of contests and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contests/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contests",
										"query"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of contests and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contests/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contests",
										"query"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of contests and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contests/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contests",
										"query"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of contests and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contests/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contests",
										"query"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of contests and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contests/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contests",
										"query"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of contests and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contests/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contests",
										"query"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of contests and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contests/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contests",
										"query"
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of contests and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contests/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contests",
										"query"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "NOT AVAILABLE IN CURRENT RELEASE",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"contestId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"status\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"contestId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"status\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/contests/state",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"contests",
								"state"
							]
						},
						"description": "Manages the Contests state"
					},
					"response": [
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"contestId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"status\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"contestId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"status\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contests/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contests",
										"state"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "Accepted",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"contestId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"status\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"contestId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"status\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contests/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contests",
										"state"
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"contestId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"status\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"contestId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"status\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contests/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contests",
										"state"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"contestId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"status\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"contestId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"status\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contests/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contests",
										"state"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"contestId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"status\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"contestId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"status\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contests/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contests",
										"state"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"contestId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"status\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"contestId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"status\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contests/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contests",
										"state"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"contestId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"status\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"contestId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"status\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contests/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contests",
										"state"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"contestId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"status\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"contestId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"status\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contests/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contests",
										"state"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"contestId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"status\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"contestId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"status\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contests/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contests",
										"state"
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"contestId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"status\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"contestId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"status\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contests/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contests",
										"state"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "achievements",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "NOT AVAILABLE IN CURRENT RELEASE",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/achievements/:id/issued",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"achievements",
										":id",
										"issued"
									],
									"variable": [
										{
											"key": "id",
											"value": "repr",
											"description": "(Required) Unique identifier of the resource"
										}
									]
								},
								"description": "Receive a count of Issued Achievements by identifier provided"
							},
							"response": [
								{
									"name": "A count of Issued Achievements for the id requested",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/achievements/:id/issued",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"achievements",
												":id",
												"issued"
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A count of Issued Achievements for the id requested",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/achievements/:id/issued",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"achievements",
												":id",
												"issued"
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A count of Issued Achievements for the id requested",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/achievements/:id/issued",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"achievements",
												":id",
												"issued"
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A count of Issued Achievements for the id requested",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/achievements/:id/issued",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"achievements",
												":id",
												"issued"
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A count of Issued Achievements for the id requested",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/achievements/:id/issued",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"achievements",
												":id",
												"issued"
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A count of Issued Achievements for the id requested",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/achievements/:id/issued",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"achievements",
												":id",
												"issued"
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Request Entity Too Large",
									"code": 413,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A count of Issued Achievements for the id requested",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/achievements/:id/issued",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"achievements",
												":id",
												"issued"
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A count of Issued Achievements for the id requested",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/achievements/:id/issued",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"achievements",
												":id",
												"issued"
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Not Implemented",
									"code": 501,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A count of Issued Achievements for the id requested",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/achievements/:id/issued",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"achievements",
												":id",
												"issued"
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "NOT AVAILABLE IN CURRENT RELEASE",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/achievements/:id/members?memberId=repr&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"achievements",
										":id",
										"members"
									],
									"query": [
										{
											"key": "memberId",
											"value": "repr",
											"description": "Id of a member"
										},
										{
											"key": "_limit",
											"value": "-48278460",
											"description": "Limit the returned total records found"
										},
										{
											"key": "_skip",
											"value": "-48278460",
											"description": "Skip the returned records found and return the next batch of records"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "repr",
											"description": "(Required) Unique identifier of the resource"
										}
									]
								},
								"description": "Receive a list of members that had an Achievement issued for the Achievement identified provided"
							},
							"response": [
								{
									"name": "A count of Achievement issued for for each member",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/achievements/:id/members?memberId=repr&_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"achievements",
												":id",
												"members"
											],
											"query": [
												{
													"key": "memberId",
													"value": "repr"
												},
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A count of Achievement issued for for each member",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/achievements/:id/members?memberId=repr&_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"achievements",
												":id",
												"members"
											],
											"query": [
												{
													"key": "memberId",
													"value": "repr"
												},
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A count of Achievement issued for for each member",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/achievements/:id/members?memberId=repr&_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"achievements",
												":id",
												"members"
											],
											"query": [
												{
													"key": "memberId",
													"value": "repr"
												},
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A count of Achievement issued for for each member",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/achievements/:id/members?memberId=repr&_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"achievements",
												":id",
												"members"
											],
											"query": [
												{
													"key": "memberId",
													"value": "repr"
												},
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A count of Achievement issued for for each member",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/achievements/:id/members?memberId=repr&_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"achievements",
												":id",
												"members"
											],
											"query": [
												{
													"key": "memberId",
													"value": "repr"
												},
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A count of Achievement issued for for each member",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/achievements/:id/members?memberId=repr&_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"achievements",
												":id",
												"members"
											],
											"query": [
												{
													"key": "memberId",
													"value": "repr"
												},
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Request Entity Too Large",
									"code": 413,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A count of Achievement issued for for each member",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/achievements/:id/members?memberId=repr&_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"achievements",
												":id",
												"members"
											],
											"query": [
												{
													"key": "memberId",
													"value": "repr"
												},
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A count of Achievement issued for for each member",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/achievements/:id/members?memberId=repr&_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"achievements",
												":id",
												"members"
											],
											"query": [
												{
													"key": "memberId",
													"value": "repr"
												},
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Not Implemented",
									"code": 501,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A count of Achievement issued for for each member",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/achievements/:id/members?memberId=repr&_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"achievements",
												":id",
												"members"
											],
											"query": [
												{
													"key": "memberId",
													"value": "repr"
												},
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "NOT AVAILABLE IN CURRENT RELEASE",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/achievements/:id/antecedents?_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"achievements",
										":id",
										"antecedents"
									],
									"query": [
										{
											"key": "_limit",
											"value": "-48278460",
											"description": "Limit the returned total records found"
										},
										{
											"key": "_skip",
											"value": "-48278460",
											"description": "Skip the returned records found and return the next batch of records"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "repr",
											"description": "(Required) Unique identifier of the resource"
										}
									]
								},
								"description": "Receive a list of Antecedent Achievements for the Achievement identified provided"
							},
							"response": [
								{
									"name": "A list of achievements and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/achievements/:id/antecedents?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"achievements",
												":id",
												"antecedents"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of achievements and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/achievements/:id/antecedents?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"achievements",
												":id",
												"antecedents"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of achievements and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/achievements/:id/antecedents?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"achievements",
												":id",
												"antecedents"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of achievements and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/achievements/:id/antecedents?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"achievements",
												":id",
												"antecedents"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of achievements and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/achievements/:id/antecedents?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"achievements",
												":id",
												"antecedents"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of achievements and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/achievements/:id/antecedents?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"achievements",
												":id",
												"antecedents"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Request Entity Too Large",
									"code": 413,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of achievements and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/achievements/:id/antecedents?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"achievements",
												":id",
												"antecedents"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of achievements and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/achievements/:id/antecedents?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"achievements",
												":id",
												"antecedents"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Not Implemented",
									"code": 501,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of achievements and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/achievements/:id/antecedents?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"achievements",
												":id",
												"antecedents"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "NOT AVAILABLE IN CURRENT RELEASE",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/achievements/:id/descendents?_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"achievements",
										":id",
										"descendents"
									],
									"query": [
										{
											"key": "_limit",
											"value": "-48278460",
											"description": "Limit the returned total records found"
										},
										{
											"key": "_skip",
											"value": "-48278460",
											"description": "Skip the returned records found and return the next batch of records"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "repr",
											"description": "(Required) Unique identifier of the resource"
										}
									]
								},
								"description": "Receive a list of Descendent Achievements for the Achievement identified provided"
							},
							"response": [
								{
									"name": "A list of achievements and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/achievements/:id/descendents?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"achievements",
												":id",
												"descendents"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of achievements and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/achievements/:id/descendents?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"achievements",
												":id",
												"descendents"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of achievements and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/achievements/:id/descendents?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"achievements",
												":id",
												"descendents"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of achievements and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/achievements/:id/descendents?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"achievements",
												":id",
												"descendents"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of achievements and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/achievements/:id/descendents?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"achievements",
												":id",
												"descendents"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of achievements and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/achievements/:id/descendents?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"achievements",
												":id",
												"descendents"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Request Entity Too Large",
									"code": 413,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of achievements and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/achievements/:id/descendents?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"achievements",
												":id",
												"descendents"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of achievements and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/achievements/:id/descendents?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"achievements",
												":id",
												"descendents"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Not Implemented",
									"code": 501,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of achievements and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/achievements/:id/descendents?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"achievements",
												":id",
												"descendents"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "NOT AVAILABLE IN CURRENT RELEASE",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/achievements/:id/clone",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"achievements",
										":id",
										"clone"
									],
									"variable": [
										{
											"key": "id",
											"value": "repr",
											"description": "(Required) Unique identifier of the resource"
										}
									]
								},
								"description": "Clones an Achievement for the identifier provided"
							},
							"response": [
								{
									"name": "A modeled response of an Achievement that can be used for Achievement creation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/achievements/:id/clone",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"achievements",
												":id",
												"clone"
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A modeled response of an Achievement that can be used for Achievement creation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/achievements/:id/clone",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"achievements",
												":id",
												"clone"
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A modeled response of an Achievement that can be used for Achievement creation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/achievements/:id/clone",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"achievements",
												":id",
												"clone"
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A modeled response of an Achievement that can be used for Achievement creation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/achievements/:id/clone",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"achievements",
												":id",
												"clone"
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A modeled response of an Achievement that can be used for Achievement creation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/achievements/:id/clone",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"achievements",
												":id",
												"clone"
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A modeled response of an Achievement that can be used for Achievement creation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/achievements/:id/clone",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"achievements",
												":id",
												"clone"
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Request Entity Too Large",
									"code": 413,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A modeled response of an Achievement that can be used for Achievement creation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/achievements/:id/clone",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"achievements",
												":id",
												"clone"
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A modeled response of an Achievement that can be used for Achievement creation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/achievements/:id/clone",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"achievements",
												":id",
												"clone"
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Not Implemented",
									"code": 501,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A modeled response of an Achievement that can be used for Achievement creation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/achievements/:id/clone",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"achievements",
												":id",
												"clone"
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "get Achievements",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/achievements?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"achievements"
							],
							"query": [
								{
									"key": "id",
									"value": "eiusmod sed c",
									"description": "The unique identifiers of the resources"
								},
								{
									"key": "id",
									"value": "deserunt",
									"description": "The unique identifiers of the resources"
								},
								{
									"key": "_limit",
									"value": "-48278460",
									"description": "Limit the returned total records found"
								},
								{
									"key": "_skip",
									"value": "-48278460",
									"description": "Skip the returned records found and return the next batch of records"
								}
							]
						},
						"description": "Returns a list of Achievements. This assumes that achievements have first been uploaded via a POST request or web console"
					},
					"response": [
						{
							"name": "A list of achievements and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/achievements?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"achievements"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of achievements and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/achievements?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"achievements"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of achievements and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/achievements?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"achievements"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of achievements and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/achievements?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"achievements"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of achievements and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/achievements?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"achievements"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of achievements and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/achievements?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"achievements"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of achievements and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/achievements?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"achievements"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of achievements and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/achievements?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"achievements"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of achievements and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/achievements?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"achievements"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "update Achievements",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/achievements",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"achievements"
							]
						},
						"description": "Update existing Achievements in the Ziqni database"
					},
					"response": [
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/achievements",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"achievements"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "Accepted",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/achievements",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"achievements"
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/achievements",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"achievements"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/achievements",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"achievements"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/achievements",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"achievements"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/achievements",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"achievements"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/achievements",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"achievements"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/achievements",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"achievements"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/achievements",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"achievements"
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/achievements",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"achievements"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "create Achievements",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/achievements",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"achievements"
							]
						},
						"description": "Create Achievements in the Ziqni database"
					},
					"response": [
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/achievements",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"achievements"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/achievements",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"achievements"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/achievements",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"achievements"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/achievements",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"achievements"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/achievements",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"achievements"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/achievements",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"achievements"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/achievements",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"achievements"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/achievements",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"achievements"
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/achievements",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"achievements"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "delete Achievements",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/achievements?id=eiusmod sed c&id=deserunt",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"achievements"
							],
							"query": [
								{
									"key": "id",
									"value": "eiusmod sed c",
									"description": "The unique identifiers of the resources"
								},
								{
									"key": "id",
									"value": "deserunt",
									"description": "The unique identifiers of the resources"
								}
							]
						},
						"description": "Delete Achievements for a given identifier specified"
					},
					"response": [
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/achievements?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"achievements"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/achievements?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"achievements"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/achievements?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"achievements"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/achievements?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"achievements"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/achievements?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"achievements"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/achievements?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"achievements"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/achievements?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"achievements"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/achievements?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"achievements"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/achievements?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"achievements"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "get Achievements By Query",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/achievements/query",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"achievements",
								"query"
							]
						},
						"description": "Retrieve Achievements from Ziqni database by unique Achievements ID's or any other POST body parameters using the POST method"
					},
					"response": [
						{
							"name": "A list of achievements and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/achievements/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"achievements",
										"query"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of achievements and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/achievements/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"achievements",
										"query"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of achievements and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/achievements/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"achievements",
										"query"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of achievements and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/achievements/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"achievements",
										"query"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of achievements and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/achievements/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"achievements",
										"query"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of achievements and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/achievements/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"achievements",
										"query"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of achievements and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/achievements/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"achievements",
										"query"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of achievements and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/achievements/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"achievements",
										"query"
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of achievements and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/achievements/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"achievements",
										"query"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "delete Achievements By Query",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/achievements/delete",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"achievements",
								"delete"
							]
						},
						"description": "Delete Achievements from Ziqni database by unique Achievements ID's or any other POST body parameters using the POST method"
					},
					"response": [
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/achievements/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"achievements",
										"delete"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/achievements/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"achievements",
										"delete"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/achievements/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"achievements",
										"delete"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/achievements/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"achievements",
										"delete"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/achievements/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"achievements",
										"delete"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/achievements/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"achievements",
										"delete"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/achievements/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"achievements",
										"delete"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/achievements/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"achievements",
										"delete"
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/achievements/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"achievements",
										"delete"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "update Achievements Live Status",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/achievements/state",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"achievements",
								"state"
							]
						},
						"description": "Manage the state of achievement - Draft, Live, Archived"
					},
					"response": [
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/achievements/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"achievements",
										"state"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "Accepted",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/achievements/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"achievements",
										"state"
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/achievements/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"achievements",
										"state"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/achievements/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"achievements",
										"state"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/achievements/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"achievements",
										"state"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/achievements/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"achievements",
										"state"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/achievements/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"achievements",
										"state"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/achievements/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"achievements",
										"state"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/achievements/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"achievements",
										"state"
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/achievements/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"achievements",
										"state"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "rewards",
			"item": [
				{
					"name": "get Rewards",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rewards?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rewards"
							],
							"query": [
								{
									"key": "id",
									"value": "eiusmod sed c",
									"description": "The unique identifiers of the resources"
								},
								{
									"key": "id",
									"value": "deserunt",
									"description": "The unique identifiers of the resources"
								},
								{
									"key": "_limit",
									"value": "-48278460",
									"description": "Limit the returned total records found"
								},
								{
									"key": "_skip",
									"value": "-48278460",
									"description": "Skip the returned records found and return the next batch of records"
								}
							]
						},
						"description": "Returns a list of Rewards. This assumes that rewards have first been uploaded via a POST request or web console"
					},
					"response": [
						{
							"name": "A list of rewards and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rewards?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rewards"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of rewards and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rewards?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rewards"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of rewards and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rewards?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rewards"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of rewards and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rewards?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rewards"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of rewards and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rewards?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rewards"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of rewards and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rewards?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rewards"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of rewards and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rewards?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rewards"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of rewards and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rewards?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rewards"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of rewards and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rewards?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rewards"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "update Rewards",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/rewards",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rewards"
							]
						},
						"description": "Update existing Rewards in the Ziqni database"
					},
					"response": [
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rewards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rewards"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "Accepted",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rewards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rewards"
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rewards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rewards"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rewards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rewards"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rewards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rewards"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rewards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rewards"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rewards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rewards"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rewards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rewards"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rewards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rewards"
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rewards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rewards"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "create Rewards",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/rewards",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rewards"
							]
						},
						"description": "Create Rewards in the Ziqni database"
					},
					"response": [
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rewards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rewards"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rewards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rewards"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rewards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rewards"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rewards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rewards"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rewards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rewards"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rewards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rewards"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rewards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rewards"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rewards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rewards"
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rewards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rewards"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "delete Rewards",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rewards?id=eiusmod sed c&id=deserunt",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rewards"
							],
							"query": [
								{
									"key": "id",
									"value": "eiusmod sed c",
									"description": "The unique identifiers of the resources"
								},
								{
									"key": "id",
									"value": "deserunt",
									"description": "The unique identifiers of the resources"
								}
							]
						},
						"description": "Delete Rewards for a given identifier specified"
					},
					"response": [
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rewards?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rewards"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rewards?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rewards"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rewards?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rewards"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rewards?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rewards"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rewards?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rewards"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rewards?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rewards"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rewards?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rewards"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rewards?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rewards"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rewards?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rewards"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "get Rewards By Query",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/rewards/query",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rewards",
								"query"
							]
						},
						"description": "Retrieve Rewards from Ziqni database by unique Rewards ID's or any other POST body parameters using the POST method"
					},
					"response": [
						{
							"name": "A list of rewards and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rewards/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rewards",
										"query"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of rewards and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rewards/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rewards",
										"query"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of rewards and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rewards/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rewards",
										"query"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of rewards and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rewards/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rewards",
										"query"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of rewards and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rewards/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rewards",
										"query"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of rewards and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rewards/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rewards",
										"query"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of rewards and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rewards/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rewards",
										"query"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of rewards and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rewards/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rewards",
										"query"
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of rewards and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rewards/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rewards",
										"query"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "NOT AVAILABLE IN CURRENT RELEASE",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/rewards/delete",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rewards",
								"delete"
							]
						},
						"description": "Delete Rewards from Ziqni database by unique Rewards ID's or any other POST body parameters using the POST method"
					},
					"response": [
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rewards/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rewards",
										"delete"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rewards/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rewards",
										"delete"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rewards/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rewards",
										"delete"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rewards/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rewards",
										"delete"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rewards/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rewards",
										"delete"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rewards/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rewards",
										"delete"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rewards/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rewards",
										"delete"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rewards/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rewards",
										"delete"
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rewards/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rewards",
										"delete"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "NOT AVAILABLE IN CURRENT RELEASE",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rewards/contests/:id?_limit=-48278460&_skip=-48278460",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rewards",
								"contests",
								":id"
							],
							"query": [
								{
									"key": "_limit",
									"value": "-48278460",
									"description": "Limit the returned total records found"
								},
								{
									"key": "_skip",
									"value": "-48278460",
									"description": "Skip the returned records found and return the next batch of records"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "repr",
									"description": "(Required) Unique identifier of the resource"
								}
							]
						},
						"description": "Returns a list of rewards for a contest identifier provided. This assumes that rewards have first been uploaded via a POST request or web console"
					},
					"response": [
						{
							"name": "A list of rewards and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rewards/contests/:id?_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rewards",
										"contests",
										":id"
									],
									"query": [
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "repr",
											"description": "(Required) Unique identifier of the resource"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of rewards and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rewards/contests/:id?_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rewards",
										"contests",
										":id"
									],
									"query": [
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "repr",
											"description": "(Required) Unique identifier of the resource"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of rewards and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rewards/contests/:id?_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rewards",
										"contests",
										":id"
									],
									"query": [
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "repr",
											"description": "(Required) Unique identifier of the resource"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of rewards and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rewards/contests/:id?_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rewards",
										"contests",
										":id"
									],
									"query": [
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "repr",
											"description": "(Required) Unique identifier of the resource"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of rewards and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rewards/contests/:id?_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rewards",
										"contests",
										":id"
									],
									"query": [
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "repr",
											"description": "(Required) Unique identifier of the resource"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of rewards and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rewards/contests/:id?_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rewards",
										"contests",
										":id"
									],
									"query": [
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "repr",
											"description": "(Required) Unique identifier of the resource"
										}
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of rewards and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rewards/contests/:id?_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rewards",
										"contests",
										":id"
									],
									"query": [
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "repr",
											"description": "(Required) Unique identifier of the resource"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of rewards and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rewards/contests/:id?_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rewards",
										"contests",
										":id"
									],
									"query": [
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "repr",
											"description": "(Required) Unique identifier of the resource"
										}
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of rewards and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rewards/contests/:id?_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rewards",
										"contests",
										":id"
									],
									"query": [
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "repr",
											"description": "(Required) Unique identifier of the resource"
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "NOT AVAILABLE IN CURRENT RELEASE",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rewards/achievements/:id?_limit=-48278460&_skip=-48278460",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rewards",
								"achievements",
								":id"
							],
							"query": [
								{
									"key": "_limit",
									"value": "-48278460",
									"description": "Limit the returned total records found"
								},
								{
									"key": "_skip",
									"value": "-48278460",
									"description": "Skip the returned records found and return the next batch of records"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "repr",
									"description": "(Required) Unique identifier of the resource"
								}
							]
						},
						"description": "Returns a list of Rewards for an Achievement identifier provided. This assumes that rewards have first been uploaded via a POST request or web console"
					},
					"response": [
						{
							"name": "A list of rewards and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rewards/achievements/:id?_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rewards",
										"achievements",
										":id"
									],
									"query": [
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "repr",
											"description": "(Required) Unique identifier of the resource"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of rewards and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rewards/achievements/:id?_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rewards",
										"achievements",
										":id"
									],
									"query": [
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "repr",
											"description": "(Required) Unique identifier of the resource"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of rewards and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rewards/achievements/:id?_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rewards",
										"achievements",
										":id"
									],
									"query": [
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "repr",
											"description": "(Required) Unique identifier of the resource"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of rewards and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rewards/achievements/:id?_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rewards",
										"achievements",
										":id"
									],
									"query": [
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "repr",
											"description": "(Required) Unique identifier of the resource"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of rewards and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rewards/achievements/:id?_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rewards",
										"achievements",
										":id"
									],
									"query": [
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "repr",
											"description": "(Required) Unique identifier of the resource"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of rewards and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rewards/achievements/:id?_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rewards",
										"achievements",
										":id"
									],
									"query": [
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "repr",
											"description": "(Required) Unique identifier of the resource"
										}
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of rewards and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rewards/achievements/:id?_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rewards",
										"achievements",
										":id"
									],
									"query": [
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "repr",
											"description": "(Required) Unique identifier of the resource"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of rewards and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rewards/achievements/:id?_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rewards",
										"achievements",
										":id"
									],
									"query": [
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "repr",
											"description": "(Required) Unique identifier of the resource"
										}
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of rewards and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rewards/achievements/:id?_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rewards",
										"achievements",
										":id"
									],
									"query": [
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "repr",
											"description": "(Required) Unique identifier of the resource"
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "awards",
			"item": [
				{
					"name": "get Awards",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/awards?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"awards"
							],
							"query": [
								{
									"key": "id",
									"value": "eiusmod sed c",
									"description": "The unique identifiers of the resources"
								},
								{
									"key": "id",
									"value": "deserunt",
									"description": "The unique identifiers of the resources"
								},
								{
									"key": "_limit",
									"value": "-48278460",
									"description": "Limit the returned total records found"
								},
								{
									"key": "_skip",
									"value": "-48278460",
									"description": "Skip the returned records found and return the next batch of records"
								}
							]
						},
						"description": "Returns a list of Awards."
					},
					"response": [
						{
							"name": "A list of awards and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/awards?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"awards"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of awards and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/awards?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"awards"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of awards and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/awards?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"awards"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of awards and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/awards?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"awards"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of awards and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/awards?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"awards"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of awards and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/awards?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"awards"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of awards and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/awards?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"awards"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of awards and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/awards?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"awards"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of awards and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/awards?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"awards"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "claim Awards",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"constraints\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"constraints\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/awards/claim",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"awards",
								"claim"
							]
						},
						"description": "Claim Awards that need to be actioned at"
					},
					"response": [
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"constraints\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"constraints\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/awards/claim",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"awards",
										"claim"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "Accepted",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"constraints\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"constraints\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/awards/claim",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"awards",
										"claim"
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"constraints\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"constraints\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/awards/claim",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"awards",
										"claim"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"constraints\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"constraints\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/awards/claim",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"awards",
										"claim"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"constraints\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"constraints\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/awards/claim",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"awards",
										"claim"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"constraints\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"constraints\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/awards/claim",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"awards",
										"claim"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"constraints\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"constraints\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/awards/claim",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"awards",
										"claim"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"constraints\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"constraints\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/awards/claim",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"awards",
										"claim"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"constraints\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"constraints\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/awards/claim",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"awards",
										"claim"
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"constraints\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"constraints\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/awards/claim",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"awards",
										"claim"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "get Awards By Query",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/awards/query",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"awards",
								"query"
							]
						},
						"description": "Retrieve Awards from Ziqni database by unique Awards ID's or any other POST body parameters using the POST method"
					},
					"response": [
						{
							"name": "A list of awards and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/awards/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"awards",
										"query"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of awards and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/awards/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"awards",
										"query"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of awards and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/awards/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"awards",
										"query"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of awards and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/awards/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"awards",
										"query"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of awards and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/awards/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"awards",
										"query"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of awards and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/awards/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"awards",
										"query"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of awards and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/awards/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"awards",
										"query"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of awards and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/awards/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"awards",
										"query"
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of awards and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/awards/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"awards",
										"query"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "reward-types",
			"item": [
				{
					"name": "Get Reward Types",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/reward-types?id={{rewardTypeId0}}&_limit={{defaultLimit}}&_skip={{defaultSkip}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reward-types"
							],
							"query": [
								{
									"key": "id",
									"value": "{{rewardTypeId0}}",
									"description": "The unique identifiers for reward types"
								},
								{
									"key": "_limit",
									"value": "{{defaultLimit}}",
									"description": "Limit the number of records to return"
								},
								{
									"key": "_skip",
									"value": "{{defaultSkip}}",
									"description": "Skip the returned records found and return the next batch of records"
								}
							]
						},
						"description": "Returns a list of Reward Types. This assumes that reward types have first been uploaded via a POST request or web console"
					},
					"response": []
				},
				{
					"name": "Update Reward Types",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"id\": \"{{rewardTypeId1}}\",\n        \"tags\": [\n            \"ziqniTagUpdated\",\n            \"ziqniTagUpdated2\"\n        ],\n        \"customFields\": {\n            \"customField1\": \"customFieldValue1\",\n            \"customField2\": \"customFieldValue2\"\n        },\n        \"metadata\": {\n            \"9359912f-c24a-4c8f-af57-f20dae0676e2\": \"1da96d06-b24a-4faa-91c0-83fdc96f4ed7\"\n        },\n        \"name\": \"updated Name\",\n        \"description\": \"Test_update_description\",\n        \"unitOfMeasureType\": \"Other\",\n        \"addConstraints\": [],\n        \"removeConstraints\": []\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/reward-types",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reward-types"
							]
						},
						"description": "Update existing Reward types in the Ziqni database"
					},
					"response": []
				},
				{
					"name": "Create Reward Types",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n   {\n    \"customFields\": {\n        \"test_cf_termd65bcccf-d37f-441a-a96d-d0da55a77719\": [\n            1,\n            2\n        ]\n    },\n    \"tags\": [\n        \"Test_key-7563406f-6983-4308-9422-91838fd40fe7\"\n    ],\n    \"metadata\": {\n        \"fea089d7-f751-432e-8646-838c7769ab1e\": \"f2dfff99-b766-414f-8e33-4d77aebbdb5e\"\n    },\n    \"name\": \"Test_name-b6f072c2-df68-4905-a4f6-c19246ff5dc8\",\n    \"key\": \"Test_key-2148168c-3a6c-48ba-b005-68a67a10aebc\",\n    \"unitOfMeasureType\": \"Other\",\n    \"translations\": [\n        {\n            \"languageKey\": \"csb\",\n            \"translations\": [\n                {\n                    \"fieldName\": \"name\",\n                    \"text\": \"test1\"\n                }\n            ]\n        },\n        {\n            \"languageKey\": \"den\",\n            \"translations\": [\n                {\n                    \"fieldName\": \"name\",\n                    \"text\": \"test-temp\"\n                }\n            ]\n        },\n        {\n            \"languageKey\": \"kmb\",\n            \"translations\": [\n                {\n                    \"fieldName\": \"name\",\n                    \"text\": \"Level-Up\"\n                }\n            ]\n        }\n    ],\n    \"addConstraints\": [\n        \"system\"\n    ]\n}\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/reward-types",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reward-types"
							]
						},
						"description": "Create new Reward types in the Ziqni database"
					},
					"response": []
				},
				{
					"name": "Delete Reward Types",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/reward-types?id={{rewardTypeId1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reward-types"
							],
							"query": [
								{
									"key": "id",
									"value": "{{rewardTypeId1}}"
								}
							]
						},
						"description": "Delete Reward types for a given identifier specified"
					},
					"response": []
				},
				{
					"name": "Get Reward Types By Query",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"id\",\n            \"queryValues\": [\n                \"{{rewardTypeId0}}\"\n            ]\n        }\n    ],\n    \"hasNoValue\": [\n        \"tags\"\n    ],\n    \"skip\": 0,\n    \"limit\": 20\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/reward-types/query",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reward-types",
								"query"
							]
						},
						"description": "Retrieve Reward types from Ziqni database by unique Reward type ID's or any other POST body parameters using the POST method"
					},
					"response": []
				},
				{
					"name": "Delete Reward Types By Query",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"key\",\n            \"queryValues\": [\n                \"{{rewardTypeKey0}}\"\n            ]\n        }\n    ],\n    \"skip\": 0,\n    \"limit\": 20\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/reward-types/delete",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reward-types",
								"delete"
							]
						},
						"description": "Delete Reward types from Ziqni database by unique Reward types ID's or any other POST body parameters using the POST method"
					},
					"response": []
				}
			]
		},
		{
			"name": "action-types",
			"item": [
				{
					"name": "get Action Types",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/action-types?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"action-types"
							],
							"query": [
								{
									"key": "id",
									"value": "eiusmod sed c",
									"description": "The unique identifiers of the resources"
								},
								{
									"key": "id",
									"value": "deserunt",
									"description": "The unique identifiers of the resources"
								},
								{
									"key": "_limit",
									"value": "-48278460",
									"description": "Limit the returned total records found"
								},
								{
									"key": "_skip",
									"value": "-48278460",
									"description": "Skip the returned records found and return the next batch of records"
								}
							]
						},
						"description": "Returns a list of Action Types. This assumes that action types have first been uploaded via a POST request or web console"
					},
					"response": [
						{
							"name": "A list of action types and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/action-types?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"action-types"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of action types and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/action-types?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"action-types"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of action types and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/action-types?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"action-types"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of action types and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/action-types?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"action-types"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of action types and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/action-types?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"action-types"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of action types and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/action-types?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"action-types"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of action types and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/action-types?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"action-types"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of action types and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/action-types?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"action-types"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of action types and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/action-types?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"action-types"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "update Action Types",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/action-types",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"action-types"
							]
						},
						"description": "Update existing Action types in the Ziqni database"
					},
					"response": [
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/action-types",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"action-types"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "Accepted",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/action-types",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"action-types"
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/action-types",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"action-types"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/action-types",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"action-types"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/action-types",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"action-types"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/action-types",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"action-types"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/action-types",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"action-types"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/action-types",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"action-types"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/action-types",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"action-types"
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/action-types",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"action-types"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "create Action Types",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/action-types",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"action-types"
							]
						},
						"description": "Create new Action types in the Ziqni database"
					},
					"response": [
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/action-types",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"action-types"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/action-types",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"action-types"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/action-types",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"action-types"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/action-types",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"action-types"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/action-types",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"action-types"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/action-types",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"action-types"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/action-types",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"action-types"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/action-types",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"action-types"
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/action-types",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"action-types"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "delete Action Types",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/action-types?id=eiusmod sed c&id=deserunt",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"action-types"
							],
							"query": [
								{
									"key": "id",
									"value": "eiusmod sed c",
									"description": "The unique identifiers of the resources"
								},
								{
									"key": "id",
									"value": "deserunt",
									"description": "The unique identifiers of the resources"
								}
							]
						},
						"description": "Delete Action types for a given identifier specified"
					},
					"response": [
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/action-types?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"action-types"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/action-types?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"action-types"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/action-types?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"action-types"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/action-types?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"action-types"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/action-types?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"action-types"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/action-types?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"action-types"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/action-types?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"action-types"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/action-types?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"action-types"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/action-types?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"action-types"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "get Action Types By Query",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/action-types/query",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"action-types",
								"query"
							]
						},
						"description": "Retrieve Action types from Ziqni database by unique Action type ID's or any other POST body parameters using the POST method"
					},
					"response": [
						{
							"name": "A list of action types and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/action-types/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"action-types",
										"query"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of action types and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/action-types/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"action-types",
										"query"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of action types and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/action-types/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"action-types",
										"query"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of action types and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/action-types/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"action-types",
										"query"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of action types and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/action-types/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"action-types",
										"query"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of action types and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/action-types/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"action-types",
										"query"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of action types and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/action-types/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"action-types",
										"query"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of action types and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/action-types/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"action-types",
										"query"
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of action types and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/action-types/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"action-types",
										"query"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "delete Action Types By Query",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/action-types/delete",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"action-types",
								"delete"
							]
						},
						"description": "Delete Action types from Ziqni database by unique Action types ID's or any other POST body parameters using the POST method"
					},
					"response": [
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/action-types/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"action-types",
										"delete"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/action-types/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"action-types",
										"delete"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/action-types/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"action-types",
										"delete"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/action-types/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"action-types",
										"delete"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/action-types/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"action-types",
										"delete"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/action-types/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"action-types",
										"delete"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/action-types/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"action-types",
										"delete"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/action-types/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"action-types",
										"delete"
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/action-types/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"action-types",
										"delete"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "languages",
			"item": [
				{
					"name": "get Languages",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/languages?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"languages"
							],
							"query": [
								{
									"key": "id",
									"value": "eiusmod sed c",
									"description": "The unique identifiers of the resources"
								},
								{
									"key": "id",
									"value": "deserunt",
									"description": "The unique identifiers of the resources"
								},
								{
									"key": "_limit",
									"value": "-48278460",
									"description": "Limit the returned total records found"
								},
								{
									"key": "_skip",
									"value": "-48278460",
									"description": "Skip the returned records found and return the next batch of records"
								}
							]
						},
						"description": "Returns a list of Languages available in the space. This assumes that languages have first been uploaded via a POST request or web console"
					},
					"response": [
						{
							"name": "A list of languages for the space and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/languages?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"languages"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of languages for the space and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/languages?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"languages"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of languages for the space and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/languages?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"languages"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of languages for the space and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/languages?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"languages"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of languages for the space and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/languages?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"languages"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of languages for the space and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/languages?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"languages"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of languages for the space and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/languages?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"languages"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of languages for the space and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/languages?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"languages"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of languages for the space and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/languages?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"languages"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "update Languages",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/languages",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"languages"
							]
						},
						"description": "Update an existing Language in the Ziqni database"
					},
					"response": [
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/languages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"languages"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "Accepted",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/languages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"languages"
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/languages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"languages"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/languages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"languages"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/languages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"languages"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/languages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"languages"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/languages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"languages"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/languages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"languages"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/languages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"languages"
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/languages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"languages"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "create Languages",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/languages",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"languages"
							]
						},
						"description": "Create a new Language in the Ziqni database"
					},
					"response": [
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/languages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"languages"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/languages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"languages"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/languages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"languages"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/languages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"languages"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/languages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"languages"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/languages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"languages"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/languages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"languages"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/languages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"languages"
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/languages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"languages"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "delete Languages",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/languages?id=eiusmod sed c&id=deserunt",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"languages"
							],
							"query": [
								{
									"key": "id",
									"value": "eiusmod sed c",
									"description": "The unique identifiers of the resources"
								},
								{
									"key": "id",
									"value": "deserunt",
									"description": "The unique identifiers of the resources"
								}
							]
						},
						"description": "Delete Languages for a given identifier specified"
					},
					"response": [
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/languages?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"languages"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/languages?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"languages"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/languages?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"languages"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/languages?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"languages"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/languages?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"languages"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/languages?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"languages"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/languages?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"languages"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/languages?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"languages"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/languages?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"languages"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "get Languages By Query",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/languages/query",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"languages",
								"query"
							]
						},
						"description": "Retrieve Languages from Ziqni database by unique Language ID's or any other POST body parameters using the POST method"
					},
					"response": [
						{
							"name": "A list of languages for the space and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/languages/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"languages",
										"query"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of languages for the space and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/languages/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"languages",
										"query"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of languages for the space and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/languages/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"languages",
										"query"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of languages for the space and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/languages/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"languages",
										"query"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of languages for the space and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/languages/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"languages",
										"query"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of languages for the space and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/languages/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"languages",
										"query"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of languages for the space and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/languages/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"languages",
										"query"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of languages for the space and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/languages/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"languages",
										"query"
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of languages for the space and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/languages/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"languages",
										"query"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "NOT AVAILABLE IN CURRENT RELEASE",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/languages/delete",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"languages",
								"delete"
							]
						},
						"description": "Delete Languages from Ziqni database by unique Language ID's or any other POST body parameters using the POST method"
					},
					"response": [
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/languages/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"languages",
										"delete"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/languages/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"languages",
										"delete"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/languages/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"languages",
										"delete"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/languages/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"languages",
										"delete"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/languages/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"languages",
										"delete"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/languages/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"languages",
										"delete"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/languages/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"languages",
										"delete"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/languages/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"languages",
										"delete"
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/languages/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"languages",
										"delete"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "get List Of All Languages",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/languages/available?_limit=-48278460&_skip=-48278460",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"languages",
								"available"
							],
							"query": [
								{
									"key": "_limit",
									"value": "-48278460",
									"description": "Limit the returned total records found"
								},
								{
									"key": "_skip",
									"value": "-48278460",
									"description": "Skip the returned records found and return the next batch of records"
								}
							]
						},
						"description": "Returns a list of all avaialable Languages"
					},
					"response": [
						{
							"name": "A list of languages for the space and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/languages/available?_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"languages",
										"available"
									],
									"query": [
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of languages for the space and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/languages/available?_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"languages",
										"available"
									],
									"query": [
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of languages for the space and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/languages/available?_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"languages",
										"available"
									],
									"query": [
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of languages for the space and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/languages/available?_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"languages",
										"available"
									],
									"query": [
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of languages for the space and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/languages/available?_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"languages",
										"available"
									],
									"query": [
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of languages for the space and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/languages/available?_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"languages",
										"available"
									],
									"query": [
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of languages for the space and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/languages/available?_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"languages",
										"available"
									],
									"query": [
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of languages for the space and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/languages/available?_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"languages",
										"available"
									],
									"query": [
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of languages for the space and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/languages/available?_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"languages",
										"available"
									],
									"query": [
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "custom-fields",
			"item": [
				{
					"name": "Get custom fields",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/custom-fields?id={{customFieldId1}},{{customFieldId1}}&_limit={{defaultLimit}}&_skip={{defaultSkip}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"custom-fields"
							],
							"query": [
								{
									"key": "id",
									"value": "{{customFieldId1}},{{customFieldId1}}"
								},
								{
									"key": "_limit",
									"value": "{{defaultLimit}}",
									"description": "Limit the returned total records found"
								},
								{
									"key": "_skip",
									"value": "{{defaultSkip}}",
									"description": "Skip the returned records found and return the next batch of records"
								}
							]
						},
						"description": "Returns a list of Custom fields. This assumes that custom fields have first been uploaded via a POST request or web console"
					},
					"response": []
				},
				{
					"name": "Update custom fields",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n    \"id\": \"{{customFieldId0}}\",\n    \"name\": \"updated custom field name\",\n    \"description\": \"updated description\",\n    \"fieldType\": \"TextArray\",\n    \"appliesTo\": \"Repository\"\n}\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/custom-fields",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"custom-fields"
							]
						},
						"description": "Update existing Custom fields in the Ziqni database"
					},
					"response": []
				},
				{
					"name": "Create custom fields",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n   {\n    \"name\": \"test custom field 0\",\n    \"key\": \"test_custom_field_key\",\n    \"description\": \"some text\",\n    \"fieldType\": \"TextArray\",\n    \"appliesTo\": \"Repository\"\n},\n{\n    \"name\": \"test custom field 1\",\n    \"key\": \"test_custom_field_key_1\",\n    \"description\": \"test description\",\n    \"fieldType\": \"TextArray\",\n    \"appliesTo\": \"Repository\"\n}\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/custom-fields",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"custom-fields"
							]
						},
						"description": "Create new Custom fields in the Ziqni database"
					},
					"response": []
				},
				{
					"name": "Delete custom fields",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/custom-fields?id={{customFieldId0}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"custom-fields"
							],
							"query": [
								{
									"key": "id",
									"value": "{{customFieldId0}}"
								}
							]
						},
						"description": "Delete the Custom fields for a given identifier specified"
					},
					"response": []
				},
				{
					"name": "Get custom fields by query",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"key\",\n            \"queryValues\": [\n                \"{{customFieldKey0}}\"\n            ]\n        }\n    ],\n    \"hasNoValue\": [\n        \"tags\"\n    ],\n    \"skip\": 0,\n    \"limit\": 20\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/custom-fields/query",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"custom-fields",
								"query"
							]
						},
						"description": "Retrieve Custom fields from Ziqni database by unique Custom field ID's or any other POST body parameters using the POST method"
					},
					"response": []
				},
				{
					"name": "Delete custom fields by query",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"key\",\n            \"queryValues\": [\n                \"{{customFieldKey0}}\"\n            ]\n        }\n    ],\n    \"skip\": 0,\n    \"limit\": 20\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/custom-fields/delete",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"custom-fields",
								"delete"
							]
						},
						"description": "Delete Custom fields from Ziqni database by unique Custom field ID's or any other POST body parameters using the POST method"
					},
					"response": []
				}
			]
		},
		{
			"name": "units-of-measure",
			"item": [
				{
					"name": "get Units Of Measure",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/units-of-measure?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"units-of-measure"
							],
							"query": [
								{
									"key": "id",
									"value": "eiusmod sed c",
									"description": "The unique identifiers of the resources"
								},
								{
									"key": "id",
									"value": "deserunt",
									"description": "The unique identifiers of the resources"
								},
								{
									"key": "_limit",
									"value": "-48278460",
									"description": "Limit the returned total records found"
								},
								{
									"key": "_skip",
									"value": "-48278460",
									"description": "Skip the returned records found and return the next batch of records"
								}
							]
						},
						"description": "Returns a list of Units of measure. This assumes that units of measure have first been uploaded via a POST request or web console"
					},
					"response": [
						{
							"name": "A list of unit of measure and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/units-of-measure?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"units-of-measure"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of unit of measure and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/units-of-measure?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"units-of-measure"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of unit of measure and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/units-of-measure?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"units-of-measure"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of unit of measure and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/units-of-measure?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"units-of-measure"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of unit of measure and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/units-of-measure?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"units-of-measure"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of unit of measure and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/units-of-measure?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"units-of-measure"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of unit of measure and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/units-of-measure?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"units-of-measure"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of unit of measure and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/units-of-measure?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"units-of-measure"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of unit of measure and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/units-of-measure?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"units-of-measure"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "update Units Of Measure",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/units-of-measure",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"units-of-measure"
							]
						},
						"description": "Update an existing Unit of measure in the Ziqni database"
					},
					"response": [
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/units-of-measure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"units-of-measure"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "Accepted",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/units-of-measure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"units-of-measure"
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/units-of-measure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"units-of-measure"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/units-of-measure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"units-of-measure"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/units-of-measure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"units-of-measure"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/units-of-measure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"units-of-measure"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/units-of-measure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"units-of-measure"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/units-of-measure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"units-of-measure"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/units-of-measure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"units-of-measure"
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/units-of-measure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"units-of-measure"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "create Units Of Measure",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/units-of-measure",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"units-of-measure"
							]
						},
						"description": "Create a new Unit of measure in the Ziqni database"
					},
					"response": [
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/units-of-measure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"units-of-measure"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/units-of-measure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"units-of-measure"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/units-of-measure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"units-of-measure"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/units-of-measure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"units-of-measure"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/units-of-measure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"units-of-measure"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/units-of-measure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"units-of-measure"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/units-of-measure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"units-of-measure"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/units-of-measure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"units-of-measure"
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/units-of-measure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"units-of-measure"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "delete Units Of Measure",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/units-of-measure?id=eiusmod sed c&id=deserunt",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"units-of-measure"
							],
							"query": [
								{
									"key": "id",
									"value": "eiusmod sed c",
									"description": "The unique identifiers of the resources"
								},
								{
									"key": "id",
									"value": "deserunt",
									"description": "The unique identifiers of the resources"
								}
							]
						},
						"description": "Delete the Unit of measured for a given identifier specified"
					},
					"response": [
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/units-of-measure?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"units-of-measure"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/units-of-measure?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"units-of-measure"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/units-of-measure?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"units-of-measure"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/units-of-measure?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"units-of-measure"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/units-of-measure?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"units-of-measure"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/units-of-measure?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"units-of-measure"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/units-of-measure?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"units-of-measure"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/units-of-measure?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"units-of-measure"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/units-of-measure?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"units-of-measure"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "get Units Of Measure By Query",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/units-of-measure/query",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"units-of-measure",
								"query"
							]
						},
						"description": "Retrieve Units of measure from Ziqni database by unique Unit of measure ID's or any other POST body parameters using the POST method"
					},
					"response": [
						{
							"name": "A list of unit of measure and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/units-of-measure/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"units-of-measure",
										"query"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of unit of measure and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/units-of-measure/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"units-of-measure",
										"query"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of unit of measure and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/units-of-measure/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"units-of-measure",
										"query"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of unit of measure and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/units-of-measure/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"units-of-measure",
										"query"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of unit of measure and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/units-of-measure/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"units-of-measure",
										"query"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of unit of measure and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/units-of-measure/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"units-of-measure",
										"query"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of unit of measure and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/units-of-measure/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"units-of-measure",
										"query"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of unit of measure and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/units-of-measure/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"units-of-measure",
										"query"
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of unit of measure and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/units-of-measure/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"units-of-measure",
										"query"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "NOT AVAILABLE IN CURRENT RELEASE",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/units-of-measure/delete",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"units-of-measure",
								"delete"
							]
						},
						"description": "Delete Units of measure from Ziqni database by unique Unit of measure ID's or any other POST body parameters using the POST method"
					},
					"response": [
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/units-of-measure/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"units-of-measure",
										"delete"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/units-of-measure/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"units-of-measure",
										"delete"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/units-of-measure/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"units-of-measure",
										"delete"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/units-of-measure/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"units-of-measure",
										"delete"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/units-of-measure/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"units-of-measure",
										"delete"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/units-of-measure/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"units-of-measure",
										"delete"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/units-of-measure/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"units-of-measure",
										"delete"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/units-of-measure/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"units-of-measure",
										"delete"
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/units-of-measure/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"units-of-measure",
										"delete"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "transformers",
			"item": [
				{
					"name": "get Transformers",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/transformers?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transformers"
							],
							"query": [
								{
									"key": "id",
									"value": "eiusmod sed c",
									"description": "The unique identifiers of the resources"
								},
								{
									"key": "id",
									"value": "deserunt",
									"description": "The unique identifiers of the resources"
								},
								{
									"key": "_limit",
									"value": "-48278460",
									"description": "Limit the returned total records found"
								},
								{
									"key": "_skip",
									"value": "-48278460",
									"description": "Skip the returned records found and return the next batch of records"
								}
							]
						},
						"description": "Returns a list of Transformers. This assumes that transformers have first been uploaded via a POST request or web console"
					},
					"response": [
						{
							"name": "A list of transformers and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transformers?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transformers"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of transformers and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transformers?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transformers"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of transformers and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transformers?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transformers"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of transformers and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transformers?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transformers"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of transformers and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transformers?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transformers"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of transformers and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transformers?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transformers"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of transformers and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transformers?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transformers"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of transformers and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transformers?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transformers"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of transformers and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transformers?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transformers"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "update Transformers",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/transformers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transformers"
							]
						},
						"description": "Update an existing Transformer in the Ziqni system"
					},
					"response": [
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/transformers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transformers"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "Accepted",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/transformers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transformers"
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/transformers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transformers"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/transformers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transformers"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/transformers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transformers"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/transformers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transformers"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/transformers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transformers"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/transformers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transformers"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/transformers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transformers"
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/transformers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transformers"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "create Transformers",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"sourceLanguage\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"source\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"sourceLanguage\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"source\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/transformers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transformers"
							]
						},
						"description": "Create a new Transformer in the Ziqni system"
					},
					"response": [
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"sourceLanguage\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"source\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"sourceLanguage\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"source\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/transformers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transformers"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"sourceLanguage\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"source\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"sourceLanguage\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"source\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/transformers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transformers"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"sourceLanguage\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"source\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"sourceLanguage\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"source\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/transformers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transformers"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"sourceLanguage\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"source\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"sourceLanguage\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"source\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/transformers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transformers"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"sourceLanguage\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"source\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"sourceLanguage\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"source\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/transformers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transformers"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"sourceLanguage\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"source\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"sourceLanguage\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"source\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/transformers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transformers"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"sourceLanguage\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"source\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"sourceLanguage\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"source\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/transformers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transformers"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"sourceLanguage\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"source\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"sourceLanguage\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"source\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/transformers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transformers"
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"sourceLanguage\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"source\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"sourceLanguage\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"source\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/transformers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transformers"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "delete Transformers",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/transformers?id=eiusmod sed c&id=deserunt",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transformers"
							],
							"query": [
								{
									"key": "id",
									"value": "eiusmod sed c",
									"description": "The unique identifiers of the resources"
								},
								{
									"key": "id",
									"value": "deserunt",
									"description": "The unique identifiers of the resources"
								}
							]
						},
						"description": "Delete the Transformers for a given identifier specified"
					},
					"response": [
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transformers?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transformers"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transformers?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transformers"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transformers?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transformers"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transformers?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transformers"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transformers?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transformers"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transformers?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transformers"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transformers?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transformers"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transformers?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transformers"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transformers?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transformers"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "get Transformers By Query",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/transformers/query",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transformers",
								"query"
							]
						},
						"description": "Retrieve a Transformer or a list of Transformers from Ziqni by unique Transformer ID's or any other POST body parameters using the POST method"
					},
					"response": [
						{
							"name": "A list of transformers and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/transformers/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transformers",
										"query"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of transformers and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/transformers/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transformers",
										"query"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of transformers and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/transformers/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transformers",
										"query"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of transformers and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/transformers/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transformers",
										"query"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of transformers and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/transformers/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transformers",
										"query"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of transformers and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/transformers/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transformers",
										"query"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of transformers and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/transformers/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transformers",
										"query"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of transformers and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/transformers/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transformers",
										"query"
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of transformers and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/transformers/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transformers",
										"query"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "NOT AVAILABLE IN CURRENT RELEASE",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/transformers/delete",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transformers",
								"delete"
							]
						},
						"description": "Delete a Transformer or a list of Transformers from Ziqni by unique Transformer ID's or any other POST body parameters using the POST method"
					},
					"response": [
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/transformers/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transformers",
										"delete"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/transformers/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transformers",
										"delete"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/transformers/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transformers",
										"delete"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/transformers/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transformers",
										"delete"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/transformers/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transformers",
										"delete"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/transformers/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transformers",
										"delete"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/transformers/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transformers",
										"delete"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/transformers/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transformers",
										"delete"
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/transformers/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transformers",
										"delete"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "webhooks",
			"item": [
				{
					"name": "get Webhooks",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/webhooks?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"webhooks"
							],
							"query": [
								{
									"key": "id",
									"value": "eiusmod sed c",
									"description": "The unique identifiers of the resources"
								},
								{
									"key": "id",
									"value": "deserunt",
									"description": "The unique identifiers of the resources"
								},
								{
									"key": "_limit",
									"value": "-48278460",
									"description": "Limit the returned total records found"
								},
								{
									"key": "_skip",
									"value": "-48278460",
									"description": "Skip the returned records found and return the next batch of records"
								}
							]
						},
						"description": "Returns a list of Webhooks."
					},
					"response": [
						{
							"name": "A list of webhooks and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of webhooks and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of webhooks and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of webhooks and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of webhooks and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of webhooks and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of webhooks and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of webhooks and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of webhooks and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "update Webhooks",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"postToUrl\": \"http://www.my-domain.com/abcd\",\n    \"triggers\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"description\": \"http://www.my-domain.com/abcd\",\n    \"name\": \"test\",\n    \"headers\": {}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/webhooks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"webhooks"
							]
						},
						"description": "Update an existing Webhook in the Ziqni system"
					},
					"response": [
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"postToUrl\": \"http://www.my-domain.com/abcd\",\n    \"triggers\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"description\": \"http://www.my-domain.com/abcd\",\n    \"name\": \"test\",\n    \"headers\": {}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/webhooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "Accepted",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"postToUrl\": \"http://www.my-domain.com/abcd\",\n    \"triggers\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"description\": \"http://www.my-domain.com/abcd\",\n    \"name\": \"test\",\n    \"headers\": {}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/webhooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks"
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"postToUrl\": \"http://www.my-domain.com/abcd\",\n    \"triggers\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"description\": \"http://www.my-domain.com/abcd\",\n    \"name\": \"test\",\n    \"headers\": {}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/webhooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"postToUrl\": \"http://www.my-domain.com/abcd\",\n    \"triggers\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"description\": \"http://www.my-domain.com/abcd\",\n    \"name\": \"test\",\n    \"headers\": {}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/webhooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"postToUrl\": \"http://www.my-domain.com/abcd\",\n    \"triggers\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"description\": \"http://www.my-domain.com/abcd\",\n    \"name\": \"test\",\n    \"headers\": {}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/webhooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"postToUrl\": \"http://www.my-domain.com/abcd\",\n    \"triggers\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"description\": \"http://www.my-domain.com/abcd\",\n    \"name\": \"test\",\n    \"headers\": {}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/webhooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"postToUrl\": \"http://www.my-domain.com/abcd\",\n    \"triggers\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"description\": \"http://www.my-domain.com/abcd\",\n    \"name\": \"test\",\n    \"headers\": {}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/webhooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"postToUrl\": \"http://www.my-domain.com/abcd\",\n    \"triggers\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"description\": \"http://www.my-domain.com/abcd\",\n    \"name\": \"test\",\n    \"headers\": {}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/webhooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"postToUrl\": \"http://www.my-domain.com/abcd\",\n    \"triggers\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"description\": \"http://www.my-domain.com/abcd\",\n    \"name\": \"test\",\n    \"headers\": {}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/webhooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks"
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"postToUrl\": \"http://www.my-domain.com/abcd\",\n    \"triggers\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"description\": \"http://www.my-domain.com/abcd\",\n    \"name\": \"test\",\n    \"headers\": {}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/webhooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "create Webhooks",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"postToUrl\": \"http://www.my-domain.com/abcd\",\n    \"triggers\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"name\": \"test\",\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"description\": \"http://www.my-domain.com/abcd\",\n    \"headers\": {}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/webhooks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"webhooks"
							]
						},
						"description": "Create a new Webhook in the Ziqni system"
					},
					"response": [
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"postToUrl\": \"http://www.my-domain.com/abcd\",\n    \"triggers\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"name\": \"test\",\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"description\": \"http://www.my-domain.com/abcd\",\n    \"headers\": {}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/webhooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"postToUrl\": \"http://www.my-domain.com/abcd\",\n    \"triggers\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"name\": \"test\",\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"description\": \"http://www.my-domain.com/abcd\",\n    \"headers\": {}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/webhooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"postToUrl\": \"http://www.my-domain.com/abcd\",\n    \"triggers\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"name\": \"test\",\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"description\": \"http://www.my-domain.com/abcd\",\n    \"headers\": {}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/webhooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"postToUrl\": \"http://www.my-domain.com/abcd\",\n    \"triggers\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"name\": \"test\",\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"description\": \"http://www.my-domain.com/abcd\",\n    \"headers\": {}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/webhooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"postToUrl\": \"http://www.my-domain.com/abcd\",\n    \"triggers\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"name\": \"test\",\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"description\": \"http://www.my-domain.com/abcd\",\n    \"headers\": {}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/webhooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"postToUrl\": \"http://www.my-domain.com/abcd\",\n    \"triggers\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"name\": \"test\",\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"description\": \"http://www.my-domain.com/abcd\",\n    \"headers\": {}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/webhooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"postToUrl\": \"http://www.my-domain.com/abcd\",\n    \"triggers\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"name\": \"test\",\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"description\": \"http://www.my-domain.com/abcd\",\n    \"headers\": {}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/webhooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"postToUrl\": \"http://www.my-domain.com/abcd\",\n    \"triggers\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"name\": \"test\",\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"description\": \"http://www.my-domain.com/abcd\",\n    \"headers\": {}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/webhooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks"
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"postToUrl\": \"http://www.my-domain.com/abcd\",\n    \"triggers\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"name\": \"test\",\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"description\": \"http://www.my-domain.com/abcd\",\n    \"headers\": {}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/webhooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "delete Webhooks",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/webhooks?id=eiusmod sed c&id=deserunt",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"webhooks"
							],
							"query": [
								{
									"key": "id",
									"value": "eiusmod sed c",
									"description": "The unique identifiers of the resources"
								},
								{
									"key": "id",
									"value": "deserunt",
									"description": "The unique identifiers of the resources"
								}
							]
						},
						"description": "Delete the Webhooks for a given identifier specified"
					},
					"response": [
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "get Webhooks By Query",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/webhooks/query",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"webhooks",
								"query"
							]
						},
						"description": "Retrieve a Webhook or a list of Webhooks from Ziqni by unique Webhook ID's or any other POST body parameters using the POST method"
					},
					"response": [
						{
							"name": "A list of webhooks and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/webhooks/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										"query"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of webhooks and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/webhooks/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										"query"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of webhooks and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/webhooks/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										"query"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of webhooks and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/webhooks/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										"query"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of webhooks and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/webhooks/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										"query"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of webhooks and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/webhooks/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										"query"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of webhooks and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/webhooks/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										"query"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of webhooks and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/webhooks/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										"query"
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of webhooks and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/webhooks/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										"query"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "NOT AVAILABLE IN CURRENT RELEASE",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/webhooks/delete",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"webhooks",
								"delete"
							]
						},
						"description": "Delete a Webhook or a list of Webhooks from Ziqni by unique Webhook ID's or any other POST body parameters using the POST method"
					},
					"response": [
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/webhooks/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										"delete"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/webhooks/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										"delete"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/webhooks/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										"delete"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/webhooks/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										"delete"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/webhooks/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										"delete"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/webhooks/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										"delete"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/webhooks/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										"delete"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/webhooks/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										"delete"
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/webhooks/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										"delete"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "NOT AVAILABLE IN CURRENT RELEASE",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"status\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/webhooks/state",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"webhooks",
								"state"
							]
						},
						"description": "Update the state of a Wbhook using the POST method"
					},
					"response": [
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"status\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/webhooks/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										"state"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"status\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/webhooks/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										"state"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"status\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/webhooks/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										"state"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"status\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/webhooks/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										"state"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"status\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/webhooks/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										"state"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"status\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/webhooks/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										"state"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"status\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/webhooks/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										"state"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"status\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/webhooks/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										"state"
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"status\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/webhooks/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										"state"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "get Webhooks Triggers",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/webhooks/triggers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"webhooks",
								"triggers"
							]
						},
						"description": "Returns a list of all avilable Webhooks triggers"
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/triggers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										"triggers"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n },\n \"results\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"errors\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ]\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/triggers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										"triggers"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n },\n \"results\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"errors\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ]\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/triggers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										"triggers"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n },\n \"results\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"errors\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ]\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/triggers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										"triggers"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n },\n \"results\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"errors\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ]\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/triggers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										"triggers"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n },\n \"results\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"errors\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ]\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/triggers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										"triggers"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n },\n \"results\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"errors\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ]\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/triggers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										"triggers"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n },\n \"results\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"errors\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ]\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/triggers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										"triggers"
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n },\n \"results\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"errors\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ]\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/triggers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										"triggers"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n },\n \"results\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"errors\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "events",
			"item": [
				{
					"name": "get Events",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/events?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"events"
							],
							"query": [
								{
									"key": "id",
									"value": "eiusmod sed c",
									"description": "The unique identifiers of the resources"
								},
								{
									"key": "id",
									"value": "deserunt",
									"description": "The unique identifiers of the resources"
								},
								{
									"key": "_limit",
									"value": "-48278460",
									"description": "Limit the returned total records found"
								},
								{
									"key": "_skip",
									"value": "-48278460",
									"description": "Skip the returned records found and return the next batch of records"
								}
							]
						},
						"description": "Retrieve an Event or a list of Events from Ziqni by unique Event ID's or any other POST body parameters using the POST method"
					},
					"response": [
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/events?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"events"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/events?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"events"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/events?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"events"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/events?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"events"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/events?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"events"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/events?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"events"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/events?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"events"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/events?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"events"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/events?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"events"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "create Events",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"action\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"sourceValue\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"transactionTimestamp\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entityRefId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"memberRefId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"eventRefId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"batchId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"tags\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"action\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"sourceValue\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"transactionTimestamp\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entityRefId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"memberRefId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"eventRefId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"batchId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"tags\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/events",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"events"
							]
						},
						"description": "Create an Event"
					},
					"response": [
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"action\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"sourceValue\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"transactionTimestamp\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entityRefId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"memberRefId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"eventRefId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"batchId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"tags\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"action\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"sourceValue\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"transactionTimestamp\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entityRefId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"memberRefId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"eventRefId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"batchId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"tags\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/events",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"events"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"action\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"sourceValue\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"transactionTimestamp\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entityRefId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"memberRefId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"eventRefId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"batchId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"tags\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"action\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"sourceValue\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"transactionTimestamp\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entityRefId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"memberRefId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"eventRefId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"batchId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"tags\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/events",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"events"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"action\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"sourceValue\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"transactionTimestamp\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entityRefId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"memberRefId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"eventRefId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"batchId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"tags\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"action\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"sourceValue\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"transactionTimestamp\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entityRefId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"memberRefId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"eventRefId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"batchId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"tags\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/events",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"events"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"action\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"sourceValue\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"transactionTimestamp\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entityRefId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"memberRefId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"eventRefId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"batchId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"tags\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"action\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"sourceValue\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"transactionTimestamp\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entityRefId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"memberRefId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"eventRefId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"batchId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"tags\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/events",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"events"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"action\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"sourceValue\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"transactionTimestamp\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entityRefId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"memberRefId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"eventRefId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"batchId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"tags\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"action\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"sourceValue\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"transactionTimestamp\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entityRefId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"memberRefId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"eventRefId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"batchId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"tags\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/events",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"events"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"action\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"sourceValue\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"transactionTimestamp\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entityRefId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"memberRefId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"eventRefId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"batchId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"tags\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"action\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"sourceValue\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"transactionTimestamp\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entityRefId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"memberRefId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"eventRefId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"batchId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"tags\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/events",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"events"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"action\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"sourceValue\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"transactionTimestamp\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entityRefId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"memberRefId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"eventRefId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"batchId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"tags\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"action\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"sourceValue\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"transactionTimestamp\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entityRefId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"memberRefId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"eventRefId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"batchId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"tags\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/events",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"events"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"action\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"sourceValue\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"transactionTimestamp\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entityRefId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"memberRefId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"eventRefId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"batchId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"tags\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"action\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"sourceValue\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"transactionTimestamp\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entityRefId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"memberRefId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"eventRefId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"batchId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"tags\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/events",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"events"
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"action\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"sourceValue\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"transactionTimestamp\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entityRefId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"memberRefId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"eventRefId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"batchId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"tags\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"action\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"sourceValue\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"transactionTimestamp\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entityRefId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"memberRefId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"eventRefId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"batchId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"tags\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/events",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"events"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "get Events By Query",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/events/query",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"events",
								"query"
							]
						},
						"description": "Retrieve an Event or a list of Events from Ziqni by unique Event ID's or any other POST body parameters using the POST method"
					},
					"response": [
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/events/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"events",
										"query"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/events/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"events",
										"query"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/events/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"events",
										"query"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/events/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"events",
										"query"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/events/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"events",
										"query"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/events/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"events",
										"query"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/events/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"events",
										"query"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/events/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"events",
										"query"
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/events/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"events",
										"query"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "api-keys",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Get api keys by Id",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api-keys/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api-keys",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "repr",
											"description": "(Required) Unique identifier of the resource"
										}
									]
								},
								"description": "Returns an Api key by identifier provided. This assumes that api keys have first been created via a POST request or web console"
							},
							"response": []
						},
						{
							"name": "Delete api keys by Id",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api-keys/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api-keys",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "repr",
											"description": "(Required) Unique identifier of the resource"
										}
									]
								},
								"description": "Delete the Api key for a given identifier specified"
							},
							"response": []
						}
					]
				},
				{
					"name": "Get api keys",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api-keys?id={{apiKey0}},{{apiKey1}}&_limit={{defaultLimit}}&_skip={{defaultSkip}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api-keys"
							],
							"query": [
								{
									"key": "id",
									"value": "{{apiKey0}},{{apiKey1}}",
									"description": "The unique identifiers of the resources"
								},
								{
									"key": "_limit",
									"value": "{{defaultLimit}}",
									"description": "Limit the returned total records found"
								},
								{
									"key": "_skip",
									"value": "{{defaultSkip}}",
									"description": "Skip the returned records found and return the next batch of records"
								}
							]
						},
						"description": "Returns a list of Api keys. This assumes that api keys have first been created via a POST request or web console"
					},
					"response": []
				},
				{
					"name": "Update api keys",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{apiKey0}}\",\n    \"customFields\": {\n        \"test_cf_term68b743e9-2833-4a61-8595-3fa536c3ab9b\":\"name_update\"\n    },\n    \"tags\": [\"Test_key-1f97cdc4-fdb4-4f1e-b93c-e3bc3a7fd69f\"],\n    \"metadata\": {\n        \"b03f83fa-c4e1-4353-a776-e9d63d614ff1\":\"24f910de-2e6b-453f-88bc-4be3b89b62b8\"\n    },\n    \"description\": \"User api key\",\n    \"whiteListIPs\": [\n        \"123.221.22.1\",\n        \"333.224.34.1\"\n    ],\n    \"role\": \"Web\",\n    \"addConstraints\":[\"active\",\"default\"],\n    \"removeConstraints\": [\"active\"]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api-keys",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api-keys"
							]
						},
						"description": "Update an existing Api key in the Ziqni system"
					},
					"response": []
				},
				{
					"name": "Create api keys",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"customFields\":{\n        \"test_cf_term68b743e9-2833-4a61-8595-3fa536c3ab9b\":\"name\"\n        },\n    \"tags\":[\"Test_key-1f97cdc4-fdb4-4f1e-b93c-e3bc3a7fd69f\"],\n    \"metadata\":{\n        \"b03f83fa-c4e1-4353-a776-e9d63d614ff1\":\"24f910de-2e6b-453f-88bc-4be3b89b62b8\"\n        },\n    \"description\":\"Test description\",\n    \"whiteListIPs\":[\"127.0.0.1\"],\n    \"role\":\"Web\",\n    \"addConstraints\":[\"active\",\"default\"]\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api-keys",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api-keys"
							]
						},
						"description": "Create a new Api key in the Ziqni system"
					},
					"response": []
				},
				{
					"name": "Get api keys by query",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"description\",\n            \"queryValues\": [\n                \"{{apiKeyDescription0}}\"\n            ]\n        }\n    ],\n    \"hasNoValue\": [\n        \"tags\"\n    ],\n    \"skip\": 0,\n    \"limit\": 20\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api-keys/query",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api-keys",
								"query"
							]
						},
						"description": "Retrieve an Api key or a list of Api keys by query"
					},
					"response": []
				},
				{
					"name": "Delete api keys by query",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"description\",\n            \"queryValues\": [\n                \"{{apiKeyDescription0}}\"\n            ]\n        }\n    ],\n    \"skip\": 0,\n    \"limit\": 20\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api-keys/delete",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api-keys",
								"delete"
							]
						},
						"description": "Delete an Api key or a list of Api keys from Ziqni by query"
					},
					"response": []
				}
			]
		},
		{
			"name": "tags",
			"item": [
				{
					"name": "Get tags",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/tags?id={{tagId0}}, {{tagId1}}&_limit={{defaultLimit}}&_skip={{defaultSkip}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tags"
							],
							"query": [
								{
									"key": "id",
									"value": "{{tagId0}}, {{tagId1}}",
									"description": "The unique identifiers of the resources"
								},
								{
									"key": "_limit",
									"value": "{{defaultLimit}}",
									"description": "Limit the returned total records found"
								},
								{
									"key": "_skip",
									"value": "{{defaultSkip}}",
									"description": "Skip the returned records found and return the next batch of records"
								}
							]
						},
						"description": "Returns a list of Tags. This assumes that tags have first been uploaded via a POST request or web console"
					},
					"response": []
				},
				{
					"name": "Update tags",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"id\":\"{{tagId0}}\",\n        \"name\":null,\n        \"description\":\"Test_update_description\",\n        \"entityTypes\":[],\n        \"metadata\":null\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/tags",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tags"
							]
						},
						"description": "Update existing Tags in the Ziqni database"
					},
					"response": []
				},
				{
					"name": "Create tags",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"name\":\"Test_name-071e4a59-6f07-4085-b1bb-9c6239f8148c\",\n        \"key\":\"Test_key-deef82e9-b34f-4636-a614-92fa3807ec38\",\n        \"description\":\"Test Description\",\n        \"metadata\":{\n            \"MetaKey\":\"MetaValue\"\n            },\n            \"entityTypes\":[\"FileObject\"]\n    },\n\n    {\n        \"name\":\"Test_name-071e4a59-6f07-4085-b1bb-9c6239f8354\",\n        \"key\":\"Test_key-deef82e9-b34f-4636-a614-92fa3807ec39\",\n        \"description\":\"Test Description\",\n        \"metadata\":{\n            \"MetaKey\":\"MetaValue\"\n            },\n            \"entityTypes\":[\"FileObject\"]\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/tags",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tags"
							]
						},
						"description": "Create new Tags in the Ziqni database"
					},
					"response": []
				},
				{
					"name": "Delete tags",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/tags?id={{tagId0}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tags"
							],
							"query": [
								{
									"key": "id",
									"value": "{{tagId0}}"
								}
							]
						},
						"description": "Delete Tags for a given identifier specified"
					},
					"response": []
				},
				{
					"name": "Delete tags by query",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"key\",\n            \"queryValues\": [\n                \"{{tagKey0}}\"\n            ]\n        }\n    ],\n    \"skip\": 0,\n    \"limit\": 20\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/tags/delete",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tags",
								"delete"
							]
						},
						"description": "Delete Tags from Ziqni database by unique Tags ID's or any other POST body parameters using the POST method"
					},
					"response": []
				},
				{
					"name": "Get tags by query",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"key\",\n            \"queryValues\": [\n                \"{{tagKey0}}\"\n            ]\n        }\n    ],\n    \"hasNoValue\": [\n        \"tags\"\n    ],\n    \"skip\": 0,\n    \"limit\": 20\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/tags/query",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tags",
								"query"
							]
						},
						"description": "Retrieve Tags from Ziqni database by unique Tags ID's or any other POST body parameters using the POST method"
					},
					"response": []
				}
			]
		},
		{
			"name": "connections",
			"item": [
				{
					"name": "sqs",
					"item": [
						{
							"name": "NOT AVAILABLE IN CURRENT RELEASE",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/connections/sqs?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"connections",
										"sqs"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c",
											"description": "The unique identifiers of the resources"
										},
										{
											"key": "id",
											"value": "deserunt",
											"description": "The unique identifiers of the resources"
										},
										{
											"key": "_limit",
											"value": "-48278460",
											"description": "Limit the returned total records found"
										},
										{
											"key": "_skip",
											"value": "-48278460",
											"description": "Skip the returned records found and return the next batch of records"
										}
									]
								},
								"description": "Return a list of SQS Consumer Connections"
							},
							"response": [
								{
									"name": "A list of SQS consumer connections and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/connections/sqs?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"sqs"
											],
											"query": [
												{
													"key": "id",
													"value": "eiusmod sed c"
												},
												{
													"key": "id",
													"value": "deserunt"
												},
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of SQS consumer connections and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/connections/sqs?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"sqs"
											],
											"query": [
												{
													"key": "id",
													"value": "eiusmod sed c"
												},
												{
													"key": "id",
													"value": "deserunt"
												},
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of SQS consumer connections and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/connections/sqs?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"sqs"
											],
											"query": [
												{
													"key": "id",
													"value": "eiusmod sed c"
												},
												{
													"key": "id",
													"value": "deserunt"
												},
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of SQS consumer connections and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/connections/sqs?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"sqs"
											],
											"query": [
												{
													"key": "id",
													"value": "eiusmod sed c"
												},
												{
													"key": "id",
													"value": "deserunt"
												},
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of SQS consumer connections and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/connections/sqs?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"sqs"
											],
											"query": [
												{
													"key": "id",
													"value": "eiusmod sed c"
												},
												{
													"key": "id",
													"value": "deserunt"
												},
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of SQS consumer connections and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/connections/sqs?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"sqs"
											],
											"query": [
												{
													"key": "id",
													"value": "eiusmod sed c"
												},
												{
													"key": "id",
													"value": "deserunt"
												},
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											]
										}
									},
									"status": "Request Entity Too Large",
									"code": 413,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of SQS consumer connections and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/connections/sqs?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"sqs"
											],
											"query": [
												{
													"key": "id",
													"value": "eiusmod sed c"
												},
												{
													"key": "id",
													"value": "deserunt"
												},
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of SQS consumer connections and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/connections/sqs?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"sqs"
											],
											"query": [
												{
													"key": "id",
													"value": "eiusmod sed c"
												},
												{
													"key": "id",
													"value": "deserunt"
												},
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											]
										}
									},
									"status": "Not Implemented",
									"code": 501,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of SQS consumer connections and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/connections/sqs?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"sqs"
											],
											"query": [
												{
													"key": "id",
													"value": "eiusmod sed c"
												},
												{
													"key": "id",
													"value": "deserunt"
												},
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "NOT AVAILABLE IN CURRENT RELEASE",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": \"SQS Test\",\n    \"description\": \"SQS Test\",\n    \"uri\": \"https://sqs.us-west-1.amazonaws.com/123456789123/test_queue_233\",\n    \"acessKey\": \"AKIAQFGYH45678TYH\",\n    \"secretKey\": \"swVAJR8makGqWG8+OIKlJEykP5Es2Mgcbo3G09Qk\",\n    \"transformerId\": \"amet occaecat\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/connections/sqs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"connections",
										"sqs"
									]
								},
								"description": "Update an existing SQS Consumer Connection in the Ziqni system"
							},
							"response": [
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": \"SQS Test\",\n    \"description\": \"SQS Test\",\n    \"uri\": \"https://sqs.us-west-1.amazonaws.com/123456789123/test_queue_233\",\n    \"acessKey\": \"AKIAQFGYH45678TYH\",\n    \"secretKey\": \"swVAJR8makGqWG8+OIKlJEykP5Es2Mgcbo3G09Qk\",\n    \"transformerId\": \"amet occaecat\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/sqs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"sqs"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "Accepted",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": \"SQS Test\",\n    \"description\": \"SQS Test\",\n    \"uri\": \"https://sqs.us-west-1.amazonaws.com/123456789123/test_queue_233\",\n    \"acessKey\": \"AKIAQFGYH45678TYH\",\n    \"secretKey\": \"swVAJR8makGqWG8+OIKlJEykP5Es2Mgcbo3G09Qk\",\n    \"transformerId\": \"amet occaecat\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/sqs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"sqs"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": \"SQS Test\",\n    \"description\": \"SQS Test\",\n    \"uri\": \"https://sqs.us-west-1.amazonaws.com/123456789123/test_queue_233\",\n    \"acessKey\": \"AKIAQFGYH45678TYH\",\n    \"secretKey\": \"swVAJR8makGqWG8+OIKlJEykP5Es2Mgcbo3G09Qk\",\n    \"transformerId\": \"amet occaecat\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/sqs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"sqs"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": \"SQS Test\",\n    \"description\": \"SQS Test\",\n    \"uri\": \"https://sqs.us-west-1.amazonaws.com/123456789123/test_queue_233\",\n    \"acessKey\": \"AKIAQFGYH45678TYH\",\n    \"secretKey\": \"swVAJR8makGqWG8+OIKlJEykP5Es2Mgcbo3G09Qk\",\n    \"transformerId\": \"amet occaecat\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/sqs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"sqs"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": \"SQS Test\",\n    \"description\": \"SQS Test\",\n    \"uri\": \"https://sqs.us-west-1.amazonaws.com/123456789123/test_queue_233\",\n    \"acessKey\": \"AKIAQFGYH45678TYH\",\n    \"secretKey\": \"swVAJR8makGqWG8+OIKlJEykP5Es2Mgcbo3G09Qk\",\n    \"transformerId\": \"amet occaecat\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/sqs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"sqs"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": \"SQS Test\",\n    \"description\": \"SQS Test\",\n    \"uri\": \"https://sqs.us-west-1.amazonaws.com/123456789123/test_queue_233\",\n    \"acessKey\": \"AKIAQFGYH45678TYH\",\n    \"secretKey\": \"swVAJR8makGqWG8+OIKlJEykP5Es2Mgcbo3G09Qk\",\n    \"transformerId\": \"amet occaecat\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/sqs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"sqs"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": \"SQS Test\",\n    \"description\": \"SQS Test\",\n    \"uri\": \"https://sqs.us-west-1.amazonaws.com/123456789123/test_queue_233\",\n    \"acessKey\": \"AKIAQFGYH45678TYH\",\n    \"secretKey\": \"swVAJR8makGqWG8+OIKlJEykP5Es2Mgcbo3G09Qk\",\n    \"transformerId\": \"amet occaecat\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/sqs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"sqs"
											]
										}
									},
									"status": "Request Entity Too Large",
									"code": 413,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": \"SQS Test\",\n    \"description\": \"SQS Test\",\n    \"uri\": \"https://sqs.us-west-1.amazonaws.com/123456789123/test_queue_233\",\n    \"acessKey\": \"AKIAQFGYH45678TYH\",\n    \"secretKey\": \"swVAJR8makGqWG8+OIKlJEykP5Es2Mgcbo3G09Qk\",\n    \"transformerId\": \"amet occaecat\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/sqs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"sqs"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": \"SQS Test\",\n    \"description\": \"SQS Test\",\n    \"uri\": \"https://sqs.us-west-1.amazonaws.com/123456789123/test_queue_233\",\n    \"acessKey\": \"AKIAQFGYH45678TYH\",\n    \"secretKey\": \"swVAJR8makGqWG8+OIKlJEykP5Es2Mgcbo3G09Qk\",\n    \"transformerId\": \"amet occaecat\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/sqs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"sqs"
											]
										}
									},
									"status": "Not Implemented",
									"code": 501,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": \"SQS Test\",\n    \"description\": \"SQS Test\",\n    \"uri\": \"https://sqs.us-west-1.amazonaws.com/123456789123/test_queue_233\",\n    \"acessKey\": \"AKIAQFGYH45678TYH\",\n    \"secretKey\": \"swVAJR8makGqWG8+OIKlJEykP5Es2Mgcbo3G09Qk\",\n    \"transformerId\": \"amet occaecat\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/sqs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"sqs"
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "NOT AVAILABLE IN CURRENT RELEASE",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"SQS Test\",\n    \"uri\": \"https://sqs.us-west-1.amazonaws.com/123456789123/test_queue_233\",\n    \"acessKey\": \"AKIAQFGYH45678TYH\",\n    \"secretKey\": \"swVAJR8makGqWG8+OIKlJEykP5Es2Mgcbo3G09Qk\",\n    \"transformerId\": \"Excepteur\",\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"description\": \"SQS Test\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/connections/sqs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"connections",
										"sqs"
									]
								},
								"description": "Create a new SQS Consumer Connection in the Ziqni system"
							},
							"response": [
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"SQS Test\",\n    \"uri\": \"https://sqs.us-west-1.amazonaws.com/123456789123/test_queue_233\",\n    \"acessKey\": \"AKIAQFGYH45678TYH\",\n    \"secretKey\": \"swVAJR8makGqWG8+OIKlJEykP5Es2Mgcbo3G09Qk\",\n    \"transformerId\": \"Excepteur\",\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"description\": \"SQS Test\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/sqs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"sqs"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"SQS Test\",\n    \"uri\": \"https://sqs.us-west-1.amazonaws.com/123456789123/test_queue_233\",\n    \"acessKey\": \"AKIAQFGYH45678TYH\",\n    \"secretKey\": \"swVAJR8makGqWG8+OIKlJEykP5Es2Mgcbo3G09Qk\",\n    \"transformerId\": \"Excepteur\",\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"description\": \"SQS Test\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/sqs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"sqs"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"SQS Test\",\n    \"uri\": \"https://sqs.us-west-1.amazonaws.com/123456789123/test_queue_233\",\n    \"acessKey\": \"AKIAQFGYH45678TYH\",\n    \"secretKey\": \"swVAJR8makGqWG8+OIKlJEykP5Es2Mgcbo3G09Qk\",\n    \"transformerId\": \"Excepteur\",\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"description\": \"SQS Test\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/sqs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"sqs"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"SQS Test\",\n    \"uri\": \"https://sqs.us-west-1.amazonaws.com/123456789123/test_queue_233\",\n    \"acessKey\": \"AKIAQFGYH45678TYH\",\n    \"secretKey\": \"swVAJR8makGqWG8+OIKlJEykP5Es2Mgcbo3G09Qk\",\n    \"transformerId\": \"Excepteur\",\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"description\": \"SQS Test\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/sqs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"sqs"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"SQS Test\",\n    \"uri\": \"https://sqs.us-west-1.amazonaws.com/123456789123/test_queue_233\",\n    \"acessKey\": \"AKIAQFGYH45678TYH\",\n    \"secretKey\": \"swVAJR8makGqWG8+OIKlJEykP5Es2Mgcbo3G09Qk\",\n    \"transformerId\": \"Excepteur\",\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"description\": \"SQS Test\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/sqs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"sqs"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"SQS Test\",\n    \"uri\": \"https://sqs.us-west-1.amazonaws.com/123456789123/test_queue_233\",\n    \"acessKey\": \"AKIAQFGYH45678TYH\",\n    \"secretKey\": \"swVAJR8makGqWG8+OIKlJEykP5Es2Mgcbo3G09Qk\",\n    \"transformerId\": \"Excepteur\",\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"description\": \"SQS Test\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/sqs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"sqs"
											]
										}
									},
									"status": "Request Entity Too Large",
									"code": 413,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"SQS Test\",\n    \"uri\": \"https://sqs.us-west-1.amazonaws.com/123456789123/test_queue_233\",\n    \"acessKey\": \"AKIAQFGYH45678TYH\",\n    \"secretKey\": \"swVAJR8makGqWG8+OIKlJEykP5Es2Mgcbo3G09Qk\",\n    \"transformerId\": \"Excepteur\",\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"description\": \"SQS Test\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/sqs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"sqs"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"SQS Test\",\n    \"uri\": \"https://sqs.us-west-1.amazonaws.com/123456789123/test_queue_233\",\n    \"acessKey\": \"AKIAQFGYH45678TYH\",\n    \"secretKey\": \"swVAJR8makGqWG8+OIKlJEykP5Es2Mgcbo3G09Qk\",\n    \"transformerId\": \"Excepteur\",\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"description\": \"SQS Test\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/sqs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"sqs"
											]
										}
									},
									"status": "Not Implemented",
									"code": 501,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"SQS Test\",\n    \"uri\": \"https://sqs.us-west-1.amazonaws.com/123456789123/test_queue_233\",\n    \"acessKey\": \"AKIAQFGYH45678TYH\",\n    \"secretKey\": \"swVAJR8makGqWG8+OIKlJEykP5Es2Mgcbo3G09Qk\",\n    \"transformerId\": \"Excepteur\",\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"description\": \"SQS Test\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/sqs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"sqs"
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "NOT AVAILABLE IN CURRENT RELEASE",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/connections/sqs?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"connections",
										"sqs"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c",
											"description": "The unique identifiers of the resources"
										},
										{
											"key": "id",
											"value": "deserunt",
											"description": "The unique identifiers of the resources"
										}
									]
								},
								"description": "Delete the SQS Consumer Connection for a given identifier specified"
							},
							"response": [
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/connections/sqs?id=eiusmod sed c&id=deserunt",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"sqs"
											],
											"query": [
												{
													"key": "id",
													"value": "eiusmod sed c"
												},
												{
													"key": "id",
													"value": "deserunt"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/connections/sqs?id=eiusmod sed c&id=deserunt",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"sqs"
											],
											"query": [
												{
													"key": "id",
													"value": "eiusmod sed c"
												},
												{
													"key": "id",
													"value": "deserunt"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/connections/sqs?id=eiusmod sed c&id=deserunt",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"sqs"
											],
											"query": [
												{
													"key": "id",
													"value": "eiusmod sed c"
												},
												{
													"key": "id",
													"value": "deserunt"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/connections/sqs?id=eiusmod sed c&id=deserunt",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"sqs"
											],
											"query": [
												{
													"key": "id",
													"value": "eiusmod sed c"
												},
												{
													"key": "id",
													"value": "deserunt"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/connections/sqs?id=eiusmod sed c&id=deserunt",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"sqs"
											],
											"query": [
												{
													"key": "id",
													"value": "eiusmod sed c"
												},
												{
													"key": "id",
													"value": "deserunt"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/connections/sqs?id=eiusmod sed c&id=deserunt",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"sqs"
											],
											"query": [
												{
													"key": "id",
													"value": "eiusmod sed c"
												},
												{
													"key": "id",
													"value": "deserunt"
												}
											]
										}
									},
									"status": "Request Entity Too Large",
									"code": 413,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/connections/sqs?id=eiusmod sed c&id=deserunt",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"sqs"
											],
											"query": [
												{
													"key": "id",
													"value": "eiusmod sed c"
												},
												{
													"key": "id",
													"value": "deserunt"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/connections/sqs?id=eiusmod sed c&id=deserunt",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"sqs"
											],
											"query": [
												{
													"key": "id",
													"value": "eiusmod sed c"
												},
												{
													"key": "id",
													"value": "deserunt"
												}
											]
										}
									},
									"status": "Not Implemented",
									"code": 501,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/connections/sqs?id=eiusmod sed c&id=deserunt",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"sqs"
											],
											"query": [
												{
													"key": "id",
													"value": "eiusmod sed c"
												},
												{
													"key": "id",
													"value": "deserunt"
												}
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "NOT AVAILABLE IN CURRENT RELEASE",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/connections/sqs/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"connections",
										"sqs",
										"state"
									]
								},
								"description": "Update the state of an SQS Connection using the POST method"
							},
							"response": [
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/sqs/state",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"sqs",
												"state"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/sqs/state",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"sqs",
												"state"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/sqs/state",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"sqs",
												"state"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/sqs/state",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"sqs",
												"state"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/sqs/state",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"sqs",
												"state"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/sqs/state",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"sqs",
												"state"
											]
										}
									},
									"status": "Request Entity Too Large",
									"code": 413,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/sqs/state",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"sqs",
												"state"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/sqs/state",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"sqs",
												"state"
											]
										}
									},
									"status": "Not Implemented",
									"code": 501,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/sqs/state",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"sqs",
												"state"
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "NOT AVAILABLE IN CURRENT RELEASE",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/connections/sqs/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"connections",
										"sqs",
										"delete"
									]
								},
								"description": "Delete a SQS Connection or a list of SQS Connections from Ziqni by unique Connection ID's or any other POST body parameters using the POST method"
							},
							"response": [
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/sqs/delete",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"sqs",
												"delete"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/sqs/delete",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"sqs",
												"delete"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/sqs/delete",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"sqs",
												"delete"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/sqs/delete",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"sqs",
												"delete"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/sqs/delete",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"sqs",
												"delete"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/sqs/delete",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"sqs",
												"delete"
											]
										}
									},
									"status": "Request Entity Too Large",
									"code": 413,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/sqs/delete",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"sqs",
												"delete"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/sqs/delete",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"sqs",
												"delete"
											]
										}
									},
									"status": "Not Implemented",
									"code": 501,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/sqs/delete",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"sqs",
												"delete"
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "NOT AVAILABLE IN CURRENT RELEASE",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/connections/sqs/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"connections",
										"sqs",
										"query"
									]
								},
								"description": "Retrieve a SQS Connection or a list of SQS Connections from Ziqni by unique Connection ID's or any other Post body parameters using the POST method"
							},
							"response": [
								{
									"name": "A list of SQS consumer connections and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/sqs/query",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"sqs",
												"query"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of SQS consumer connections and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/sqs/query",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"sqs",
												"query"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of SQS consumer connections and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/sqs/query",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"sqs",
												"query"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of SQS consumer connections and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/sqs/query",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"sqs",
												"query"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of SQS consumer connections and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/sqs/query",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"sqs",
												"query"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of SQS consumer connections and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/sqs/query",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"sqs",
												"query"
											]
										}
									},
									"status": "Request Entity Too Large",
									"code": 413,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of SQS consumer connections and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/sqs/query",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"sqs",
												"query"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of SQS consumer connections and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/sqs/query",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"sqs",
												"query"
											]
										}
									},
									"status": "Not Implemented",
									"code": 501,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of SQS consumer connections and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/sqs/query",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"sqs",
												"query"
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "rabbitmq",
					"item": [
						{
							"name": "NOT AVAILABLE IN CURRENT RELEASE",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/connections/rabbitmq?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"connections",
										"rabbitmq"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c",
											"description": "The unique identifiers of the resources"
										},
										{
											"key": "id",
											"value": "deserunt",
											"description": "The unique identifiers of the resources"
										},
										{
											"key": "_limit",
											"value": "-48278460",
											"description": "Limit the returned total records found"
										},
										{
											"key": "_skip",
											"value": "-48278460",
											"description": "Skip the returned records found and return the next batch of records"
										}
									]
								},
								"description": "Return a list of RabbitMq Consumer Connections"
							},
							"response": [
								{
									"name": "A list of RabbitMq consumer connections and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/connections/rabbitmq?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"rabbitmq"
											],
											"query": [
												{
													"key": "id",
													"value": "eiusmod sed c"
												},
												{
													"key": "id",
													"value": "deserunt"
												},
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of RabbitMq consumer connections and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/connections/rabbitmq?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"rabbitmq"
											],
											"query": [
												{
													"key": "id",
													"value": "eiusmod sed c"
												},
												{
													"key": "id",
													"value": "deserunt"
												},
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of RabbitMq consumer connections and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/connections/rabbitmq?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"rabbitmq"
											],
											"query": [
												{
													"key": "id",
													"value": "eiusmod sed c"
												},
												{
													"key": "id",
													"value": "deserunt"
												},
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of RabbitMq consumer connections and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/connections/rabbitmq?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"rabbitmq"
											],
											"query": [
												{
													"key": "id",
													"value": "eiusmod sed c"
												},
												{
													"key": "id",
													"value": "deserunt"
												},
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of RabbitMq consumer connections and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/connections/rabbitmq?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"rabbitmq"
											],
											"query": [
												{
													"key": "id",
													"value": "eiusmod sed c"
												},
												{
													"key": "id",
													"value": "deserunt"
												},
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of RabbitMq consumer connections and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/connections/rabbitmq?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"rabbitmq"
											],
											"query": [
												{
													"key": "id",
													"value": "eiusmod sed c"
												},
												{
													"key": "id",
													"value": "deserunt"
												},
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											]
										}
									},
									"status": "Request Entity Too Large",
									"code": 413,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of RabbitMq consumer connections and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/connections/rabbitmq?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"rabbitmq"
											],
											"query": [
												{
													"key": "id",
													"value": "eiusmod sed c"
												},
												{
													"key": "id",
													"value": "deserunt"
												},
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of RabbitMq consumer connections and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/connections/rabbitmq?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"rabbitmq"
											],
											"query": [
												{
													"key": "id",
													"value": "eiusmod sed c"
												},
												{
													"key": "id",
													"value": "deserunt"
												},
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											]
										}
									},
									"status": "Not Implemented",
									"code": 501,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of RabbitMq consumer connections and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/connections/rabbitmq?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"rabbitmq"
											],
											"query": [
												{
													"key": "id",
													"value": "eiusmod sed c"
												},
												{
													"key": "id",
													"value": "deserunt"
												},
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "NOT AVAILABLE IN CURRENT RELEASE",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": \"RabbitMq Test\",\n    \"description\": \"RabbitMq Test\",\n    \"uri\": \"some-rabbitmq.broker.com\",\n    \"virtualHost\": \"sc1samQmVr61KgaPQq7x\",\n    \"port\": -61743008,\n    \"userName\": \"testUser\",\n    \"password\": \"SomePassword\",\n    \"queueName\": \"test-queue\",\n    \"exchange\": \"exercitation c\",\n    \"routingKey\": \"adipisicing ea reprehenderit\",\n    \"constraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"transformerId\": \"fugiat in nulla elit velit\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/connections/rabbitmq",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"connections",
										"rabbitmq"
									]
								},
								"description": "Update an existing RabbitMq Consumer Connection in the Ziqni system"
							},
							"response": [
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": \"RabbitMq Test\",\n    \"description\": \"RabbitMq Test\",\n    \"uri\": \"some-rabbitmq.broker.com\",\n    \"virtualHost\": \"sc1samQmVr61KgaPQq7x\",\n    \"port\": 14323211,\n    \"userName\": \"testUser\",\n    \"password\": \"SomePassword\",\n    \"queueName\": \"test-queue\",\n    \"exchange\": \"proident quis est s\",\n    \"routingKey\": \"in\",\n    \"constraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"transformerId\": \"laboris ut voluptate\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/rabbitmq",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"rabbitmq"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "Accepted",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": \"RabbitMq Test\",\n    \"description\": \"RabbitMq Test\",\n    \"uri\": \"some-rabbitmq.broker.com\",\n    \"virtualHost\": \"sc1samQmVr61KgaPQq7x\",\n    \"port\": 14323211,\n    \"userName\": \"testUser\",\n    \"password\": \"SomePassword\",\n    \"queueName\": \"test-queue\",\n    \"exchange\": \"proident quis est s\",\n    \"routingKey\": \"in\",\n    \"constraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"transformerId\": \"laboris ut voluptate\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/rabbitmq",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"rabbitmq"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": \"RabbitMq Test\",\n    \"description\": \"RabbitMq Test\",\n    \"uri\": \"some-rabbitmq.broker.com\",\n    \"virtualHost\": \"sc1samQmVr61KgaPQq7x\",\n    \"port\": 14323211,\n    \"userName\": \"testUser\",\n    \"password\": \"SomePassword\",\n    \"queueName\": \"test-queue\",\n    \"exchange\": \"proident quis est s\",\n    \"routingKey\": \"in\",\n    \"constraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"transformerId\": \"laboris ut voluptate\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/rabbitmq",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"rabbitmq"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": \"RabbitMq Test\",\n    \"description\": \"RabbitMq Test\",\n    \"uri\": \"some-rabbitmq.broker.com\",\n    \"virtualHost\": \"sc1samQmVr61KgaPQq7x\",\n    \"port\": 14323211,\n    \"userName\": \"testUser\",\n    \"password\": \"SomePassword\",\n    \"queueName\": \"test-queue\",\n    \"exchange\": \"proident quis est s\",\n    \"routingKey\": \"in\",\n    \"constraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"transformerId\": \"laboris ut voluptate\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/rabbitmq",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"rabbitmq"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": \"RabbitMq Test\",\n    \"description\": \"RabbitMq Test\",\n    \"uri\": \"some-rabbitmq.broker.com\",\n    \"virtualHost\": \"sc1samQmVr61KgaPQq7x\",\n    \"port\": 14323211,\n    \"userName\": \"testUser\",\n    \"password\": \"SomePassword\",\n    \"queueName\": \"test-queue\",\n    \"exchange\": \"proident quis est s\",\n    \"routingKey\": \"in\",\n    \"constraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"transformerId\": \"laboris ut voluptate\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/rabbitmq",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"rabbitmq"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": \"RabbitMq Test\",\n    \"description\": \"RabbitMq Test\",\n    \"uri\": \"some-rabbitmq.broker.com\",\n    \"virtualHost\": \"sc1samQmVr61KgaPQq7x\",\n    \"port\": 14323211,\n    \"userName\": \"testUser\",\n    \"password\": \"SomePassword\",\n    \"queueName\": \"test-queue\",\n    \"exchange\": \"proident quis est s\",\n    \"routingKey\": \"in\",\n    \"constraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"transformerId\": \"laboris ut voluptate\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/rabbitmq",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"rabbitmq"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": \"RabbitMq Test\",\n    \"description\": \"RabbitMq Test\",\n    \"uri\": \"some-rabbitmq.broker.com\",\n    \"virtualHost\": \"sc1samQmVr61KgaPQq7x\",\n    \"port\": 14323211,\n    \"userName\": \"testUser\",\n    \"password\": \"SomePassword\",\n    \"queueName\": \"test-queue\",\n    \"exchange\": \"proident quis est s\",\n    \"routingKey\": \"in\",\n    \"constraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"transformerId\": \"laboris ut voluptate\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/rabbitmq",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"rabbitmq"
											]
										}
									},
									"status": "Request Entity Too Large",
									"code": 413,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": \"RabbitMq Test\",\n    \"description\": \"RabbitMq Test\",\n    \"uri\": \"some-rabbitmq.broker.com\",\n    \"virtualHost\": \"sc1samQmVr61KgaPQq7x\",\n    \"port\": 14323211,\n    \"userName\": \"testUser\",\n    \"password\": \"SomePassword\",\n    \"queueName\": \"test-queue\",\n    \"exchange\": \"proident quis est s\",\n    \"routingKey\": \"in\",\n    \"constraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"transformerId\": \"laboris ut voluptate\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/rabbitmq",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"rabbitmq"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": \"RabbitMq Test\",\n    \"description\": \"RabbitMq Test\",\n    \"uri\": \"some-rabbitmq.broker.com\",\n    \"virtualHost\": \"sc1samQmVr61KgaPQq7x\",\n    \"port\": 14323211,\n    \"userName\": \"testUser\",\n    \"password\": \"SomePassword\",\n    \"queueName\": \"test-queue\",\n    \"exchange\": \"proident quis est s\",\n    \"routingKey\": \"in\",\n    \"constraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"transformerId\": \"laboris ut voluptate\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/rabbitmq",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"rabbitmq"
											]
										}
									},
									"status": "Not Implemented",
									"code": 501,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": \"RabbitMq Test\",\n    \"description\": \"RabbitMq Test\",\n    \"uri\": \"some-rabbitmq.broker.com\",\n    \"virtualHost\": \"sc1samQmVr61KgaPQq7x\",\n    \"port\": 14323211,\n    \"userName\": \"testUser\",\n    \"password\": \"SomePassword\",\n    \"queueName\": \"test-queue\",\n    \"exchange\": \"proident quis est s\",\n    \"routingKey\": \"in\",\n    \"constraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"transformerId\": \"laboris ut voluptate\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/rabbitmq",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"rabbitmq"
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "NOT AVAILABLE IN CURRENT RELEASE",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"port\": -43684122,\n    \"uri\": \"dolore officia\",\n    \"userName\": \"do fugiat qui\",\n    \"password\": \"velit ipsum\",\n    \"queueName\": \"cillum proident pariatur sunt\",\n    \"transformerId\": \"est laborum nulla magna\",\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": \"RabbitMq Test\",\n    \"description\": \"ullamco sit\",\n    \"virtualHost\": \"Lorem consectetur\",\n    \"exchange\": \"minim ullamco Ut quis\",\n    \"routingKey\": \"sed aliqua elit Excepteur veniam\",\n    \"addConstraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/connections/rabbitmq",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"connections",
										"rabbitmq"
									]
								},
								"description": "Create a new RabbitMq Consumer Connection in the Ziqni system"
							},
							"response": [
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"port\": -26482700,\n    \"uri\": \"non reprehenderit anim adipisicing\",\n    \"userName\": \"incididunt nulla pariatur\",\n    \"password\": \"amet aute exercitation\",\n    \"queueName\": \"dolore\",\n    \"transformerId\": \"in laboris amet\",\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": \"RabbitMq Test\",\n    \"description\": \"et velit commodo labore\",\n    \"virtualHost\": \"dolor Lorem\",\n    \"exchange\": \"ullamco\",\n    \"routingKey\": \"laboris culpa dolor ut sunt\",\n    \"addConstraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/rabbitmq",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"rabbitmq"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"port\": -26482700,\n    \"uri\": \"non reprehenderit anim adipisicing\",\n    \"userName\": \"incididunt nulla pariatur\",\n    \"password\": \"amet aute exercitation\",\n    \"queueName\": \"dolore\",\n    \"transformerId\": \"in laboris amet\",\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": \"RabbitMq Test\",\n    \"description\": \"et velit commodo labore\",\n    \"virtualHost\": \"dolor Lorem\",\n    \"exchange\": \"ullamco\",\n    \"routingKey\": \"laboris culpa dolor ut sunt\",\n    \"addConstraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/rabbitmq",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"rabbitmq"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"port\": -26482700,\n    \"uri\": \"non reprehenderit anim adipisicing\",\n    \"userName\": \"incididunt nulla pariatur\",\n    \"password\": \"amet aute exercitation\",\n    \"queueName\": \"dolore\",\n    \"transformerId\": \"in laboris amet\",\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": \"RabbitMq Test\",\n    \"description\": \"et velit commodo labore\",\n    \"virtualHost\": \"dolor Lorem\",\n    \"exchange\": \"ullamco\",\n    \"routingKey\": \"laboris culpa dolor ut sunt\",\n    \"addConstraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/rabbitmq",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"rabbitmq"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"port\": -26482700,\n    \"uri\": \"non reprehenderit anim adipisicing\",\n    \"userName\": \"incididunt nulla pariatur\",\n    \"password\": \"amet aute exercitation\",\n    \"queueName\": \"dolore\",\n    \"transformerId\": \"in laboris amet\",\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": \"RabbitMq Test\",\n    \"description\": \"et velit commodo labore\",\n    \"virtualHost\": \"dolor Lorem\",\n    \"exchange\": \"ullamco\",\n    \"routingKey\": \"laboris culpa dolor ut sunt\",\n    \"addConstraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/rabbitmq",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"rabbitmq"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"port\": -26482700,\n    \"uri\": \"non reprehenderit anim adipisicing\",\n    \"userName\": \"incididunt nulla pariatur\",\n    \"password\": \"amet aute exercitation\",\n    \"queueName\": \"dolore\",\n    \"transformerId\": \"in laboris amet\",\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": \"RabbitMq Test\",\n    \"description\": \"et velit commodo labore\",\n    \"virtualHost\": \"dolor Lorem\",\n    \"exchange\": \"ullamco\",\n    \"routingKey\": \"laboris culpa dolor ut sunt\",\n    \"addConstraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/rabbitmq",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"rabbitmq"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"port\": -26482700,\n    \"uri\": \"non reprehenderit anim adipisicing\",\n    \"userName\": \"incididunt nulla pariatur\",\n    \"password\": \"amet aute exercitation\",\n    \"queueName\": \"dolore\",\n    \"transformerId\": \"in laboris amet\",\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": \"RabbitMq Test\",\n    \"description\": \"et velit commodo labore\",\n    \"virtualHost\": \"dolor Lorem\",\n    \"exchange\": \"ullamco\",\n    \"routingKey\": \"laboris culpa dolor ut sunt\",\n    \"addConstraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/rabbitmq",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"rabbitmq"
											]
										}
									},
									"status": "Request Entity Too Large",
									"code": 413,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"port\": -26482700,\n    \"uri\": \"non reprehenderit anim adipisicing\",\n    \"userName\": \"incididunt nulla pariatur\",\n    \"password\": \"amet aute exercitation\",\n    \"queueName\": \"dolore\",\n    \"transformerId\": \"in laboris amet\",\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": \"RabbitMq Test\",\n    \"description\": \"et velit commodo labore\",\n    \"virtualHost\": \"dolor Lorem\",\n    \"exchange\": \"ullamco\",\n    \"routingKey\": \"laboris culpa dolor ut sunt\",\n    \"addConstraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/rabbitmq",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"rabbitmq"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"port\": -26482700,\n    \"uri\": \"non reprehenderit anim adipisicing\",\n    \"userName\": \"incididunt nulla pariatur\",\n    \"password\": \"amet aute exercitation\",\n    \"queueName\": \"dolore\",\n    \"transformerId\": \"in laboris amet\",\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": \"RabbitMq Test\",\n    \"description\": \"et velit commodo labore\",\n    \"virtualHost\": \"dolor Lorem\",\n    \"exchange\": \"ullamco\",\n    \"routingKey\": \"laboris culpa dolor ut sunt\",\n    \"addConstraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/rabbitmq",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"rabbitmq"
											]
										}
									},
									"status": "Not Implemented",
									"code": 501,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"port\": -26482700,\n    \"uri\": \"non reprehenderit anim adipisicing\",\n    \"userName\": \"incididunt nulla pariatur\",\n    \"password\": \"amet aute exercitation\",\n    \"queueName\": \"dolore\",\n    \"transformerId\": \"in laboris amet\",\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": \"RabbitMq Test\",\n    \"description\": \"et velit commodo labore\",\n    \"virtualHost\": \"dolor Lorem\",\n    \"exchange\": \"ullamco\",\n    \"routingKey\": \"laboris culpa dolor ut sunt\",\n    \"addConstraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/rabbitmq",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"rabbitmq"
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "NOT AVAILABLE IN CURRENT RELEASE",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/connections/rabbitmq?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"connections",
										"rabbitmq"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c",
											"description": "The unique identifiers of the resources"
										},
										{
											"key": "id",
											"value": "deserunt",
											"description": "The unique identifiers of the resources"
										}
									]
								},
								"description": "Delete the RabbitMq Consumer Connection for a given identifier specified"
							},
							"response": [
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/connections/rabbitmq?id=eiusmod sed c&id=deserunt",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"rabbitmq"
											],
											"query": [
												{
													"key": "id",
													"value": "eiusmod sed c"
												},
												{
													"key": "id",
													"value": "deserunt"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/connections/rabbitmq?id=eiusmod sed c&id=deserunt",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"rabbitmq"
											],
											"query": [
												{
													"key": "id",
													"value": "eiusmod sed c"
												},
												{
													"key": "id",
													"value": "deserunt"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/connections/rabbitmq?id=eiusmod sed c&id=deserunt",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"rabbitmq"
											],
											"query": [
												{
													"key": "id",
													"value": "eiusmod sed c"
												},
												{
													"key": "id",
													"value": "deserunt"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/connections/rabbitmq?id=eiusmod sed c&id=deserunt",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"rabbitmq"
											],
											"query": [
												{
													"key": "id",
													"value": "eiusmod sed c"
												},
												{
													"key": "id",
													"value": "deserunt"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/connections/rabbitmq?id=eiusmod sed c&id=deserunt",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"rabbitmq"
											],
											"query": [
												{
													"key": "id",
													"value": "eiusmod sed c"
												},
												{
													"key": "id",
													"value": "deserunt"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/connections/rabbitmq?id=eiusmod sed c&id=deserunt",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"rabbitmq"
											],
											"query": [
												{
													"key": "id",
													"value": "eiusmod sed c"
												},
												{
													"key": "id",
													"value": "deserunt"
												}
											]
										}
									},
									"status": "Request Entity Too Large",
									"code": 413,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/connections/rabbitmq?id=eiusmod sed c&id=deserunt",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"rabbitmq"
											],
											"query": [
												{
													"key": "id",
													"value": "eiusmod sed c"
												},
												{
													"key": "id",
													"value": "deserunt"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/connections/rabbitmq?id=eiusmod sed c&id=deserunt",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"rabbitmq"
											],
											"query": [
												{
													"key": "id",
													"value": "eiusmod sed c"
												},
												{
													"key": "id",
													"value": "deserunt"
												}
											]
										}
									},
									"status": "Not Implemented",
									"code": 501,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/connections/rabbitmq?id=eiusmod sed c&id=deserunt",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"rabbitmq"
											],
											"query": [
												{
													"key": "id",
													"value": "eiusmod sed c"
												},
												{
													"key": "id",
													"value": "deserunt"
												}
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "NOT AVAILABLE IN CURRENT RELEASE",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/connections/rabbitmq/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"connections",
										"rabbitmq",
										"state"
									]
								},
								"description": "Update the state of a RabbitMQ Connection using the POST method"
							},
							"response": [
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/rabbitmq/state",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"rabbitmq",
												"state"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/rabbitmq/state",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"rabbitmq",
												"state"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/rabbitmq/state",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"rabbitmq",
												"state"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/rabbitmq/state",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"rabbitmq",
												"state"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/rabbitmq/state",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"rabbitmq",
												"state"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/rabbitmq/state",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"rabbitmq",
												"state"
											]
										}
									},
									"status": "Request Entity Too Large",
									"code": 413,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/rabbitmq/state",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"rabbitmq",
												"state"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/rabbitmq/state",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"rabbitmq",
												"state"
											]
										}
									},
									"status": "Not Implemented",
									"code": 501,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/rabbitmq/state",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"rabbitmq",
												"state"
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "NOT AVAILABLE IN CURRENT RELEASE",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/connections/rabbitmq/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"connections",
										"rabbitmq",
										"delete"
									]
								},
								"description": "Delete a RabbitMQ Connection or a list of RabbitMQ Connections from Ziqni by unique Connection ID's or any other POST body parameters using the POST method"
							},
							"response": [
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/rabbitmq/delete",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"rabbitmq",
												"delete"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/rabbitmq/delete",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"rabbitmq",
												"delete"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/rabbitmq/delete",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"rabbitmq",
												"delete"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/rabbitmq/delete",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"rabbitmq",
												"delete"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/rabbitmq/delete",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"rabbitmq",
												"delete"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/rabbitmq/delete",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"rabbitmq",
												"delete"
											]
										}
									},
									"status": "Request Entity Too Large",
									"code": 413,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/rabbitmq/delete",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"rabbitmq",
												"delete"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/rabbitmq/delete",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"rabbitmq",
												"delete"
											]
										}
									},
									"status": "Not Implemented",
									"code": 501,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/rabbitmq/delete",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"rabbitmq",
												"delete"
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "NOT AVAILABLE IN CURRENT RELEASE",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/connections/rabbitmq/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"connections",
										"rabbitmq",
										"query"
									]
								},
								"description": "Retrieve a RabbitMQ Connection or a list of RabbitMQ Connections from Ziqni by unique Connection ID's or any other Post body parameters using the POST method"
							},
							"response": [
								{
									"name": "A list of RabbitMq consumer connections and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/rabbitmq/query",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"rabbitmq",
												"query"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of RabbitMq consumer connections and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/rabbitmq/query",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"rabbitmq",
												"query"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of RabbitMq consumer connections and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/rabbitmq/query",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"rabbitmq",
												"query"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of RabbitMq consumer connections and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/rabbitmq/query",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"rabbitmq",
												"query"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of RabbitMq consumer connections and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/rabbitmq/query",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"rabbitmq",
												"query"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of RabbitMq consumer connections and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/rabbitmq/query",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"rabbitmq",
												"query"
											]
										}
									},
									"status": "Request Entity Too Large",
									"code": 413,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of RabbitMq consumer connections and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/rabbitmq/query",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"rabbitmq",
												"query"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of RabbitMq consumer connections and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/rabbitmq/query",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"rabbitmq",
												"query"
											]
										}
									},
									"status": "Not Implemented",
									"code": 501,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of RabbitMq consumer connections and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/rabbitmq/query",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"rabbitmq",
												"query"
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "kafka",
					"item": [
						{
							"name": "NOT AVAILABLE IN CURRENT RELEASE",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/connections/kafka?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"connections",
										"kafka"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c",
											"description": "The unique identifiers of the resources"
										},
										{
											"key": "id",
											"value": "deserunt",
											"description": "The unique identifiers of the resources"
										},
										{
											"key": "_limit",
											"value": "-48278460",
											"description": "Limit the returned total records found"
										},
										{
											"key": "_skip",
											"value": "-48278460",
											"description": "Skip the returned records found and return the next batch of records"
										}
									]
								},
								"description": "Return a list of Kafka Consumer Connections"
							},
							"response": [
								{
									"name": "A list of Kafka consumer connections and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/connections/kafka?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"kafka"
											],
											"query": [
												{
													"key": "id",
													"value": "eiusmod sed c"
												},
												{
													"key": "id",
													"value": "deserunt"
												},
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of Kafka consumer connections and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/connections/kafka?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"kafka"
											],
											"query": [
												{
													"key": "id",
													"value": "eiusmod sed c"
												},
												{
													"key": "id",
													"value": "deserunt"
												},
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of Kafka consumer connections and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/connections/kafka?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"kafka"
											],
											"query": [
												{
													"key": "id",
													"value": "eiusmod sed c"
												},
												{
													"key": "id",
													"value": "deserunt"
												},
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of Kafka consumer connections and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/connections/kafka?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"kafka"
											],
											"query": [
												{
													"key": "id",
													"value": "eiusmod sed c"
												},
												{
													"key": "id",
													"value": "deserunt"
												},
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of Kafka consumer connections and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/connections/kafka?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"kafka"
											],
											"query": [
												{
													"key": "id",
													"value": "eiusmod sed c"
												},
												{
													"key": "id",
													"value": "deserunt"
												},
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of Kafka consumer connections and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/connections/kafka?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"kafka"
											],
											"query": [
												{
													"key": "id",
													"value": "eiusmod sed c"
												},
												{
													"key": "id",
													"value": "deserunt"
												},
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											]
										}
									},
									"status": "Request Entity Too Large",
									"code": 413,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of Kafka consumer connections and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/connections/kafka?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"kafka"
											],
											"query": [
												{
													"key": "id",
													"value": "eiusmod sed c"
												},
												{
													"key": "id",
													"value": "deserunt"
												},
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of Kafka consumer connections and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/connections/kafka?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"kafka"
											],
											"query": [
												{
													"key": "id",
													"value": "eiusmod sed c"
												},
												{
													"key": "id",
													"value": "deserunt"
												},
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											]
										}
									},
									"status": "Not Implemented",
									"code": 501,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of Kafka consumer connections and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/connections/kafka?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"kafka"
											],
											"query": [
												{
													"key": "id",
													"value": "eiusmod sed c"
												},
												{
													"key": "id",
													"value": "deserunt"
												},
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "NOT AVAILABLE IN CURRENT RELEASE",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": \"Kafka Test\",\n    \"description\": \"Kafka Test\",\n    \"brokers\": \"kafka-broker-1:9092,kafka-broker-2:9092,kafka-broker-3:9093\",\n    \"groupId\": \"CL-SomeId\",\n    \"topic\": \"some_test_topic\",\n    \"transformerId\": \"ipsum mollit in aute\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/connections/kafka",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"connections",
										"kafka"
									]
								},
								"description": "Update an existing Kafka Consumer Connection in the Ziqni system"
							},
							"response": [
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": \"Kafka Test\",\n    \"description\": \"Kafka Test\",\n    \"brokers\": \"kafka-broker-1:9092,kafka-broker-2:9092,kafka-broker-3:9093\",\n    \"groupId\": \"CL-SomeId\",\n    \"topic\": \"some_test_topic\",\n    \"transformerId\": \"ipsum mollit in aute\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/kafka",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"kafka"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "Accepted",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": \"Kafka Test\",\n    \"description\": \"Kafka Test\",\n    \"brokers\": \"kafka-broker-1:9092,kafka-broker-2:9092,kafka-broker-3:9093\",\n    \"groupId\": \"CL-SomeId\",\n    \"topic\": \"some_test_topic\",\n    \"transformerId\": \"ipsum mollit in aute\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/kafka",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"kafka"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": \"Kafka Test\",\n    \"description\": \"Kafka Test\",\n    \"brokers\": \"kafka-broker-1:9092,kafka-broker-2:9092,kafka-broker-3:9093\",\n    \"groupId\": \"CL-SomeId\",\n    \"topic\": \"some_test_topic\",\n    \"transformerId\": \"ipsum mollit in aute\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/kafka",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"kafka"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": \"Kafka Test\",\n    \"description\": \"Kafka Test\",\n    \"brokers\": \"kafka-broker-1:9092,kafka-broker-2:9092,kafka-broker-3:9093\",\n    \"groupId\": \"CL-SomeId\",\n    \"topic\": \"some_test_topic\",\n    \"transformerId\": \"ipsum mollit in aute\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/kafka",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"kafka"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": \"Kafka Test\",\n    \"description\": \"Kafka Test\",\n    \"brokers\": \"kafka-broker-1:9092,kafka-broker-2:9092,kafka-broker-3:9093\",\n    \"groupId\": \"CL-SomeId\",\n    \"topic\": \"some_test_topic\",\n    \"transformerId\": \"ipsum mollit in aute\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/kafka",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"kafka"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": \"Kafka Test\",\n    \"description\": \"Kafka Test\",\n    \"brokers\": \"kafka-broker-1:9092,kafka-broker-2:9092,kafka-broker-3:9093\",\n    \"groupId\": \"CL-SomeId\",\n    \"topic\": \"some_test_topic\",\n    \"transformerId\": \"ipsum mollit in aute\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/kafka",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"kafka"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": \"Kafka Test\",\n    \"description\": \"Kafka Test\",\n    \"brokers\": \"kafka-broker-1:9092,kafka-broker-2:9092,kafka-broker-3:9093\",\n    \"groupId\": \"CL-SomeId\",\n    \"topic\": \"some_test_topic\",\n    \"transformerId\": \"ipsum mollit in aute\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/kafka",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"kafka"
											]
										}
									},
									"status": "Request Entity Too Large",
									"code": 413,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": \"Kafka Test\",\n    \"description\": \"Kafka Test\",\n    \"brokers\": \"kafka-broker-1:9092,kafka-broker-2:9092,kafka-broker-3:9093\",\n    \"groupId\": \"CL-SomeId\",\n    \"topic\": \"some_test_topic\",\n    \"transformerId\": \"ipsum mollit in aute\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/kafka",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"kafka"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": \"Kafka Test\",\n    \"description\": \"Kafka Test\",\n    \"brokers\": \"kafka-broker-1:9092,kafka-broker-2:9092,kafka-broker-3:9093\",\n    \"groupId\": \"CL-SomeId\",\n    \"topic\": \"some_test_topic\",\n    \"transformerId\": \"ipsum mollit in aute\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/kafka",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"kafka"
											]
										}
									},
									"status": "Not Implemented",
									"code": 501,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": \"Kafka Test\",\n    \"description\": \"Kafka Test\",\n    \"brokers\": \"kafka-broker-1:9092,kafka-broker-2:9092,kafka-broker-3:9093\",\n    \"groupId\": \"CL-SomeId\",\n    \"topic\": \"some_test_topic\",\n    \"transformerId\": \"ipsum mollit in aute\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/kafka",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"kafka"
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "NOT AVAILABLE IN CURRENT RELEASE",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Kafka Test\",\n    \"brokers\": \"kafka-broker-1:9092,kafka-broker-2:9092,kafka-broker-3:9093\",\n    \"topic\": \"some_test_topic\",\n    \"groupId\": \"CL-SomeId\",\n    \"transformerId\": \"Ut in\",\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"description\": \"Kafka Test\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/connections/kafka",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"connections",
										"kafka"
									]
								},
								"description": "Create a new Kafka Consumer Connection in the Ziqni system"
							},
							"response": [
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Kafka Test\",\n    \"brokers\": \"kafka-broker-1:9092,kafka-broker-2:9092,kafka-broker-3:9093\",\n    \"topic\": \"some_test_topic\",\n    \"groupId\": \"CL-SomeId\",\n    \"transformerId\": \"Ut in\",\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"description\": \"Kafka Test\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/kafka",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"kafka"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Kafka Test\",\n    \"brokers\": \"kafka-broker-1:9092,kafka-broker-2:9092,kafka-broker-3:9093\",\n    \"topic\": \"some_test_topic\",\n    \"groupId\": \"CL-SomeId\",\n    \"transformerId\": \"Ut in\",\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"description\": \"Kafka Test\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/kafka",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"kafka"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Kafka Test\",\n    \"brokers\": \"kafka-broker-1:9092,kafka-broker-2:9092,kafka-broker-3:9093\",\n    \"topic\": \"some_test_topic\",\n    \"groupId\": \"CL-SomeId\",\n    \"transformerId\": \"Ut in\",\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"description\": \"Kafka Test\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/kafka",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"kafka"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Kafka Test\",\n    \"brokers\": \"kafka-broker-1:9092,kafka-broker-2:9092,kafka-broker-3:9093\",\n    \"topic\": \"some_test_topic\",\n    \"groupId\": \"CL-SomeId\",\n    \"transformerId\": \"Ut in\",\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"description\": \"Kafka Test\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/kafka",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"kafka"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Kafka Test\",\n    \"brokers\": \"kafka-broker-1:9092,kafka-broker-2:9092,kafka-broker-3:9093\",\n    \"topic\": \"some_test_topic\",\n    \"groupId\": \"CL-SomeId\",\n    \"transformerId\": \"Ut in\",\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"description\": \"Kafka Test\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/kafka",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"kafka"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Kafka Test\",\n    \"brokers\": \"kafka-broker-1:9092,kafka-broker-2:9092,kafka-broker-3:9093\",\n    \"topic\": \"some_test_topic\",\n    \"groupId\": \"CL-SomeId\",\n    \"transformerId\": \"Ut in\",\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"description\": \"Kafka Test\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/kafka",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"kafka"
											]
										}
									},
									"status": "Request Entity Too Large",
									"code": 413,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Kafka Test\",\n    \"brokers\": \"kafka-broker-1:9092,kafka-broker-2:9092,kafka-broker-3:9093\",\n    \"topic\": \"some_test_topic\",\n    \"groupId\": \"CL-SomeId\",\n    \"transformerId\": \"Ut in\",\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"description\": \"Kafka Test\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/kafka",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"kafka"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Kafka Test\",\n    \"brokers\": \"kafka-broker-1:9092,kafka-broker-2:9092,kafka-broker-3:9093\",\n    \"topic\": \"some_test_topic\",\n    \"groupId\": \"CL-SomeId\",\n    \"transformerId\": \"Ut in\",\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"description\": \"Kafka Test\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/kafka",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"kafka"
											]
										}
									},
									"status": "Not Implemented",
									"code": 501,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Kafka Test\",\n    \"brokers\": \"kafka-broker-1:9092,kafka-broker-2:9092,kafka-broker-3:9093\",\n    \"topic\": \"some_test_topic\",\n    \"groupId\": \"CL-SomeId\",\n    \"transformerId\": \"Ut in\",\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"description\": \"Kafka Test\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/kafka",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"kafka"
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "NOT AVAILABLE IN CURRENT RELEASE",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/connections/kafka?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"connections",
										"kafka"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c",
											"description": "The unique identifiers of the resources"
										},
										{
											"key": "id",
											"value": "deserunt",
											"description": "The unique identifiers of the resources"
										}
									]
								},
								"description": "Delete the Kafka Consumer Connection for a given identifier specified"
							},
							"response": [
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/connections/kafka?id=eiusmod sed c&id=deserunt",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"kafka"
											],
											"query": [
												{
													"key": "id",
													"value": "eiusmod sed c"
												},
												{
													"key": "id",
													"value": "deserunt"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/connections/kafka?id=eiusmod sed c&id=deserunt",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"kafka"
											],
											"query": [
												{
													"key": "id",
													"value": "eiusmod sed c"
												},
												{
													"key": "id",
													"value": "deserunt"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/connections/kafka?id=eiusmod sed c&id=deserunt",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"kafka"
											],
											"query": [
												{
													"key": "id",
													"value": "eiusmod sed c"
												},
												{
													"key": "id",
													"value": "deserunt"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/connections/kafka?id=eiusmod sed c&id=deserunt",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"kafka"
											],
											"query": [
												{
													"key": "id",
													"value": "eiusmod sed c"
												},
												{
													"key": "id",
													"value": "deserunt"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/connections/kafka?id=eiusmod sed c&id=deserunt",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"kafka"
											],
											"query": [
												{
													"key": "id",
													"value": "eiusmod sed c"
												},
												{
													"key": "id",
													"value": "deserunt"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/connections/kafka?id=eiusmod sed c&id=deserunt",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"kafka"
											],
											"query": [
												{
													"key": "id",
													"value": "eiusmod sed c"
												},
												{
													"key": "id",
													"value": "deserunt"
												}
											]
										}
									},
									"status": "Request Entity Too Large",
									"code": 413,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/connections/kafka?id=eiusmod sed c&id=deserunt",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"kafka"
											],
											"query": [
												{
													"key": "id",
													"value": "eiusmod sed c"
												},
												{
													"key": "id",
													"value": "deserunt"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/connections/kafka?id=eiusmod sed c&id=deserunt",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"kafka"
											],
											"query": [
												{
													"key": "id",
													"value": "eiusmod sed c"
												},
												{
													"key": "id",
													"value": "deserunt"
												}
											]
										}
									},
									"status": "Not Implemented",
									"code": 501,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/connections/kafka?id=eiusmod sed c&id=deserunt",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"kafka"
											],
											"query": [
												{
													"key": "id",
													"value": "eiusmod sed c"
												},
												{
													"key": "id",
													"value": "deserunt"
												}
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "NOT AVAILABLE IN CURRENT RELEASE",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/connections/kafka/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"connections",
										"kafka",
										"state"
									]
								},
								"description": "Update the state of a Kafka Connection using the POST method"
							},
							"response": [
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/kafka/state",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"kafka",
												"state"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/kafka/state",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"kafka",
												"state"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/kafka/state",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"kafka",
												"state"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/kafka/state",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"kafka",
												"state"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/kafka/state",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"kafka",
												"state"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/kafka/state",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"kafka",
												"state"
											]
										}
									},
									"status": "Request Entity Too Large",
									"code": 413,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/kafka/state",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"kafka",
												"state"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/kafka/state",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"kafka",
												"state"
											]
										}
									},
									"status": "Not Implemented",
									"code": 501,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/kafka/state",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"kafka",
												"state"
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "NOT AVAILABLE IN CURRENT RELEASE",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/connections/kafka/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"connections",
										"kafka",
										"delete"
									]
								},
								"description": "Delete a Kafka Connection or a list of Kafka Connections from Ziqni by unique Connection ID's or any other POST body parameters using the POST method"
							},
							"response": [
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/kafka/delete",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"kafka",
												"delete"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/kafka/delete",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"kafka",
												"delete"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/kafka/delete",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"kafka",
												"delete"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/kafka/delete",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"kafka",
												"delete"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/kafka/delete",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"kafka",
												"delete"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/kafka/delete",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"kafka",
												"delete"
											]
										}
									},
									"status": "Request Entity Too Large",
									"code": 413,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/kafka/delete",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"kafka",
												"delete"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/kafka/delete",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"kafka",
												"delete"
											]
										}
									},
									"status": "Not Implemented",
									"code": 501,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/kafka/delete",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"kafka",
												"delete"
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "NOT AVAILABLE IN CURRENT RELEASE",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/connections/kafka/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"connections",
										"kafka",
										"query"
									]
								},
								"description": "Retrieve a Kafka Connection or a list of Kafka Connections from Ziqni by unique Connection ID's or any other Post body parameters using the POST method"
							},
							"response": [
								{
									"name": "A list of Kafka consumer connections and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/kafka/query",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"kafka",
												"query"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of Kafka consumer connections and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/kafka/query",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"kafka",
												"query"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of Kafka consumer connections and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/kafka/query",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"kafka",
												"query"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of Kafka consumer connections and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/kafka/query",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"kafka",
												"query"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of Kafka consumer connections and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/kafka/query",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"kafka",
												"query"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of Kafka consumer connections and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/kafka/query",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"kafka",
												"query"
											]
										}
									},
									"status": "Request Entity Too Large",
									"code": 413,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of Kafka consumer connections and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/kafka/query",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"kafka",
												"query"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of Kafka consumer connections and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/kafka/query",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"kafka",
												"query"
											]
										}
									},
									"status": "Not Implemented",
									"code": 501,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of Kafka consumer connections and/or errors",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/connections/kafka/query",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"connections",
												"kafka",
												"query"
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "NOT AVAILABLE IN CURRENT RELEASE",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/connections/state",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"connections",
								"state"
							]
						},
						"description": "Update the state of a Consumer using the POST method"
					},
					"response": [
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/connections/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"connections",
										"state"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/connections/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"connections",
										"state"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/connections/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"connections",
										"state"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/connections/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"connections",
										"state"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/connections/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"connections",
										"state"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/connections/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"connections",
										"state"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/connections/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"connections",
										"state"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/connections/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"connections",
										"state"
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/connections/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"connections",
										"state"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "user",
			"item": [
				{
					"name": "inbox",
					"item": [
						{
							"name": "NOT AVAILABLE IN CURRENT RELEASE",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/inbox?_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"inbox"
									],
									"query": [
										{
											"key": "_limit",
											"value": "-48278460",
											"description": "Limit the returned total records found"
										},
										{
											"key": "_skip",
											"value": "-48278460",
											"description": "Skip the returned records found and return the next batch of records"
										}
									]
								},
								"description": "Returns a list of the Users messages"
							},
							"response": [
								{
									"name": "A list of messages and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/inbox?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"inbox"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of messages and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/inbox?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"inbox"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of messages and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/inbox?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"inbox"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of messages and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/inbox?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"inbox"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of messages and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/inbox?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"inbox"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of messages and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/inbox?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"inbox"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											]
										}
									},
									"status": "Request Entity Too Large",
									"code": 413,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of messages and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/inbox?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"inbox"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of messages and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/inbox?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"inbox"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											]
										}
									},
									"status": "Not Implemented",
									"code": 501,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of messages and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/inbox?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"inbox"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "NOT AVAILABLE IN CURRENT RELEASE",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/inbox/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"inbox",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "repr",
											"description": "(Required) Unique identifier of the resource"
										}
									]
								},
								"description": "Returns a Users message for the identifier provided"
							},
							"response": [
								{
									"name": "A list of messages and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/inbox/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"inbox",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of messages and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/inbox/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"inbox",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of messages and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/inbox/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"inbox",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of messages and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/inbox/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"inbox",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of messages and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/inbox/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"inbox",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of messages and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/inbox/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"inbox",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Request Entity Too Large",
									"code": 413,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of messages and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/inbox/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"inbox",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of messages and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/inbox/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"inbox",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Not Implemented",
									"code": 501,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of messages and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/inbox/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"inbox",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "get User",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user?includeSpaces=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user"
							],
							"query": [
								{
									"key": "includeSpaces",
									"value": "true",
									"description": "Include Spaces"
								}
							]
						},
						"description": "Returns the current users user. This assumes that a user has first been uploaded via a POST request or web console"
					},
					"response": [
						{
							"name": "Details of a User returned",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/user?includeSpaces=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user"
									],
									"query": [
										{
											"key": "includeSpaces",
											"value": "true"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "Details of a User returned",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/user?includeSpaces=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user"
									],
									"query": [
										{
											"key": "includeSpaces",
											"value": "true"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "Details of a User returned",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/user?includeSpaces=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user"
									],
									"query": [
										{
											"key": "includeSpaces",
											"value": "true"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "Details of a User returned",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/user?includeSpaces=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user"
									],
									"query": [
										{
											"key": "includeSpaces",
											"value": "true"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "Details of a User returned",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/user?includeSpaces=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user"
									],
									"query": [
										{
											"key": "includeSpaces",
											"value": "true"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "Details of a User returned",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/user?includeSpaces=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user"
									],
									"query": [
										{
											"key": "includeSpaces",
											"value": "true"
										}
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "Details of a User returned",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/user?includeSpaces=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user"
									],
									"query": [
										{
											"key": "includeSpaces",
											"value": "true"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "Details of a User returned",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/user?includeSpaces=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user"
									],
									"query": [
										{
											"key": "includeSpaces",
											"value": "true"
										}
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "Details of a User returned",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/user?includeSpaces=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user"
									],
									"query": [
										{
											"key": "includeSpaces",
											"value": "true"
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "spaces",
			"item": [
				{
					"name": "{space Name}",
					"item": [
						{
							"name": "get Spaces By Name",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/spaces/:spaceName?_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"spaces",
										":spaceName"
									],
									"query": [
										{
											"key": "_limit",
											"value": "-48278460",
											"description": "Limit the returned total records found"
										},
										{
											"key": "_skip",
											"value": "-48278460",
											"description": "Skip the returned records found and return the next batch of records"
										}
									],
									"variable": [
										{
											"key": "spaceName",
											"value": "repr",
											"description": "(Required) This is the space name which is linked to the account"
										}
									]
								},
								"description": "Return a list of sub-spaces for the given Space Name provided"
							},
							"response": [
								{
									"name": "A list of spaces and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/spaces/:spaceName?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"spaces",
												":spaceName"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "spaceName",
													"value": "repr",
													"description": "(Required) This is the space name which is linked to the account"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of spaces and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/spaces/:spaceName?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"spaces",
												":spaceName"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "spaceName",
													"value": "repr",
													"description": "(Required) This is the space name which is linked to the account"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of spaces and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/spaces/:spaceName?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"spaces",
												":spaceName"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "spaceName",
													"value": "repr",
													"description": "(Required) This is the space name which is linked to the account"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of spaces and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/spaces/:spaceName?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"spaces",
												":spaceName"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "spaceName",
													"value": "repr",
													"description": "(Required) This is the space name which is linked to the account"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of spaces and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/spaces/:spaceName?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"spaces",
												":spaceName"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "spaceName",
													"value": "repr",
													"description": "(Required) This is the space name which is linked to the account"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of spaces and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/spaces/:spaceName?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"spaces",
												":spaceName"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "spaceName",
													"value": "repr",
													"description": "(Required) This is the space name which is linked to the account"
												}
											]
										}
									},
									"status": "Request Entity Too Large",
									"code": 413,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of spaces and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/spaces/:spaceName?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"spaces",
												":spaceName"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "spaceName",
													"value": "repr",
													"description": "(Required) This is the space name which is linked to the account"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of spaces and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/spaces/:spaceName?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"spaces",
												":spaceName"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "spaceName",
													"value": "repr",
													"description": "(Required) This is the space name which is linked to the account"
												}
											]
										}
									},
									"status": "Not Implemented",
									"code": 501,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of spaces and/or errors",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/spaces/:spaceName?_limit=-48278460&_skip=-48278460",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"spaces",
												":spaceName"
											],
											"query": [
												{
													"key": "_limit",
													"value": "-48278460"
												},
												{
													"key": "_skip",
													"value": "-48278460"
												}
											],
											"variable": [
												{
													"key": "spaceName",
													"value": "repr",
													"description": "(Required) This is the space name which is linked to the account"
												}
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "NOT AVAILABLE IN CURRENT RELEASE",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/spaces/:spaceName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"spaces",
										":spaceName"
									],
									"variable": [
										{
											"key": "spaceName",
											"value": "repr",
											"description": "(Required) This is the space name which will be deleted"
										}
									]
								},
								"description": "Delete the Space for the given Space Name provided"
							},
							"response": [
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/spaces/:spaceName",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"spaces",
												":spaceName"
											],
											"variable": [
												{
													"key": "spaceName",
													"value": "repr",
													"description": "(Required) This is the space name which will be deleted"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/spaces/:spaceName",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"spaces",
												":spaceName"
											],
											"variable": [
												{
													"key": "spaceName",
													"value": "repr",
													"description": "(Required) This is the space name which will be deleted"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/spaces/:spaceName",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"spaces",
												":spaceName"
											],
											"variable": [
												{
													"key": "spaceName",
													"value": "repr",
													"description": "(Required) This is the space name which will be deleted"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/spaces/:spaceName",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"spaces",
												":spaceName"
											],
											"variable": [
												{
													"key": "spaceName",
													"value": "repr",
													"description": "(Required) This is the space name which will be deleted"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/spaces/:spaceName",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"spaces",
												":spaceName"
											],
											"variable": [
												{
													"key": "spaceName",
													"value": "repr",
													"description": "(Required) This is the space name which will be deleted"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/spaces/:spaceName",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"spaces",
												":spaceName"
											],
											"variable": [
												{
													"key": "spaceName",
													"value": "repr",
													"description": "(Required) This is the space name which will be deleted"
												}
											]
										}
									},
									"status": "Request Entity Too Large",
									"code": 413,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/spaces/:spaceName",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"spaces",
												":spaceName"
											],
											"variable": [
												{
													"key": "spaceName",
													"value": "repr",
													"description": "(Required) This is the space name which will be deleted"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/spaces/:spaceName",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"spaces",
												":spaceName"
											],
											"variable": [
												{
													"key": "spaceName",
													"value": "repr",
													"description": "(Required) This is the space name which will be deleted"
												}
											]
										}
									},
									"status": "Not Implemented",
									"code": 501,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/spaces/:spaceName",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"spaces",
												":spaceName"
											],
											"variable": [
												{
													"key": "spaceName",
													"value": "repr",
													"description": "(Required) This is the space name which will be deleted"
												}
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "get Space Infromation",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/spaces?_limit=-48278460&_skip=-48278460",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spaces"
							],
							"query": [
								{
									"key": "_limit",
									"value": "-48278460",
									"description": "Limit the returned total records found"
								},
								{
									"key": "_skip",
									"value": "-48278460",
									"description": "Skip the returned records found and return the next batch of records"
								}
							]
						},
						"description": "Returns a list of Spaces for the current session"
					},
					"response": [
						{
							"name": "A list of spaces and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/spaces?_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"spaces"
									],
									"query": [
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of spaces and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/spaces?_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"spaces"
									],
									"query": [
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of spaces and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/spaces?_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"spaces"
									],
									"query": [
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of spaces and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/spaces?_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"spaces"
									],
									"query": [
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of spaces and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/spaces?_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"spaces"
									],
									"query": [
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of spaces and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/spaces?_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"spaces"
									],
									"query": [
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of spaces and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/spaces?_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"spaces"
									],
									"query": [
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of spaces and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/spaces?_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"spaces"
									],
									"query": [
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of spaces and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/spaces?_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"spaces"
									],
									"query": [
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "update Space",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"accountType\": \"company\",\n    \"masterSpace\": \"sc1samQmVr61KgaPQq7x\",\n    \"unitsOfMeasure\": [\n        \"velit labore\",\n        \"cillum ut\"\n    ],\n    \"constraints\": [\n        \"proident dolore\",\n        \"ea magna\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/spaces",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spaces"
							]
						},
						"description": "Update a  Space for the user in the Ziqni"
					},
					"response": [
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"accountType\": \"company\",\n    \"masterSpace\": \"sc1samQmVr61KgaPQq7x\",\n    \"unitsOfMeasure\": [\n        \"irure pariatur Duis\",\n        \"in incididunt\"\n    ],\n    \"constraints\": [\n        \"incididunt Excepteur\",\n        \"anim dolore dolore\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/spaces",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"spaces"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"accountType\": \"company\",\n    \"masterSpace\": \"sc1samQmVr61KgaPQq7x\",\n    \"unitsOfMeasure\": [\n        \"irure pariatur Duis\",\n        \"in incididunt\"\n    ],\n    \"constraints\": [\n        \"incididunt Excepteur\",\n        \"anim dolore dolore\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/spaces",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"spaces"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"accountType\": \"company\",\n    \"masterSpace\": \"sc1samQmVr61KgaPQq7x\",\n    \"unitsOfMeasure\": [\n        \"irure pariatur Duis\",\n        \"in incididunt\"\n    ],\n    \"constraints\": [\n        \"incididunt Excepteur\",\n        \"anim dolore dolore\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/spaces",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"spaces"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"accountType\": \"company\",\n    \"masterSpace\": \"sc1samQmVr61KgaPQq7x\",\n    \"unitsOfMeasure\": [\n        \"irure pariatur Duis\",\n        \"in incididunt\"\n    ],\n    \"constraints\": [\n        \"incididunt Excepteur\",\n        \"anim dolore dolore\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/spaces",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"spaces"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"accountType\": \"company\",\n    \"masterSpace\": \"sc1samQmVr61KgaPQq7x\",\n    \"unitsOfMeasure\": [\n        \"irure pariatur Duis\",\n        \"in incididunt\"\n    ],\n    \"constraints\": [\n        \"incididunt Excepteur\",\n        \"anim dolore dolore\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/spaces",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"spaces"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"accountType\": \"company\",\n    \"masterSpace\": \"sc1samQmVr61KgaPQq7x\",\n    \"unitsOfMeasure\": [\n        \"irure pariatur Duis\",\n        \"in incididunt\"\n    ],\n    \"constraints\": [\n        \"incididunt Excepteur\",\n        \"anim dolore dolore\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/spaces",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"spaces"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"accountType\": \"company\",\n    \"masterSpace\": \"sc1samQmVr61KgaPQq7x\",\n    \"unitsOfMeasure\": [\n        \"irure pariatur Duis\",\n        \"in incididunt\"\n    ],\n    \"constraints\": [\n        \"incididunt Excepteur\",\n        \"anim dolore dolore\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/spaces",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"spaces"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"accountType\": \"company\",\n    \"masterSpace\": \"sc1samQmVr61KgaPQq7x\",\n    \"unitsOfMeasure\": [\n        \"irure pariatur Duis\",\n        \"in incididunt\"\n    ],\n    \"constraints\": [\n        \"incididunt Excepteur\",\n        \"anim dolore dolore\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/spaces",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"spaces"
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"accountType\": \"company\",\n    \"masterSpace\": \"sc1samQmVr61KgaPQq7x\",\n    \"unitsOfMeasure\": [\n        \"irure pariatur Duis\",\n        \"in incididunt\"\n    ],\n    \"constraints\": [\n        \"incididunt Excepteur\",\n        \"anim dolore dolore\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/spaces",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"spaces"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "create Space",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"accountType\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"masterSpace\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"unitsOfMeasure\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"constraints\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"accountType\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"masterSpace\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"unitsOfMeasure\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"constraints\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/spaces",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spaces"
							]
						},
						"description": "Create a new Space for the user in the Ziqni"
					},
					"response": [
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"accountType\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"masterSpace\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"unitsOfMeasure\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"constraints\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"accountType\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"masterSpace\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"unitsOfMeasure\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"constraints\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/spaces",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"spaces"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"accountType\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"masterSpace\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"unitsOfMeasure\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"constraints\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"accountType\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"masterSpace\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"unitsOfMeasure\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"constraints\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/spaces",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"spaces"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"accountType\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"masterSpace\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"unitsOfMeasure\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"constraints\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"accountType\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"masterSpace\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"unitsOfMeasure\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"constraints\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/spaces",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"spaces"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"accountType\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"masterSpace\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"unitsOfMeasure\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"constraints\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"accountType\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"masterSpace\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"unitsOfMeasure\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"constraints\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/spaces",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"spaces"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"accountType\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"masterSpace\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"unitsOfMeasure\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"constraints\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"accountType\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"masterSpace\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"unitsOfMeasure\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"constraints\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/spaces",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"spaces"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"accountType\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"masterSpace\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"unitsOfMeasure\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"constraints\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"accountType\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"masterSpace\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"unitsOfMeasure\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"constraints\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/spaces",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"spaces"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"accountType\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"masterSpace\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"unitsOfMeasure\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"constraints\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"accountType\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"masterSpace\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"unitsOfMeasure\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"constraints\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/spaces",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"spaces"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"accountType\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"masterSpace\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"unitsOfMeasure\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"constraints\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"accountType\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"masterSpace\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"unitsOfMeasure\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"constraints\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/spaces",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"spaces"
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"accountType\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"masterSpace\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"unitsOfMeasure\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"constraints\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"accountType\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"masterSpace\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"unitsOfMeasure\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"constraints\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/spaces",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"spaces"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "NOT AVAILABLE IN CURRENT RELEASE",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/spaces?name=repr",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"spaces"
							],
							"query": [
								{
									"key": "name",
									"value": "repr",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "On Success",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/spaces?name=repr",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"spaces"
									],
									"query": [
										{
											"key": "name",
											"value": "repr"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"\""
						}
					]
				}
			]
		},
		{
			"name": "repositories",
			"item": [
				{
					"name": "get List Of File Object Repositories",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repositories?_limit=-48278460&_skip=-48278460&id=eiusmod sed c&id=deserunt",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repositories"
							],
							"query": [
								{
									"key": "_limit",
									"value": "-48278460",
									"description": "Limit the returned total records found"
								},
								{
									"key": "_skip",
									"value": "-48278460",
									"description": "Skip the returned records found and return the next batch of records"
								},
								{
									"key": "id",
									"value": "eiusmod sed c",
									"description": "The unique identifiers of the resources"
								},
								{
									"key": "id",
									"value": "deserunt",
									"description": "The unique identifiers of the resources"
								}
							]
						},
						"description": "Returns a list of file object repositories. This assumes that repositories have first been uploaded via a POST request or web console"
					},
					"response": [
						{
							"name": "A list of repositories and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/repositories?_limit=-48278460&_skip=-48278460&id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repositories"
									],
									"query": [
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										},
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of repositories and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/repositories?_limit=-48278460&_skip=-48278460&id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repositories"
									],
									"query": [
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										},
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of repositories and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/repositories?_limit=-48278460&_skip=-48278460&id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repositories"
									],
									"query": [
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										},
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of repositories and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/repositories?_limit=-48278460&_skip=-48278460&id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repositories"
									],
									"query": [
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										},
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of repositories and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/repositories?_limit=-48278460&_skip=-48278460&id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repositories"
									],
									"query": [
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										},
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of repositories and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/repositories?_limit=-48278460&_skip=-48278460&id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repositories"
									],
									"query": [
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										},
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of repositories and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/repositories?_limit=-48278460&_skip=-48278460&id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repositories"
									],
									"query": [
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										},
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of repositories and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/repositories?_limit=-48278460&_skip=-48278460&id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repositories"
									],
									"query": [
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										},
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of repositories and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/repositories?_limit=-48278460&_skip=-48278460&id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repositories"
									],
									"query": [
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										},
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "update File Object Repository",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/repositories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repositories"
							]
						},
						"description": "Update a file object repository in your Ziqni space."
					},
					"response": [
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/repositories",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repositories"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "Accepted",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/repositories",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repositories"
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/repositories",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repositories"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/repositories",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repositories"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/repositories",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repositories"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/repositories",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repositories"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/repositories",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repositories"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/repositories",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repositories"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/repositories",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repositories"
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/repositories",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repositories"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "create File Object Repository",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/repositories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repositories"
							]
						},
						"description": "Create a new file object repository in your Ziqni space"
					},
					"response": [
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/repositories",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repositories"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/repositories",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repositories"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/repositories",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repositories"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/repositories",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repositories"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/repositories",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repositories"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/repositories",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repositories"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/repositories",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repositories"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/repositories",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repositories"
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/repositories",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repositories"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "delete File Object Repository By Id",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repositories?id=eiusmod sed c&id=deserunt&permanent=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repositories"
							],
							"query": [
								{
									"key": "id",
									"value": "eiusmod sed c",
									"description": "The unique identifiers of the resources"
								},
								{
									"key": "id",
									"value": "deserunt",
									"description": "The unique identifiers of the resources"
								},
								{
									"key": "permanent",
									"value": "true",
									"description": "Permanently delete the file object. Default is false"
								}
							]
						},
						"description": "Delete the file repository for a given identifier specified"
					},
					"response": [
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/repositories?id=eiusmod sed c&id=deserunt&permanent=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repositories"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "permanent",
											"value": "true"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/repositories?id=eiusmod sed c&id=deserunt&permanent=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repositories"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "permanent",
											"value": "true"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/repositories?id=eiusmod sed c&id=deserunt&permanent=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repositories"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "permanent",
											"value": "true"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/repositories?id=eiusmod sed c&id=deserunt&permanent=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repositories"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "permanent",
											"value": "true"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/repositories?id=eiusmod sed c&id=deserunt&permanent=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repositories"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "permanent",
											"value": "true"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/repositories?id=eiusmod sed c&id=deserunt&permanent=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repositories"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "permanent",
											"value": "true"
										}
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/repositories?id=eiusmod sed c&id=deserunt&permanent=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repositories"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "permanent",
											"value": "true"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/repositories?id=eiusmod sed c&id=deserunt&permanent=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repositories"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "permanent",
											"value": "true"
										}
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/repositories?id=eiusmod sed c&id=deserunt&permanent=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repositories"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "permanent",
											"value": "true"
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "NOT AVAILABLE IN CURRENT RELEASE",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/repositories/delete",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repositories",
								"delete"
							]
						},
						"description": "Delete repositories nby query. Delete repositories by query and/or unique repository ID's or any other body parameters"
					},
					"response": [
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/repositories/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repositories",
										"delete"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/repositories/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repositories",
										"delete"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/repositories/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repositories",
										"delete"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/repositories/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repositories",
										"delete"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/repositories/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repositories",
										"delete"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/repositories/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repositories",
										"delete"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/repositories/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repositories",
										"delete"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/repositories/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repositories",
										"delete"
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/repositories/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repositories",
										"delete"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "get File Object Repositories By Query",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/repositories/query",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repositories",
								"query"
							]
						},
						"description": "Find file object repositories by query"
					},
					"response": [
						{
							"name": "A list of repositories and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/repositories/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repositories",
										"query"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of repositories and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/repositories/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repositories",
										"query"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of repositories and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/repositories/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repositories",
										"query"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of repositories and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/repositories/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repositories",
										"query"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of repositories and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/repositories/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repositories",
										"query"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of repositories and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/repositories/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repositories",
										"query"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of repositories and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/repositories/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repositories",
										"query"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of repositories and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/repositories/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repositories",
										"query"
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of repositories and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/repositories/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repositories",
										"query"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "files",
			"item": [
				{
					"name": "get List Of File Objects",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/files?_limit=-48278460&_skip=-48278460&id=eiusmod sed c&id=deserunt&download=repr",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"files"
							],
							"query": [
								{
									"key": "_limit",
									"value": "-48278460",
									"description": "Limit the returned total records found"
								},
								{
									"key": "_skip",
									"value": "-48278460",
									"description": "Skip the returned records found and return the next batch of records"
								},
								{
									"key": "id",
									"value": "eiusmod sed c",
									"description": "The unique identifiers of the resources"
								},
								{
									"key": "id",
									"value": "deserunt",
									"description": "The unique identifiers of the resources"
								},
								{
									"key": "download",
									"value": "repr"
								}
							]
						},
						"description": "Returns a list of file objects"
					},
					"response": [
						{
							"name": "A list of files and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/files?_limit=-48278460&_skip=-48278460&id=eiusmod sed c&id=deserunt&download=repr",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files"
									],
									"query": [
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										},
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "download",
											"value": "repr"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of files and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/files?_limit=-48278460&_skip=-48278460&id=eiusmod sed c&id=deserunt&download=repr",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files"
									],
									"query": [
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										},
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "download",
											"value": "repr"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of files and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/files?_limit=-48278460&_skip=-48278460&id=eiusmod sed c&id=deserunt&download=repr",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files"
									],
									"query": [
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										},
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "download",
											"value": "repr"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of files and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/files?_limit=-48278460&_skip=-48278460&id=eiusmod sed c&id=deserunt&download=repr",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files"
									],
									"query": [
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										},
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "download",
											"value": "repr"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of files and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/files?_limit=-48278460&_skip=-48278460&id=eiusmod sed c&id=deserunt&download=repr",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files"
									],
									"query": [
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										},
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "download",
											"value": "repr"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of files and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/files?_limit=-48278460&_skip=-48278460&id=eiusmod sed c&id=deserunt&download=repr",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files"
									],
									"query": [
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										},
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "download",
											"value": "repr"
										}
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of files and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/files?_limit=-48278460&_skip=-48278460&id=eiusmod sed c&id=deserunt&download=repr",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files"
									],
									"query": [
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										},
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "download",
											"value": "repr"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of files and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/files?_limit=-48278460&_skip=-48278460&id=eiusmod sed c&id=deserunt&download=repr",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files"
									],
									"query": [
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										},
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "download",
											"value": "repr"
										}
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of files and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/files?_limit=-48278460&_skip=-48278460&id=eiusmod sed c&id=deserunt&download=repr",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files"
									],
									"query": [
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										},
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "download",
											"value": "repr"
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "update File Object",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/files",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"files"
							]
						}
					},
					"response": [
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/files",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "Accepted",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/files",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files"
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/files",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/files",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/files",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/files",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/files",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/files",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/files",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files"
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/files",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "create File Object",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"repositoryId\": \"sample\",\n    \"name\": \"First-upload-file-sample.png\",\n    \"mimeType\": \"application/vnd.png\",\n    \"parentFolderPath\": \"/achievement-icons\",\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"constraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/files",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"files"
							]
						}
					},
					"response": [
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"repositoryId\": \"sample\",\n    \"name\": \"First-upload-file-sample.png\",\n    \"mimeType\": \"application/vnd.png\",\n    \"parentFolderPath\": \"/achievement-icons\",\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"constraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/files",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"repositoryId\": \"sample\",\n    \"name\": \"First-upload-file-sample.png\",\n    \"mimeType\": \"application/vnd.png\",\n    \"parentFolderPath\": \"/achievement-icons\",\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"constraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/files",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"repositoryId\": \"sample\",\n    \"name\": \"First-upload-file-sample.png\",\n    \"mimeType\": \"application/vnd.png\",\n    \"parentFolderPath\": \"/achievement-icons\",\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"constraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/files",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"repositoryId\": \"sample\",\n    \"name\": \"First-upload-file-sample.png\",\n    \"mimeType\": \"application/vnd.png\",\n    \"parentFolderPath\": \"/achievement-icons\",\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"constraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/files",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"repositoryId\": \"sample\",\n    \"name\": \"First-upload-file-sample.png\",\n    \"mimeType\": \"application/vnd.png\",\n    \"parentFolderPath\": \"/achievement-icons\",\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"constraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/files",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"repositoryId\": \"sample\",\n    \"name\": \"First-upload-file-sample.png\",\n    \"mimeType\": \"application/vnd.png\",\n    \"parentFolderPath\": \"/achievement-icons\",\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"constraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/files",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"repositoryId\": \"sample\",\n    \"name\": \"First-upload-file-sample.png\",\n    \"mimeType\": \"application/vnd.png\",\n    \"parentFolderPath\": \"/achievement-icons\",\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"constraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/files",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"repositoryId\": \"sample\",\n    \"name\": \"First-upload-file-sample.png\",\n    \"mimeType\": \"application/vnd.png\",\n    \"parentFolderPath\": \"/achievement-icons\",\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"constraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/files",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files"
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"repositoryId\": \"sample\",\n    \"name\": \"First-upload-file-sample.png\",\n    \"mimeType\": \"application/vnd.png\",\n    \"parentFolderPath\": \"/achievement-icons\",\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"constraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/files",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "delete File Object By Id",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/files?id=eiusmod sed c&id=deserunt&permanent=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"files"
							],
							"query": [
								{
									"key": "id",
									"value": "eiusmod sed c",
									"description": "The unique identifiers of the resources"
								},
								{
									"key": "id",
									"value": "deserunt",
									"description": "The unique identifiers of the resources"
								},
								{
									"key": "permanent",
									"value": "true",
									"description": "Permanently delete the file object. Default is false"
								}
							]
						}
					},
					"response": [
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/files?id=eiusmod sed c&id=deserunt&permanent=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "permanent",
											"value": "true"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/files?id=eiusmod sed c&id=deserunt&permanent=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "permanent",
											"value": "true"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/files?id=eiusmod sed c&id=deserunt&permanent=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "permanent",
											"value": "true"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/files?id=eiusmod sed c&id=deserunt&permanent=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "permanent",
											"value": "true"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/files?id=eiusmod sed c&id=deserunt&permanent=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "permanent",
											"value": "true"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/files?id=eiusmod sed c&id=deserunt&permanent=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "permanent",
											"value": "true"
										}
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/files?id=eiusmod sed c&id=deserunt&permanent=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "permanent",
											"value": "true"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/files?id=eiusmod sed c&id=deserunt&permanent=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "permanent",
											"value": "true"
										}
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/files?id=eiusmod sed c&id=deserunt&permanent=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "permanent",
											"value": "true"
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "NOT AVAILABLE IN CURRENT RELEASE",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"repositoryId\": \"sample\",\n    \"name\": \"First-upload-file-sample.png\",\n    \"mimeType\": \"application/vnd.png\",\n    \"parentFolderPath\": \"/achievement-icons\",\n    \"constraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/files/copy?id=eiusmod sed c&id=deserunt",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"files",
								"copy"
							],
							"query": [
								{
									"key": "id",
									"value": "eiusmod sed c",
									"description": "The unique identifiers of the resources"
								},
								{
									"key": "id",
									"value": "deserunt",
									"description": "The unique identifiers of the resources"
								}
							]
						},
						"description": "Copy an existing file object"
					},
					"response": [
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"repositoryId\": \"sample\",\n    \"name\": \"First-upload-file-sample.png\",\n    \"mimeType\": \"application/vnd.png\",\n    \"parentFolderPath\": \"/achievement-icons\",\n    \"constraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/files/copy?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files",
										"copy"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "Accepted",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"repositoryId\": \"sample\",\n    \"name\": \"First-upload-file-sample.png\",\n    \"mimeType\": \"application/vnd.png\",\n    \"parentFolderPath\": \"/achievement-icons\",\n    \"constraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/files/copy?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files",
										"copy"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"repositoryId\": \"sample\",\n    \"name\": \"First-upload-file-sample.png\",\n    \"mimeType\": \"application/vnd.png\",\n    \"parentFolderPath\": \"/achievement-icons\",\n    \"constraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/files/copy?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files",
										"copy"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"repositoryId\": \"sample\",\n    \"name\": \"First-upload-file-sample.png\",\n    \"mimeType\": \"application/vnd.png\",\n    \"parentFolderPath\": \"/achievement-icons\",\n    \"constraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/files/copy?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files",
										"copy"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"repositoryId\": \"sample\",\n    \"name\": \"First-upload-file-sample.png\",\n    \"mimeType\": \"application/vnd.png\",\n    \"parentFolderPath\": \"/achievement-icons\",\n    \"constraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/files/copy?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files",
										"copy"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"repositoryId\": \"sample\",\n    \"name\": \"First-upload-file-sample.png\",\n    \"mimeType\": \"application/vnd.png\",\n    \"parentFolderPath\": \"/achievement-icons\",\n    \"constraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/files/copy?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files",
										"copy"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"repositoryId\": \"sample\",\n    \"name\": \"First-upload-file-sample.png\",\n    \"mimeType\": \"application/vnd.png\",\n    \"parentFolderPath\": \"/achievement-icons\",\n    \"constraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/files/copy?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files",
										"copy"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"repositoryId\": \"sample\",\n    \"name\": \"First-upload-file-sample.png\",\n    \"mimeType\": \"application/vnd.png\",\n    \"parentFolderPath\": \"/achievement-icons\",\n    \"constraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/files/copy?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files",
										"copy"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"repositoryId\": \"sample\",\n    \"name\": \"First-upload-file-sample.png\",\n    \"mimeType\": \"application/vnd.png\",\n    \"parentFolderPath\": \"/achievement-icons\",\n    \"constraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/files/copy?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files",
										"copy"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"repositoryId\": \"sample\",\n    \"name\": \"First-upload-file-sample.png\",\n    \"mimeType\": \"application/vnd.png\",\n    \"parentFolderPath\": \"/achievement-icons\",\n    \"constraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/files/copy?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files",
										"copy"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "NOT AVAILABLE IN CURRENT RELEASE",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/files/delete?id=eiusmod sed c&id=deserunt",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"files",
								"delete"
							],
							"query": [
								{
									"key": "id",
									"value": "eiusmod sed c",
									"description": "The unique identifiers of the resources"
								},
								{
									"key": "id",
									"value": "deserunt",
									"description": "The unique identifiers of the resources"
								}
							]
						},
						"description": "Delete file objects by query"
					},
					"response": [
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/files/delete?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files",
										"delete"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/files/delete?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files",
										"delete"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/files/delete?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files",
										"delete"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/files/delete?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files",
										"delete"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/files/delete?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files",
										"delete"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/files/delete?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files",
										"delete"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/files/delete?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files",
										"delete"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/files/delete?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files",
										"delete"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/files/delete?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files",
										"delete"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "NOT AVAILABLE IN CURRENT RELEASE",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/files/download?path=repr",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"files",
								"download"
							],
							"query": [
								{
									"key": "path",
									"value": "repr",
									"description": "The canonical path of the file to download"
								}
							]
						},
						"description": "Download file objects from your Ziqni space"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/files/download?path=repr",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files",
										"download"
									],
									"query": [
										{
											"key": "path",
											"value": "repr"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "xml",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/xml"
								}
							],
							"cookie": [],
							"body": "repr"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/files/download?path=repr",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files",
										"download"
									],
									"query": [
										{
											"key": "path",
											"value": "repr"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/files/download?path=repr",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files",
										"download"
									],
									"query": [
										{
											"key": "path",
											"value": "repr"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/files/download?path=repr",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files",
										"download"
									],
									"query": [
										{
											"key": "path",
											"value": "repr"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/files/download?path=repr",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files",
										"download"
									],
									"query": [
										{
											"key": "path",
											"value": "repr"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/files/download?path=repr",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files",
										"download"
									],
									"query": [
										{
											"key": "path",
											"value": "repr"
										}
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/files/download?path=repr",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files",
										"download"
									],
									"query": [
										{
											"key": "path",
											"value": "repr"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/files/download?path=repr",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files",
										"download"
									],
									"query": [
										{
											"key": "path",
											"value": "repr"
										}
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/files/download?path=repr",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files",
										"download"
									],
									"query": [
										{
											"key": "path",
											"value": "repr"
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "get File Objects By Query",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/files/query?id=eiusmod sed c&id=deserunt",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"files",
								"query"
							],
							"query": [
								{
									"key": "id",
									"value": "eiusmod sed c",
									"description": "The unique identifiers of the resources"
								},
								{
									"key": "id",
									"value": "deserunt",
									"description": "The unique identifiers of the resources"
								}
							]
						},
						"description": "Retrieve file objects by query"
					},
					"response": [
						{
							"name": "A list of files and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/files/query?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files",
										"query"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of files and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/files/query?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files",
										"query"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of files and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/files/query?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files",
										"query"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of files and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/files/query?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files",
										"query"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of files and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/files/query?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files",
										"query"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of files and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/files/query?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files",
										"query"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of files and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/files/query?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files",
										"query"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of files and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/files/query?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files",
										"query"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of files and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/files/query?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files",
										"query"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "NOT AVAILABLE IN CURRENT RELEASE",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "customFields",
									"value": "{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"}",
									"description": "undefined",
									"type": "text"
								},
								{
									"key": "tags",
									"value": "{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"}",
									"description": "undefined",
									"type": "text"
								},
								{
									"key": "metadata",
									"value": "{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"}",
									"description": "undefined",
									"type": "text"
								},
								{
									"key": "parentFolderPath",
									"value": "/achievement-icons",
									"description": "undefined",
									"type": "text"
								},
								{
									"key": "files",
									"value": "[{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"},{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"}]",
									"description": "undefined",
									"type": "text"
								},
								{
									"key": "repositoryId",
									"value": "mollit nulla",
									"description": "undefined",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/files/upload",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"files",
								"upload"
							]
						},
						"description": "Create or update file objects and binaries in your Ziqni space"
					},
					"response": [
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "customFields",
											"value": "{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"}",
											"description": "undefined",
											"type": "text"
										},
										{
											"key": "tags",
											"value": "{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"}",
											"description": "undefined",
											"type": "text"
										},
										{
											"key": "metadata",
											"value": "{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"}",
											"description": "undefined",
											"type": "text"
										},
										{
											"key": "parentFolderPath",
											"value": "/achievement-icons",
											"description": "undefined",
											"type": "text"
										},
										{
											"key": "files",
											"value": "[{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"},{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"}]",
											"description": "undefined",
											"type": "text"
										},
										{
											"key": "repositoryId",
											"value": "eu dolor ut",
											"description": "undefined",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/files/upload",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files",
										"upload"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "customFields",
											"value": "{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"}",
											"description": "undefined",
											"type": "text"
										},
										{
											"key": "tags",
											"value": "{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"}",
											"description": "undefined",
											"type": "text"
										},
										{
											"key": "metadata",
											"value": "{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"}",
											"description": "undefined",
											"type": "text"
										},
										{
											"key": "parentFolderPath",
											"value": "/achievement-icons",
											"description": "undefined",
											"type": "text"
										},
										{
											"key": "files",
											"value": "[{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"},{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"}]",
											"description": "undefined",
											"type": "text"
										},
										{
											"key": "repositoryId",
											"value": "eu dolor ut",
											"description": "undefined",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/files/upload",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files",
										"upload"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "customFields",
											"value": "{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"}",
											"description": "undefined",
											"type": "text"
										},
										{
											"key": "tags",
											"value": "{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"}",
											"description": "undefined",
											"type": "text"
										},
										{
											"key": "metadata",
											"value": "{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"}",
											"description": "undefined",
											"type": "text"
										},
										{
											"key": "parentFolderPath",
											"value": "/achievement-icons",
											"description": "undefined",
											"type": "text"
										},
										{
											"key": "files",
											"value": "[{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"},{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"}]",
											"description": "undefined",
											"type": "text"
										},
										{
											"key": "repositoryId",
											"value": "eu dolor ut",
											"description": "undefined",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/files/upload",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files",
										"upload"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "customFields",
											"value": "{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"}",
											"description": "undefined",
											"type": "text"
										},
										{
											"key": "tags",
											"value": "{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"}",
											"description": "undefined",
											"type": "text"
										},
										{
											"key": "metadata",
											"value": "{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"}",
											"description": "undefined",
											"type": "text"
										},
										{
											"key": "parentFolderPath",
											"value": "/achievement-icons",
											"description": "undefined",
											"type": "text"
										},
										{
											"key": "files",
											"value": "[{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"},{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"}]",
											"description": "undefined",
											"type": "text"
										},
										{
											"key": "repositoryId",
											"value": "eu dolor ut",
											"description": "undefined",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/files/upload",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files",
										"upload"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "customFields",
											"value": "{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"}",
											"description": "undefined",
											"type": "text"
										},
										{
											"key": "tags",
											"value": "{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"}",
											"description": "undefined",
											"type": "text"
										},
										{
											"key": "metadata",
											"value": "{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"}",
											"description": "undefined",
											"type": "text"
										},
										{
											"key": "parentFolderPath",
											"value": "/achievement-icons",
											"description": "undefined",
											"type": "text"
										},
										{
											"key": "files",
											"value": "[{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"},{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"}]",
											"description": "undefined",
											"type": "text"
										},
										{
											"key": "repositoryId",
											"value": "eu dolor ut",
											"description": "undefined",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/files/upload",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files",
										"upload"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "customFields",
											"value": "{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"}",
											"description": "undefined",
											"type": "text"
										},
										{
											"key": "tags",
											"value": "{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"}",
											"description": "undefined",
											"type": "text"
										},
										{
											"key": "metadata",
											"value": "{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"}",
											"description": "undefined",
											"type": "text"
										},
										{
											"key": "parentFolderPath",
											"value": "/achievement-icons",
											"description": "undefined",
											"type": "text"
										},
										{
											"key": "files",
											"value": "[{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"},{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"}]",
											"description": "undefined",
											"type": "text"
										},
										{
											"key": "repositoryId",
											"value": "eu dolor ut",
											"description": "undefined",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/files/upload",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files",
										"upload"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "customFields",
											"value": "{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"}",
											"description": "undefined",
											"type": "text"
										},
										{
											"key": "tags",
											"value": "{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"}",
											"description": "undefined",
											"type": "text"
										},
										{
											"key": "metadata",
											"value": "{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"}",
											"description": "undefined",
											"type": "text"
										},
										{
											"key": "parentFolderPath",
											"value": "/achievement-icons",
											"description": "undefined",
											"type": "text"
										},
										{
											"key": "files",
											"value": "[{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"},{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"}]",
											"description": "undefined",
											"type": "text"
										},
										{
											"key": "repositoryId",
											"value": "eu dolor ut",
											"description": "undefined",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/files/upload",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files",
										"upload"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "customFields",
											"value": "{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"}",
											"description": "undefined",
											"type": "text"
										},
										{
											"key": "tags",
											"value": "{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"}",
											"description": "undefined",
											"type": "text"
										},
										{
											"key": "metadata",
											"value": "{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"}",
											"description": "undefined",
											"type": "text"
										},
										{
											"key": "parentFolderPath",
											"value": "/achievement-icons",
											"description": "undefined",
											"type": "text"
										},
										{
											"key": "files",
											"value": "[{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"},{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"}]",
											"description": "undefined",
											"type": "text"
										},
										{
											"key": "repositoryId",
											"value": "eu dolor ut",
											"description": "undefined",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/files/upload",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files",
										"upload"
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "customFields",
											"value": "{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"}",
											"description": "undefined",
											"type": "text"
										},
										{
											"key": "tags",
											"value": "{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"}",
											"description": "undefined",
											"type": "text"
										},
										{
											"key": "metadata",
											"value": "{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"}",
											"description": "undefined",
											"type": "text"
										},
										{
											"key": "parentFolderPath",
											"value": "/achievement-icons",
											"description": "undefined",
											"type": "text"
										},
										{
											"key": "files",
											"value": "[{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"},{\"value\":\"<Error: Too many levels of nesting to fake this schema>\"}]",
											"description": "undefined",
											"type": "text"
										},
										{
											"key": "repositoryId",
											"value": "eu dolor ut",
											"description": "undefined",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/files/upload",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files",
										"upload"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "collaborators",
			"item": [
				{
					"name": "get Collaborators",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/collaborators?emails=voluptate laboris consectetu&emails=incididunt consequat sunt veniam in&_limit=-48278460&_skip=-48278460",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"collaborators"
							],
							"query": [
								{
									"key": "emails",
									"value": "voluptate laboris consectetu",
									"description": "The list of user emails to search by"
								},
								{
									"key": "emails",
									"value": "incididunt consequat sunt veniam in",
									"description": "The list of user emails to search by"
								},
								{
									"key": "_limit",
									"value": "-48278460",
									"description": "Limit the returned total records found"
								},
								{
									"key": "_skip",
									"value": "-48278460",
									"description": "Skip the returned records found and return the next batch of records"
								}
							]
						},
						"description": "Returns a list of Collaborators. This assumes that Users have first been uploaded via a POST request or web console"
					},
					"response": [
						{
							"name": "List of Collaborators",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/collaborators?emails=eiusmod sed c&emails=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collaborators"
									],
									"query": [
										{
											"key": "emails",
											"value": "eiusmod sed c"
										},
										{
											"key": "emails",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "List of Collaborators",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/collaborators?emails=eiusmod sed c&emails=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collaborators"
									],
									"query": [
										{
											"key": "emails",
											"value": "eiusmod sed c"
										},
										{
											"key": "emails",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "List of Collaborators",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/collaborators?emails=eiusmod sed c&emails=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collaborators"
									],
									"query": [
										{
											"key": "emails",
											"value": "eiusmod sed c"
										},
										{
											"key": "emails",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "List of Collaborators",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/collaborators?emails=eiusmod sed c&emails=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collaborators"
									],
									"query": [
										{
											"key": "emails",
											"value": "eiusmod sed c"
										},
										{
											"key": "emails",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "List of Collaborators",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/collaborators?emails=eiusmod sed c&emails=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collaborators"
									],
									"query": [
										{
											"key": "emails",
											"value": "eiusmod sed c"
										},
										{
											"key": "emails",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "List of Collaborators",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/collaborators?emails=eiusmod sed c&emails=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collaborators"
									],
									"query": [
										{
											"key": "emails",
											"value": "eiusmod sed c"
										},
										{
											"key": "emails",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "List of Collaborators",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/collaborators?emails=eiusmod sed c&emails=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collaborators"
									],
									"query": [
										{
											"key": "emails",
											"value": "eiusmod sed c"
										},
										{
											"key": "emails",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "List of Collaborators",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/collaborators?emails=eiusmod sed c&emails=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collaborators"
									],
									"query": [
										{
											"key": "emails",
											"value": "eiusmod sed c"
										},
										{
											"key": "emails",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "List of Collaborators",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/collaborators?emails=eiusmod sed c&emails=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collaborators"
									],
									"query": [
										{
											"key": "emails",
											"value": "eiusmod sed c"
										},
										{
											"key": "emails",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "update Collaborators",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/collaborators",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"collaborators"
							]
						},
						"description": "Update an existing Collaborator in the Ziqni system"
					},
					"response": [
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/collaborators",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collaborators"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "Accepted",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/collaborators",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collaborators"
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/collaborators",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collaborators"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/collaborators",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collaborators"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/collaborators",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collaborators"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/collaborators",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collaborators"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/collaborators",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collaborators"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/collaborators",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collaborators"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/collaborators",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collaborators"
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/collaborators",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collaborators"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "create Collaborators",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"email\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"addRoles\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"email\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"addRoles\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/collaborators",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"collaborators"
							]
						},
						"description": "Create a new Collaborator in the Ziqni"
					},
					"response": [
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"email\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"addRoles\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"email\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"addRoles\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/collaborators",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collaborators"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"email\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"addRoles\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"email\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"addRoles\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/collaborators",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collaborators"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"email\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"addRoles\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"email\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"addRoles\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/collaborators",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collaborators"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"email\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"addRoles\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"email\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"addRoles\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/collaborators",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collaborators"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"email\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"addRoles\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"email\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"addRoles\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/collaborators",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collaborators"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"email\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"addRoles\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"email\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"addRoles\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/collaborators",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collaborators"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"email\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"addRoles\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"email\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"addRoles\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/collaborators",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collaborators"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"email\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"addRoles\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"email\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"addRoles\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/collaborators",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collaborators"
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"email\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"addRoles\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"email\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"addRoles\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/collaborators",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collaborators"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "delete Collaborators",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/collaborators?emails=eiusmod sed c&emails=deserunt",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"collaborators"
							],
							"query": [
								{
									"key": "emails",
									"value": "eiusmod sed c",
									"description": "The list of user emails to search by"
								},
								{
									"key": "emails",
									"value": "deserunt",
									"description": "The list of user emails to search by"
								}
							]
						},
						"description": "Returns a list of Collaborators. This assumes that Users have first been uploaded via a POST request or web console"
					},
					"response": [
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/collaborators?emails=eiusmod sed c&emails=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collaborators"
									],
									"query": [
										{
											"key": "emails",
											"value": "eiusmod sed c"
										},
										{
											"key": "emails",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/collaborators?emails=eiusmod sed c&emails=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collaborators"
									],
									"query": [
										{
											"key": "emails",
											"value": "eiusmod sed c"
										},
										{
											"key": "emails",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/collaborators?emails=eiusmod sed c&emails=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collaborators"
									],
									"query": [
										{
											"key": "emails",
											"value": "eiusmod sed c"
										},
										{
											"key": "emails",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/collaborators?emails=eiusmod sed c&emails=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collaborators"
									],
									"query": [
										{
											"key": "emails",
											"value": "eiusmod sed c"
										},
										{
											"key": "emails",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/collaborators?emails=eiusmod sed c&emails=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collaborators"
									],
									"query": [
										{
											"key": "emails",
											"value": "eiusmod sed c"
										},
										{
											"key": "emails",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/collaborators?emails=eiusmod sed c&emails=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collaborators"
									],
									"query": [
										{
											"key": "emails",
											"value": "eiusmod sed c"
										},
										{
											"key": "emails",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/collaborators?emails=eiusmod sed c&emails=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collaborators"
									],
									"query": [
										{
											"key": "emails",
											"value": "eiusmod sed c"
										},
										{
											"key": "emails",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/collaborators?emails=eiusmod sed c&emails=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collaborators"
									],
									"query": [
										{
											"key": "emails",
											"value": "eiusmod sed c"
										},
										{
											"key": "emails",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/collaborators?emails=eiusmod sed c&emails=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collaborators"
									],
									"query": [
										{
											"key": "emails",
											"value": "eiusmod sed c"
										},
										{
											"key": "emails",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "NOT AVAILABLE IN CURRENT RELEASE",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/collaborators/query",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"collaborators",
								"query"
							]
						},
						"description": "Retrieve collaborators for the account"
					},
					"response": [
						{
							"name": "List of Collaborators",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/collaborators/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collaborators",
										"query"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "List of Collaborators",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/collaborators/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collaborators",
										"query"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "List of Collaborators",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/collaborators/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collaborators",
										"query"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "List of Collaborators",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/collaborators/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collaborators",
										"query"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "List of Collaborators",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/collaborators/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collaborators",
										"query"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "List of Collaborators",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/collaborators/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collaborators",
										"query"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "List of Collaborators",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/collaborators/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collaborators",
										"query"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "List of Collaborators",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/collaborators/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collaborators",
										"query"
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "List of Collaborators",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/collaborators/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collaborators",
										"query"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "NOT AVAILABLE IN CURRENT RELEASE",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/collaborators/delete",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"collaborators",
								"delete"
							]
						},
						"description": "Remove collaborators from account"
					},
					"response": [
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/collaborators/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collaborators",
										"delete"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/collaborators/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collaborators",
										"delete"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/collaborators/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collaborators",
										"delete"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/collaborators/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collaborators",
										"delete"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/collaborators/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collaborators",
										"delete"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/collaborators/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collaborators",
										"delete"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/collaborators/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collaborators",
										"delete"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/collaborators/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collaborators",
										"delete"
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/collaborators/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collaborators",
										"delete"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "get Available Roles For Collaborators",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/collaborators/available-roles",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"collaborators",
								"available-roles"
							]
						},
						"description": "Returns a list of Collaborators. This assumes that Users have first been uploaded via a POST request or web console"
					},
					"response": [
						{
							"name": "List of Collaborators",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/collaborators/available-roles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collaborators",
										"available-roles"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "List of Collaborators",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/collaborators/available-roles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collaborators",
										"available-roles"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "List of Collaborators",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/collaborators/available-roles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collaborators",
										"available-roles"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "List of Collaborators",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/collaborators/available-roles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collaborators",
										"available-roles"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "List of Collaborators",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/collaborators/available-roles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collaborators",
										"available-roles"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "List of Collaborators",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/collaborators/available-roles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collaborators",
										"available-roles"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "List of Collaborators",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/collaborators/available-roles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collaborators",
										"available-roles"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "List of Collaborators",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/collaborators/available-roles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collaborators",
										"available-roles"
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "List of Collaborators",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/collaborators/available-roles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"collaborators",
										"available-roles"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "rules",
			"item": [
				{
					"name": "get Rules",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rules?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rules"
							],
							"query": [
								{
									"key": "id",
									"value": "eiusmod sed c",
									"description": "The unique identifiers of the resources"
								},
								{
									"key": "id",
									"value": "deserunt",
									"description": "The unique identifiers of the resources"
								},
								{
									"key": "_limit",
									"value": "-48278460",
									"description": "Limit the returned total records found"
								},
								{
									"key": "_skip",
									"value": "-48278460",
									"description": "Skip the returned records found and return the next batch of records"
								}
							]
						},
						"description": "Returns a list of rules. This assumes that rules have first been created during achievement, competition or contest setup. The id is the ID of the entity the rules describe"
					},
					"response": [
						{
							"name": "A list of repositories and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rules?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rules"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of repositories and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rules?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rules"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of repositories and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rules?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rules"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of repositories and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rules?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rules"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of repositories and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rules?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rules"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of repositories and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rules?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rules"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of repositories and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rules?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rules"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of repositories and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rules?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rules"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of repositories and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rules?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rules"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "update Rules",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/rules",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rules"
							]
						},
						"description": "Update existing rules"
					},
					"response": [
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rules"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "Accepted",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rules"
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rules"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rules"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rules"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rules"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rules"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rules"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rules"
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rules",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rules"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "get Rule Schemas",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rules/schema?context=repr",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rules",
								"schema"
							],
							"query": [
								{
									"key": "context",
									"value": "repr",
									"description": "(Required) The context to retrieve, either achievement, competition or contest"
								}
							]
						},
						"description": "Returns a list of rules. This assumes that rules have first been created during achievement, competition or contest setup"
					},
					"response": [
						{
							"name": "A list of members and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rules/schema?context=repr",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rules",
										"schema"
									],
									"query": [
										{
											"key": "context",
											"value": "repr"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of members and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rules/schema?context=repr",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rules",
										"schema"
									],
									"query": [
										{
											"key": "context",
											"value": "repr"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of members and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rules/schema?context=repr",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rules",
										"schema"
									],
									"query": [
										{
											"key": "context",
											"value": "repr"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of members and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rules/schema?context=repr",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rules",
										"schema"
									],
									"query": [
										{
											"key": "context",
											"value": "repr"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of members and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rules/schema?context=repr",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rules",
										"schema"
									],
									"query": [
										{
											"key": "context",
											"value": "repr"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of members and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rules/schema?context=repr",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rules",
										"schema"
									],
									"query": [
										{
											"key": "context",
											"value": "repr"
										}
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of members and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rules/schema?context=repr",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rules",
										"schema"
									],
									"query": [
										{
											"key": "context",
											"value": "repr"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of members and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rules/schema?context=repr",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rules",
										"schema"
									],
									"query": [
										{
											"key": "context",
											"value": "repr"
										}
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of members and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rules/schema?context=repr",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rules",
										"schema"
									],
									"query": [
										{
											"key": "context",
											"value": "repr"
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "validate Rules",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/rules/validate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rules",
								"validate"
							]
						},
						"description": "Validate rules"
					},
					"response": [
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rules/validate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rules",
										"validate"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rules/validate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rules",
										"validate"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rules/validate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rules",
										"validate"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rules/validate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rules",
										"validate"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rules/validate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rules",
										"validate"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rules/validate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rules",
										"validate"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rules/validate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rules",
										"validate"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rules/validate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rules",
										"validate"
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rules/validate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rules",
										"validate"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "lookup Operands Rules",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"context\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"searchText\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"skip\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"limit\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"constraints\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"context\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"searchText\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"skip\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"limit\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"constraints\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/rules/operand-lookup",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rules",
								"operand-lookup"
							]
						},
						"description": "Search or get rule operand values"
					},
					"response": [
						{
							"name": "A list of rule operand lookup values and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"context\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"searchText\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"skip\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"limit\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"constraints\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"context\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"searchText\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"skip\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"limit\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"constraints\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rules/operand-lookup",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rules",
										"operand-lookup"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of rule operand lookup values and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"context\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"searchText\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"skip\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"limit\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"constraints\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"context\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"searchText\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"skip\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"limit\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"constraints\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rules/operand-lookup",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rules",
										"operand-lookup"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of rule operand lookup values and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"context\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"searchText\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"skip\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"limit\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"constraints\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"context\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"searchText\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"skip\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"limit\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"constraints\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rules/operand-lookup",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rules",
										"operand-lookup"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of rule operand lookup values and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"context\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"searchText\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"skip\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"limit\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"constraints\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"context\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"searchText\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"skip\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"limit\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"constraints\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rules/operand-lookup",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rules",
										"operand-lookup"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of rule operand lookup values and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"context\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"searchText\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"skip\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"limit\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"constraints\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"context\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"searchText\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"skip\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"limit\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"constraints\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rules/operand-lookup",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rules",
										"operand-lookup"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of rule operand lookup values and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"context\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"searchText\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"skip\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"limit\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"constraints\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"context\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"searchText\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"skip\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"limit\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"constraints\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rules/operand-lookup",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rules",
										"operand-lookup"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of rule operand lookup values and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"context\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"searchText\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"skip\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"limit\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"constraints\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"context\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"searchText\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"skip\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"limit\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"constraints\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rules/operand-lookup",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rules",
										"operand-lookup"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of rule operand lookup values and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"context\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"searchText\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"skip\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"limit\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"constraints\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"context\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"searchText\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"skip\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"limit\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"constraints\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rules/operand-lookup",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rules",
										"operand-lookup"
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of rule operand lookup values and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"context\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"searchText\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"skip\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"limit\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"constraints\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"context\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"searchText\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"skip\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"limit\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"constraints\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rules/operand-lookup",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rules",
										"operand-lookup"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "NOT AVAILABLE IN CURRENT RELEASE",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/rules/delete",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rules",
								"delete"
							]
						},
						"description": "Delete Rules from Ziqni database by unique Rules ID's or any other POST body parameters using the POST method"
					},
					"response": [
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rules/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rules",
										"delete"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rules/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rules",
										"delete"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rules/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rules",
										"delete"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rules/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rules",
										"delete"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rules/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rules",
										"delete"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rules/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rules",
										"delete"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rules/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rules",
										"delete"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rules/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rules",
										"delete"
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rules/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rules",
										"delete"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "get Rules By Query",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/rules/query",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rules",
								"query"
							]
						},
						"description": "Retrieve Rules from Ziqni database by unique Rewards ID's or any other POST body parameters using the POST method"
					},
					"response": [
						{
							"name": "A list of repositories and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rules/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rules",
										"query"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of repositories and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rules/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rules",
										"query"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of repositories and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rules/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rules",
										"query"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of repositories and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rules/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rules",
										"query"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of repositories and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rules/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rules",
										"query"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of repositories and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rules/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rules",
										"query"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of repositories and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rules/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rules",
										"query"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of repositories and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rules/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rules",
										"query"
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of repositories and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rules/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rules",
										"query"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "account-messages",
			"item": [
				{
					"name": "get Account Messages",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/account-messages?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"account-messages"
							],
							"query": [
								{
									"key": "id",
									"value": "eiusmod sed c",
									"description": "The unique identifiers of the resources"
								},
								{
									"key": "id",
									"value": "deserunt",
									"description": "The unique identifiers of the resources"
								},
								{
									"key": "_limit",
									"value": "-48278460",
									"description": "Limit the returned total records found"
								},
								{
									"key": "_skip",
									"value": "-48278460",
									"description": "Skip the returned records found and return the next batch of records"
								}
							]
						},
						"description": "Returns a list of Account Messages."
					},
					"response": [
						{
							"name": "A list of messages and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/account-messages?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account-messages"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of messages and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/account-messages?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account-messages"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of messages and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/account-messages?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account-messages"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of messages and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/account-messages?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account-messages"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of messages and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/account-messages?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account-messages"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of messages and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/account-messages?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account-messages"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of messages and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/account-messages?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account-messages"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of messages and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/account-messages?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account-messages"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of messages and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/account-messages?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account-messages"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "delete Account Messages",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/account-messages?id=eiusmod sed c&id=deserunt",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"account-messages"
							],
							"query": [
								{
									"key": "id",
									"value": "eiusmod sed c",
									"description": "The unique identifiers of the resources"
								},
								{
									"key": "id",
									"value": "deserunt",
									"description": "The unique identifiers of the resources"
								}
							]
						},
						"description": "Delete Account Messages for a given identifier specified"
					},
					"response": [
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/account-messages?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account-messages"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/account-messages?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account-messages"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/account-messages?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account-messages"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/account-messages?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account-messages"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/account-messages?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account-messages"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/account-messages?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account-messages"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/account-messages?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account-messages"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/account-messages?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account-messages"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/account-messages?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account-messages"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "delete Account Messages By Query",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/account-messages/delete",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"account-messages",
								"delete"
							]
						},
						"description": "Delete Account Messages from the system by query."
					},
					"response": [
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/account-messages/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account-messages",
										"delete"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/account-messages/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account-messages",
										"delete"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/account-messages/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account-messages",
										"delete"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/account-messages/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account-messages",
										"delete"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/account-messages/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account-messages",
										"delete"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/account-messages/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account-messages",
										"delete"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/account-messages/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account-messages",
										"delete"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/account-messages/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account-messages",
										"delete"
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/account-messages/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account-messages",
										"delete"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "get Account Messages By Query",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/account-messages/query",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"account-messages",
								"query"
							]
						},
						"description": "Retrieve Account Messages from the system by query."
					},
					"response": [
						{
							"name": "A list of messages and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/account-messages/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account-messages",
										"query"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of messages and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/account-messages/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account-messages",
										"query"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of messages and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/account-messages/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account-messages",
										"query"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of messages and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/account-messages/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account-messages",
										"query"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of messages and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/account-messages/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account-messages",
										"query"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of messages and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/account-messages/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account-messages",
										"query"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of messages and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/account-messages/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account-messages",
										"query"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of messages and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/account-messages/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account-messages",
										"query"
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of messages and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/account-messages/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account-messages",
										"query"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "NOT AVAILABLE IN CURRENT RELEASE",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/account-messages/state",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"account-messages",
								"state"
							]
						},
						"description": "Update the Account Message status"
					},
					"response": [
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/account-messages/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account-messages",
										"state"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "Accepted",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/account-messages/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account-messages",
										"state"
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/account-messages/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account-messages",
										"state"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/account-messages/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account-messages",
										"state"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/account-messages/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account-messages",
										"state"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/account-messages/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account-messages",
										"state"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/account-messages/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account-messages",
										"state"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/account-messages/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account-messages",
										"state"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/account-messages/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account-messages",
										"state"
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/account-messages/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account-messages",
										"state"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "member-messages",
			"item": [
				{
					"name": "get Member Messages",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/member-messages?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"member-messages"
							],
							"query": [
								{
									"key": "id",
									"value": "eiusmod sed c",
									"description": "The unique identifiers of the resources"
								},
								{
									"key": "id",
									"value": "deserunt",
									"description": "The unique identifiers of the resources"
								},
								{
									"key": "_limit",
									"value": "-48278460",
									"description": "Limit the returned total records found"
								},
								{
									"key": "_skip",
									"value": "-48278460",
									"description": "Skip the returned records found and return the next batch of records"
								}
							]
						},
						"description": "Returns a list of Member Messages. This assumes that Messages have first been uploaded via a POST request or web console"
					},
					"response": [
						{
							"name": "A list of messages and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/member-messages?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"member-messages"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of messages and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/member-messages?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"member-messages"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of messages and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/member-messages?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"member-messages"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of messages and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/member-messages?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"member-messages"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of messages and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/member-messages?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"member-messages"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of messages and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/member-messages?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"member-messages"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of messages and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/member-messages?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"member-messages"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of messages and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/member-messages?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"member-messages"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of messages and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/member-messages?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"member-messages"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "create Member Messages",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/member-messages",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"member-messages"
							]
						},
						"description": "Create Member Messages in the Ziqni database"
					},
					"response": [
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/member-messages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"member-messages"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/member-messages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"member-messages"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/member-messages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"member-messages"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/member-messages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"member-messages"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/member-messages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"member-messages"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/member-messages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"member-messages"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/member-messages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"member-messages"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/member-messages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"member-messages"
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/member-messages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"member-messages"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "delete Member Messages",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/member-messages?id=eiusmod sed c&id=deserunt",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"member-messages"
							],
							"query": [
								{
									"key": "id",
									"value": "eiusmod sed c",
									"description": "The unique identifiers of the resources"
								},
								{
									"key": "id",
									"value": "deserunt",
									"description": "The unique identifiers of the resources"
								}
							]
						},
						"description": "Delete Member Messages for a given identifier specified"
					},
					"response": [
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/member-messages?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"member-messages"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/member-messages?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"member-messages"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/member-messages?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"member-messages"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/member-messages?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"member-messages"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/member-messages?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"member-messages"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/member-messages?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"member-messages"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/member-messages?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"member-messages"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/member-messages?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"member-messages"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/member-messages?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"member-messages"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "delete Member Messages By Query",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/member-messages/delete",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"member-messages",
								"delete"
							]
						},
						"description": "Delete Member Messages by query."
					},
					"response": [
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/member-messages/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"member-messages",
										"delete"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/member-messages/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"member-messages",
										"delete"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/member-messages/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"member-messages",
										"delete"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/member-messages/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"member-messages",
										"delete"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/member-messages/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"member-messages",
										"delete"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/member-messages/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"member-messages",
										"delete"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/member-messages/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"member-messages",
										"delete"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/member-messages/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"member-messages",
										"delete"
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/member-messages/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"member-messages",
										"delete"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "get Member Messages By Query",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/member-messages/query",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"member-messages",
								"query"
							]
						},
						"description": "Retrieve Member Messages from Ziqni database by unique message ID's or any other POST body parameters using the POST method"
					},
					"response": [
						{
							"name": "A list of messages and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/member-messages/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"member-messages",
										"query"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of messages and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/member-messages/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"member-messages",
										"query"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of messages and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/member-messages/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"member-messages",
										"query"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of messages and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/member-messages/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"member-messages",
										"query"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of messages and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/member-messages/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"member-messages",
										"query"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of messages and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/member-messages/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"member-messages",
										"query"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of messages and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/member-messages/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"member-messages",
										"query"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of messages and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/member-messages/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"member-messages",
										"query"
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of messages and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/member-messages/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"member-messages",
										"query"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "NOT AVAILABLE IN CURRENT RELEASE",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/member-messages/state",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"member-messages",
								"state"
							]
						},
						"description": "Update the Member Message status"
					},
					"response": [
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/member-messages/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"member-messages",
										"state"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "Accepted",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/member-messages/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"member-messages",
										"state"
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/member-messages/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"member-messages",
										"state"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/member-messages/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"member-messages",
										"state"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/member-messages/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"member-messages",
										"state"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/member-messages/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"member-messages",
										"state"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/member-messages/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"member-messages",
										"state"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/member-messages/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"member-messages",
										"state"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/member-messages/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"member-messages",
										"state"
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/member-messages/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"member-messages",
										"state"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "notifications",
			"item": [
				{
					"name": "get Notifications",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/notifications?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"notifications"
							],
							"query": [
								{
									"key": "id",
									"value": "eiusmod sed c",
									"description": "The unique identifiers of the resources"
								},
								{
									"key": "id",
									"value": "deserunt",
									"description": "The unique identifiers of the resources"
								},
								{
									"key": "_limit",
									"value": "-48278460",
									"description": "Limit the returned total records found"
								},
								{
									"key": "_skip",
									"value": "-48278460",
									"description": "Skip the returned records found and return the next batch of records"
								}
							]
						},
						"description": "Returns a list of Notification Messages. This assumes that Messages have first been uploaded via a POST request or web console"
					},
					"response": [
						{
							"name": "A list of messages and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/notifications?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of messages and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/notifications?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of messages and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/notifications?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of messages and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/notifications?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of messages and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/notifications?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of messages and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/notifications?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of messages and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/notifications?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of messages and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/notifications?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of messages and/or errors",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/notifications?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "create Notifications",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/notifications",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"notifications"
							]
						},
						"description": "Create Notification Messages in the Ziqni database"
					},
					"response": [
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/notifications",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/notifications",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/notifications",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/notifications",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/notifications",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/notifications",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/notifications",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/notifications",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications"
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/notifications",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "delete Notifications",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/notifications?id=eiusmod sed c&id=deserunt",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"notifications"
							],
							"query": [
								{
									"key": "id",
									"value": "eiusmod sed c",
									"description": "The unique identifiers of the resources"
								},
								{
									"key": "id",
									"value": "deserunt",
									"description": "The unique identifiers of the resources"
								}
							]
						},
						"description": "Delete Notification Messages for a given identifier specified"
					},
					"response": [
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/notifications?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/notifications?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/notifications?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/notifications?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/notifications?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/notifications?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/notifications?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/notifications?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/notifications?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "delete Notifications By Query",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/notifications/delete",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"notifications",
								"delete"
							]
						},
						"description": "Delete Notification Messages from Ziqni database by unique message ID's or any other POST body parameters using the POST method"
					},
					"response": [
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/notifications/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications",
										"delete"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/notifications/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications",
										"delete"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/notifications/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications",
										"delete"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/notifications/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications",
										"delete"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/notifications/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications",
										"delete"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/notifications/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications",
										"delete"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/notifications/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications",
										"delete"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/notifications/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications",
										"delete"
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/notifications/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications",
										"delete"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "get Notifications By Query",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/notifications/query",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"notifications",
								"query"
							]
						},
						"description": "Retrieve Notification Messages from Ziqni database by unique message ID's or any other POST body parameters using the POST method"
					},
					"response": [
						{
							"name": "A list of messages and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/notifications/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications",
										"query"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of messages and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/notifications/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications",
										"query"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of messages and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/notifications/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications",
										"query"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of messages and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/notifications/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications",
										"query"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of messages and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/notifications/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications",
										"query"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of messages and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/notifications/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications",
										"query"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of messages and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/notifications/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications",
										"query"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of messages and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/notifications/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications",
										"query"
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of messages and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/notifications/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications",
										"query"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "NOT AVAILABLE IN CURRENT RELEASE",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/notifications/state",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"notifications",
								"state"
							]
						},
						"description": "Update the Notification Message status"
					},
					"response": [
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/notifications/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications",
										"state"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "Accepted",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/notifications/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications",
										"state"
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/notifications/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications",
										"state"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/notifications/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications",
										"state"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/notifications/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications",
										"state"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/notifications/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications",
										"state"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/notifications/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications",
										"state"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/notifications/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications",
										"state"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/notifications/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications",
										"state"
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/notifications/state",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications",
										"state"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "compute-engines",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "get Compute Engines By Id",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/compute-engines/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"compute-engines",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "repr",
											"description": "(Required) Unique identifier of the resource"
										}
									]
								},
								"description": "Returns an Compute Engine by identifier provided. This assumes that compute engines have first been created via a POST request or web console"
							},
							"response": [
								{
									"name": "List of Compute Engines",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/compute-engines/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"compute-engines",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "List of Compute Engines",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/compute-engines/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"compute-engines",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "List of Compute Engines",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/compute-engines/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"compute-engines",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "List of Compute Engines",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/compute-engines/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"compute-engines",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "List of Compute Engines",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/compute-engines/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"compute-engines",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "List of Compute Engines",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/compute-engines/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"compute-engines",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Request Entity Too Large",
									"code": 413,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "List of Compute Engines",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/compute-engines/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"compute-engines",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "List of Compute Engines",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/compute-engines/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"compute-engines",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Not Implemented",
									"code": 501,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "List of Compute Engines",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/compute-engines/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"compute-engines",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "delete Compute Engines By Id",
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/compute-engines/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"compute-engines",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "repr",
											"description": "(Required) Unique identifier of the resource"
										}
									]
								},
								"description": "Delete the Compute Engine for a given identifier specified"
							},
							"response": [
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/compute-engines/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"compute-engines",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/compute-engines/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"compute-engines",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/compute-engines/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"compute-engines",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/compute-engines/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"compute-engines",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/compute-engines/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"compute-engines",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/compute-engines/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"compute-engines",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Request Entity Too Large",
									"code": 413,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/compute-engines/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"compute-engines",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/compute-engines/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"compute-engines",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Not Implemented",
									"code": 501,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								},
								{
									"name": "A list of outcomes and/or errors",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/compute-engines/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"compute-engines",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "repr",
													"description": "(Required) Unique identifier of the resource"
												}
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "get Compute Engines",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/compute-engines?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"compute-engines"
							],
							"query": [
								{
									"key": "id",
									"value": "eiusmod sed c",
									"description": "The unique identifiers of the resources"
								},
								{
									"key": "id",
									"value": "deserunt",
									"description": "The unique identifiers of the resources"
								},
								{
									"key": "_limit",
									"value": "-48278460",
									"description": "Limit the returned total records found"
								},
								{
									"key": "_skip",
									"value": "-48278460",
									"description": "Skip the returned records found and return the next batch of records"
								}
							]
						},
						"description": "Returns a list of Compute Engines. This assumes that api keys have first been created via a POST request or web console"
					},
					"response": [
						{
							"name": "List of Compute Engines",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/compute-engines?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"compute-engines"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "List of Compute Engines",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/compute-engines?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"compute-engines"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "List of Compute Engines",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/compute-engines?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"compute-engines"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "List of Compute Engines",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/compute-engines?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"compute-engines"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "List of Compute Engines",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/compute-engines?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"compute-engines"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "List of Compute Engines",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/compute-engines?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"compute-engines"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "List of Compute Engines",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/compute-engines?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"compute-engines"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "List of Compute Engines",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/compute-engines?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"compute-engines"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "List of Compute Engines",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/compute-engines?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"compute-engines"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "update Compute Engines",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {},\n    \"description\": \"ipsum esse magna\",\n    \"version\": 57619108,\n    \"name\": \"ut dolor\",\n    \"uptime\": -5982558,\n    \"statistics\": {},\n    \"lastKnownStatusCode\": 41557193,\n    \"addConstraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"removeConstraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/compute-engines",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"compute-engines"
							]
						},
						"description": "Update an existing Compute Engine in the Ziqni system"
					},
					"response": [
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {},\n    \"description\": \"elit anim ad mollit adipisicing\",\n    \"version\": -36743536,\n    \"name\": \"dolore in in\",\n    \"uptime\": 95864387,\n    \"statistics\": {},\n    \"lastKnownStatusCode\": -59184682,\n    \"addConstraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"removeConstraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/compute-engines",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"compute-engines"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {},\n    \"description\": \"elit anim ad mollit adipisicing\",\n    \"version\": -36743536,\n    \"name\": \"dolore in in\",\n    \"uptime\": 95864387,\n    \"statistics\": {},\n    \"lastKnownStatusCode\": -59184682,\n    \"addConstraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"removeConstraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/compute-engines",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"compute-engines"
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {},\n    \"description\": \"elit anim ad mollit adipisicing\",\n    \"version\": -36743536,\n    \"name\": \"dolore in in\",\n    \"uptime\": 95864387,\n    \"statistics\": {},\n    \"lastKnownStatusCode\": -59184682,\n    \"addConstraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"removeConstraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/compute-engines",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"compute-engines"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {},\n    \"description\": \"elit anim ad mollit adipisicing\",\n    \"version\": -36743536,\n    \"name\": \"dolore in in\",\n    \"uptime\": 95864387,\n    \"statistics\": {},\n    \"lastKnownStatusCode\": -59184682,\n    \"addConstraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"removeConstraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/compute-engines",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"compute-engines"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {},\n    \"description\": \"elit anim ad mollit adipisicing\",\n    \"version\": -36743536,\n    \"name\": \"dolore in in\",\n    \"uptime\": 95864387,\n    \"statistics\": {},\n    \"lastKnownStatusCode\": -59184682,\n    \"addConstraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"removeConstraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/compute-engines",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"compute-engines"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {},\n    \"description\": \"elit anim ad mollit adipisicing\",\n    \"version\": -36743536,\n    \"name\": \"dolore in in\",\n    \"uptime\": 95864387,\n    \"statistics\": {},\n    \"lastKnownStatusCode\": -59184682,\n    \"addConstraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"removeConstraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/compute-engines",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"compute-engines"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {},\n    \"description\": \"elit anim ad mollit adipisicing\",\n    \"version\": -36743536,\n    \"name\": \"dolore in in\",\n    \"uptime\": 95864387,\n    \"statistics\": {},\n    \"lastKnownStatusCode\": -59184682,\n    \"addConstraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"removeConstraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/compute-engines",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"compute-engines"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {},\n    \"description\": \"elit anim ad mollit adipisicing\",\n    \"version\": -36743536,\n    \"name\": \"dolore in in\",\n    \"uptime\": 95864387,\n    \"statistics\": {},\n    \"lastKnownStatusCode\": -59184682,\n    \"addConstraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"removeConstraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/compute-engines",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"compute-engines"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {},\n    \"description\": \"elit anim ad mollit adipisicing\",\n    \"version\": -36743536,\n    \"name\": \"dolore in in\",\n    \"uptime\": 95864387,\n    \"statistics\": {},\n    \"lastKnownStatusCode\": -59184682,\n    \"addConstraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"removeConstraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/compute-engines",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"compute-engines"
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {},\n    \"description\": \"elit anim ad mollit adipisicing\",\n    \"version\": -36743536,\n    \"name\": \"dolore in in\",\n    \"uptime\": 95864387,\n    \"statistics\": {},\n    \"lastKnownStatusCode\": -59184682,\n    \"addConstraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"removeConstraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/compute-engines",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"compute-engines"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "create Compute Engines",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"constraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {},\n    \"description\": \"dolor ad incididunt\",\n    \"version\": 50741254,\n    \"name\": \"incididunt ut nulla proident dolore\",\n    \"uptime\": 55034353,\n    \"statistics\": {},\n    \"lastKnownStatusCode\": 62702245\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/compute-engines",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"compute-engines"
							]
						},
						"description": "Create a new Compute Engine in the Ziqni system"
					},
					"response": [
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"constraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {},\n    \"description\": \"in commodo\",\n    \"version\": 40827607,\n    \"name\": \"dolor consequat sit\",\n    \"uptime\": -34045856,\n    \"statistics\": {},\n    \"lastKnownStatusCode\": 58082688\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/compute-engines",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"compute-engines"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"constraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {},\n    \"description\": \"in commodo\",\n    \"version\": 40827607,\n    \"name\": \"dolor consequat sit\",\n    \"uptime\": -34045856,\n    \"statistics\": {},\n    \"lastKnownStatusCode\": 58082688\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/compute-engines",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"compute-engines"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"constraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {},\n    \"description\": \"in commodo\",\n    \"version\": 40827607,\n    \"name\": \"dolor consequat sit\",\n    \"uptime\": -34045856,\n    \"statistics\": {},\n    \"lastKnownStatusCode\": 58082688\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/compute-engines",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"compute-engines"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"constraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {},\n    \"description\": \"in commodo\",\n    \"version\": 40827607,\n    \"name\": \"dolor consequat sit\",\n    \"uptime\": -34045856,\n    \"statistics\": {},\n    \"lastKnownStatusCode\": 58082688\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/compute-engines",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"compute-engines"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"constraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {},\n    \"description\": \"in commodo\",\n    \"version\": 40827607,\n    \"name\": \"dolor consequat sit\",\n    \"uptime\": -34045856,\n    \"statistics\": {},\n    \"lastKnownStatusCode\": 58082688\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/compute-engines",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"compute-engines"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"constraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {},\n    \"description\": \"in commodo\",\n    \"version\": 40827607,\n    \"name\": \"dolor consequat sit\",\n    \"uptime\": -34045856,\n    \"statistics\": {},\n    \"lastKnownStatusCode\": 58082688\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/compute-engines",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"compute-engines"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"constraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {},\n    \"description\": \"in commodo\",\n    \"version\": 40827607,\n    \"name\": \"dolor consequat sit\",\n    \"uptime\": -34045856,\n    \"statistics\": {},\n    \"lastKnownStatusCode\": 58082688\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/compute-engines",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"compute-engines"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"constraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {},\n    \"description\": \"in commodo\",\n    \"version\": 40827607,\n    \"name\": \"dolor consequat sit\",\n    \"uptime\": -34045856,\n    \"statistics\": {},\n    \"lastKnownStatusCode\": 58082688\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/compute-engines",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"compute-engines"
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"constraints\": [\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    ],\n    \"customFields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {},\n    \"description\": \"in commodo\",\n    \"version\": 40827607,\n    \"name\": \"dolor consequat sit\",\n    \"uptime\": -34045856,\n    \"statistics\": {},\n    \"lastKnownStatusCode\": 58082688\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/compute-engines",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"compute-engines"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "NOT AVAILABLE IN CURRENT RELEASE",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/compute-engines/delete",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"compute-engines",
								"delete"
							]
						},
						"description": "Delete an Compute Engine or a list of Compute Engines from Ziqni by query"
					},
					"response": [
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/compute-engines/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"compute-engines",
										"delete"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/compute-engines/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"compute-engines",
										"delete"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/compute-engines/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"compute-engines",
										"delete"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/compute-engines/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"compute-engines",
										"delete"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/compute-engines/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"compute-engines",
										"delete"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/compute-engines/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"compute-engines",
										"delete"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/compute-engines/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"compute-engines",
										"delete"
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/compute-engines/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"compute-engines",
										"delete"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "get Compute Engines By Query",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/compute-engines/query",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"compute-engines",
								"query"
							]
						},
						"description": "Retrieve an Compute Engine or a list of Compute Engines by query"
					},
					"response": [
						{
							"name": "List of Compute Engines",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/compute-engines/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"compute-engines",
										"query"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "List of Compute Engines",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/compute-engines/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"compute-engines",
										"query"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "List of Compute Engines",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/compute-engines/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"compute-engines",
										"query"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "List of Compute Engines",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/compute-engines/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"compute-engines",
										"query"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "List of Compute Engines",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/compute-engines/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"compute-engines",
										"query"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "List of Compute Engines",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/compute-engines/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"compute-engines",
										"query"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "List of Compute Engines",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/compute-engines/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"compute-engines",
										"query"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "List of Compute Engines",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/compute-engines/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"compute-engines",
										"query"
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "List of Compute Engines",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/compute-engines/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"compute-engines",
										"query"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1,\n  \"skip\": 0,\n  \"limit\": 100\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "translations",
			"item": [
				{
					"name": "get Translations",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/translations?id=VfWNB38BmfhYfPmMxMu-&id=VvWNB38BmfhYfPmMxMu-&_skip=0&_limit=20&id=V_WNB38BmfhYfPmMxMu-",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"translations"
							],
							"query": [
								{
									"key": "id",
									"value": "VfWNB38BmfhYfPmMxMu-",
									"description": "The unique identifiers of the resources"
								},
								{
									"key": "id",
									"value": "VvWNB38BmfhYfPmMxMu-",
									"description": "The unique identifiers of the resources"
								},
								{
									"key": "_skip",
									"value": "0",
									"description": "Skip the returned records found and return the next batch of records"
								},
								{
									"key": "_limit",
									"value": "20",
									"description": "Limit the returned total records found"
								},
								{
									"key": "id",
									"value": "V_WNB38BmfhYfPmMxMu-",
									"description": "The unique identifiers of the resources"
								}
							]
						},
						"description": "Returns a list of translations. This assumes that rules have first been created during achievement, competition or contest setup. The id is the ID of the entity the translations describe"
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/translations?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"translations"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n },\n \"results\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"errors\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ]\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/translations?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"translations"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n },\n \"results\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"errors\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ]\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/translations?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"translations"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n },\n \"results\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"errors\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ]\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/translations?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"translations"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n },\n \"results\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"errors\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ]\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/translations?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"translations"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n },\n \"results\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"errors\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ]\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/translations?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"translations"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n },\n \"results\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"errors\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ]\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/translations?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"translations"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n },\n \"results\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"errors\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ]\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/translations?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"translations"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n },\n \"results\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"errors\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ]\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/translations?id=eiusmod sed c&id=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"translations"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n },\n \"results\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"errors\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "update Translations",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"id\": \"V_WNB38BmfhYfPmMxMu-\",\n        \"translations\": [{\n            \"fieldName\": \"name\",\n            \"text\": \"name\"\n        }]\n    },\n    {\n        \"id\": \"VvWNB38BmfhYfPmMxMu-\",\n        \"translations\": [{\n            \"fieldName\": \"name\",\n            \"text\": \"name\"\n        }]\n    },\n    {\n        \"id\": \"VfWNB38BmfhYfPmMxMu-\",\n        \"translations\": [{\n            \"fieldName\": \"name\",\n            \"text\": \"name\"\n        }]\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/translations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"translations"
							]
						},
						"description": "Update existing translations"
					},
					"response": [
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/translations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"translations"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "Accepted",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/translations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"translations"
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/translations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"translations"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/translations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"translations"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/translations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"translations"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/translations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"translations"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/translations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"translations"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/translations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"translations"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/translations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"translations"
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/translations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"translations"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "creating a translation",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"languageId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"translations\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entityId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entityType\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"languageKey\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"languageId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"translations\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entityId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entityType\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"languageKey\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/translations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"translations"
							]
						},
						"description": "Create a new Translation in the Ziqni system"
					},
					"response": [
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"languageId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"translations\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entityId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entityType\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"languageKey\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"languageId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"translations\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entityId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entityType\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"languageKey\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/translations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"translations"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"languageId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"translations\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entityId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entityType\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"languageKey\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"languageId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"translations\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entityId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entityType\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"languageKey\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/translations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"translations"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"languageId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"translations\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entityId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entityType\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"languageKey\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"languageId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"translations\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entityId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entityType\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"languageKey\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/translations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"translations"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"languageId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"translations\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entityId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entityType\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"languageKey\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"languageId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"translations\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entityId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entityType\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"languageKey\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/translations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"translations"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"languageId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"translations\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entityId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entityType\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"languageKey\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"languageId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"translations\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entityId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entityType\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"languageKey\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/translations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"translations"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"languageId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"translations\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entityId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entityType\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"languageKey\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"languageId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"translations\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entityId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entityType\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"languageKey\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/translations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"translations"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"languageId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"translations\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entityId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entityType\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"languageKey\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"languageId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"translations\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entityId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entityType\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"languageKey\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/translations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"translations"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"languageId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"translations\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entityId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entityType\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"languageKey\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"languageId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"translations\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entityId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entityType\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"languageKey\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/translations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"translations"
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"languageId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"translations\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entityId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entityType\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"languageKey\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    },\n    {\n        \"languageId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"translations\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entityId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"entityType\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"languageKey\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/translations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"translations"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "delete Translations",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/translations?id=eiusmod sed c&id=deserunt",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"translations"
							],
							"query": [
								{
									"key": "id",
									"value": "eiusmod sed c",
									"description": "The unique identifiers of the resources"
								},
								{
									"key": "id",
									"value": "deserunt",
									"description": "The unique identifiers of the resources"
								}
							]
						},
						"description": "Delete the Translations for a given identifier specified"
					},
					"response": [
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/translations?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"translations"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/translations?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"translations"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/translations?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"translations"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/translations?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"translations"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/translations?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"translations"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/translations?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"translations"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/translations?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"translations"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/translations?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"translations"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/translations?id=eiusmod sed c&id=deserunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"translations"
									],
									"query": [
										{
											"key": "id",
											"value": "eiusmod sed c"
										},
										{
											"key": "id",
											"value": "deserunt"
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "get Translations By Entity Id",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/translations/find-by-entity-id?refIds=eiusmod sed c&refIds=deserunt&_limit=-48278460&_skip=-48278460",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"translations",
								"find-by-entity-id"
							],
							"query": [
								{
									"key": "refIds",
									"value": "eiusmod sed c",
									"description": "The reference ids  of the resources"
								},
								{
									"key": "refIds",
									"value": "deserunt",
									"description": "The reference ids  of the resources"
								},
								{
									"key": "_limit",
									"value": "-48278460",
									"description": "Limit the returned total records found"
								},
								{
									"key": "_skip",
									"value": "-48278460",
									"description": "Skip the returned records found and return the next batch of records"
								}
							]
						},
						"description": "Returns a list of Translations. This assumes that translations have first been uploaded via a POST request or web console"
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/translations/find-by-entity-id?refIds=eiusmod sed c&refIds=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"translations",
										"find-by-entity-id"
									],
									"query": [
										{
											"key": "refIds",
											"value": "eiusmod sed c"
										},
										{
											"key": "refIds",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n },\n \"results\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"errors\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ]\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/translations/find-by-entity-id?refIds=eiusmod sed c&refIds=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"translations",
										"find-by-entity-id"
									],
									"query": [
										{
											"key": "refIds",
											"value": "eiusmod sed c"
										},
										{
											"key": "refIds",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n },\n \"results\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"errors\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ]\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/translations/find-by-entity-id?refIds=eiusmod sed c&refIds=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"translations",
										"find-by-entity-id"
									],
									"query": [
										{
											"key": "refIds",
											"value": "eiusmod sed c"
										},
										{
											"key": "refIds",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n },\n \"results\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"errors\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ]\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/translations/find-by-entity-id?refIds=eiusmod sed c&refIds=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"translations",
										"find-by-entity-id"
									],
									"query": [
										{
											"key": "refIds",
											"value": "eiusmod sed c"
										},
										{
											"key": "refIds",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n },\n \"results\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"errors\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ]\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/translations/find-by-entity-id?refIds=eiusmod sed c&refIds=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"translations",
										"find-by-entity-id"
									],
									"query": [
										{
											"key": "refIds",
											"value": "eiusmod sed c"
										},
										{
											"key": "refIds",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n },\n \"results\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"errors\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ]\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/translations/find-by-entity-id?refIds=eiusmod sed c&refIds=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"translations",
										"find-by-entity-id"
									],
									"query": [
										{
											"key": "refIds",
											"value": "eiusmod sed c"
										},
										{
											"key": "refIds",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n },\n \"results\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"errors\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ]\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/translations/find-by-entity-id?refIds=eiusmod sed c&refIds=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"translations",
										"find-by-entity-id"
									],
									"query": [
										{
											"key": "refIds",
											"value": "eiusmod sed c"
										},
										{
											"key": "refIds",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n },\n \"results\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"errors\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ]\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/translations/find-by-entity-id?refIds=eiusmod sed c&refIds=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"translations",
										"find-by-entity-id"
									],
									"query": [
										{
											"key": "refIds",
											"value": "eiusmod sed c"
										},
										{
											"key": "refIds",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n },\n \"results\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"errors\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ]\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/translations/find-by-entity-id?refIds=eiusmod sed c&refIds=deserunt&_limit=-48278460&_skip=-48278460",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"translations",
										"find-by-entity-id"
									],
									"query": [
										{
											"key": "refIds",
											"value": "eiusmod sed c"
										},
										{
											"key": "refIds",
											"value": "deserunt"
										},
										{
											"key": "_limit",
											"value": "-48278460"
										},
										{
											"key": "_skip",
											"value": "-48278460"
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n },\n \"results\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"errors\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "NOT AVAILABLE IN CURRENT RELEASE",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/translations/delete",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"translations",
								"delete"
							]
						},
						"description": "Delete a Translation or a list of Translations from Ziqni by unique Translation ID's or any other POST body parameters using the POST method"
					},
					"response": [
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/translations/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"translations",
										"delete"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/translations/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"translations",
										"delete"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/translations/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"translations",
										"delete"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/translations/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"translations",
										"delete"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/translations/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"translations",
										"delete"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/translations/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"translations",
										"delete"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/translations/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"translations",
										"delete"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/translations/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"translations",
										"delete"
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						},
						{
							"name": "A list of outcomes and/or errors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/translations/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"translations",
										"delete"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"resultCount\": 0,\n  \"errorCount\": 1\n },\n \"results\": [],\n \"errors\": [\n  {\n   \"errorCode\": 1007,\n   \"message\": \"The error was caused by an invalid ID being submitted\",\n   \"detail\": []\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "get Translations By Query",
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/translations/query",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"translations",
								"query"
							]
						},
						"description": "Retrieve a Translation or a list of Translations from Ziqni by unique Translation ID's or any other POST body parameters using the POST method"
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/translations/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"translations",
										"query"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n },\n \"results\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"errors\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ]\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/translations/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"translations",
										"query"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n },\n \"results\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"errors\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ]\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/translations/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"translations",
										"query"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n },\n \"results\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"errors\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ]\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/translations/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"translations",
										"query"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n },\n \"results\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"errors\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ]\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/translations/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"translations",
										"query"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n },\n \"results\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"errors\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ]\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/translations/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"translations",
										"query"
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n },\n \"results\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"errors\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ]\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/translations/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"translations",
										"query"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n },\n \"results\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"errors\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ]\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/translations/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"translations",
										"query"
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n },\n \"results\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"errors\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ]\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"must\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"mustNot\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"should\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValues\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"gte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"gt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lte\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"lt\": [\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"range\": [\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        },\n        {\n            \"queryField\": \"some text\",\n            \"gt\": \"some text\",\n            \"lt\": \"some text\",\n            \"constraints\": [\n                \"some text\",\n                \"some text\"\n            ]\n        }\n    ],\n    \"sortBy\": [\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Desc\"\n        },\n        {\n            \"queryField\": \"some text\",\n            \"order\": \"Asc\"\n        }\n    ],\n    \"multiFields\": [\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        },\n        {\n            \"queryFields\": [\n                \"some text\",\n                \"some text\"\n            ],\n            \"queryValue\": \"some text\"\n        }\n    ],\n    \"includeFields\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"hasNoValue\": [\n        \"some text\",\n        \"some text\"\n    ],\n    \"shouldMatch\": 10,\n    \"skip\": 5,\n    \"limit\": 23,\n    \"constraints\": [\n        \"some text\",\n        \"some text\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/translations/query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"translations",
										"query"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"meta\": {\n  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n },\n \"results\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ],\n \"errors\": [\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  {\n   \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  }\n ]\n}"
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "oauth2",
		"oauth2": [
			{
				"key": "redirect_uri",
				"value": "https://{{ziqni_client_id}}",
				"type": "string"
			},
			{
				"key": "tokenName",
				"value": "{{ziqni_token_name}}",
				"type": "string"
			},
			{
				"key": "challengeAlgorithm",
				"value": "S256",
				"type": "string"
			},
			{
				"key": "scope",
				"value": "openid",
				"type": "string"
			},
			{
				"key": "grant_type",
				"value": "authorization_code",
				"type": "string"
			},
			{
				"key": "clientId",
				"value": "{{ziqni_client_id}}",
				"type": "string"
			},
			{
				"key": "authUrl",
				"value": "{{ziqni_auth_url}}",
				"type": "string"
			},
			{
				"key": "addTokenTo",
				"value": "header",
				"type": "string"
			},
			{
				"key": "client_authentication",
				"value": "header",
				"type": "string"
			},
			{
				"key": "accessTokenUrl",
				"value": "{{ziqni_access_token_url}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://api.ziqni.com"
		},
		{
			"key": "defaultLimit",
			"value": "20"
		},
		{
			"key": "defaultSkip",
			"value": "0"
		},
		{
			"key": "productName0",
			"value": ""
		},
		{
			"key": "productRefId0",
			"value": ""
		},
		{
			"key": "productName1",
			"value": ""
		},
		{
			"key": "productRefId1",
			"value": ""
		},
		{
			"key": "productId0",
			"value": "IvI3QX8BbTIZytriJxTW"
		},
		{
			"key": "productId1",
			"value": ""
		},
		{
			"key": "memberId0",
			"value": "_BOLMX8BCZoo-hl22zdC"
		},
		{
			"key": "memberId1",
			"value": "_ROLMX8BCZoo-hl22zdG"
		},
		{
			"key": "ziqni_token_name",
			"value": "Ziqni token"
		},
		{
			"key": "ziqni_client_id",
			"value": "first-space.ziqni.io"
		},
		{
			"key": "ziqni_auth_url",
			"value": "https://identity.ziqni.com/auth/realms/ziqni/protocol/openid-connect/auth"
		},
		{
			"key": "ziqni_access_token_url",
			"value": "https://identity.ziqni.com/auth/realms/ziqni/protocol/openid-connect/token"
		},
		{
			"key": "memberRefId0",
			"value": "10001"
		},
		{
			"key": "memberRefId1",
			"value": "10002"
		},
		{
			"key": "customFieldId0",
			"value": "40WqSn4BfzuKNskezjgw"
		},
		{
			"key": "customFieldId1",
			"value": "-xNdMX8BCZoo-hl2pTfG"
		},
		{
			"key": "memberName0",
			"value": ""
		},
		{
			"key": "customFieldKey0",
			"value": "test_custom_field_key"
		},
		{
			"key": "tagId0",
			"value": "IPIuQX8BbTIZytrioRQO"
		},
		{
			"key": "apiKey0",
			"value": "HfIkQX8BbTIZytriRhQz"
		},
		{
			"key": "apiKey1",
			"value": "HvIkQX8BbTIZytri_hRC"
		},
		{
			"key": "apiKeyDescription0",
			"value": "Test description"
		},
		{
			"key": "tagId1",
			"value": "IfIuQX8BbTIZytrioRQa"
		},
		{
			"key": "tagKey0",
			"value": ""
		},
		{
			"key": "rewardTypeId0",
			"value": "CEljJn8BriDY3lSTj53w"
		},
		{
			"key": "rewardTypeId1",
			"value": "CklmJn8BriDY3lSTZp3I"
		},
		{
			"key": "rewardTypeKey0",
			"value": "key23"
		},
		{
			"key": "rewardTypeKey1",
			"value": "777777"
		}
	]
}